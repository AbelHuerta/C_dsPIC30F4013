

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 17 18:01:02 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _LATAbits	set	3977
    56  0000                     _LATBbits	set	3978
    57  0000                     _TRISBbits	set	3987
    58  0000                     _RCONbits	set	4048
    59  0000                     _T0CONbits	set	4053
    60  0000                     _TMR0L	set	4054
    61  0000                     _TMR0H	set	4055
    62  0000                     _INTCONbits	set	4082
    63  0000                     _TRISAbits	set	3986
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68  0000B8                     __pcinit:
    69                           	callstack 0
    70  0000B8                     start_initialization:
    71                           	callstack 0
    72  0000B8                     __initialization:
    73                           	callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (2 bytes)
    76  0000B8  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    77  0000BA  6A07               	clrf	__pbssCOMRAM& (0+255),c
    78  0000BC                     end_of_initialization:
    79                           	callstack 0
    80  0000BC                     __end_of__initialization:
    81                           	callstack 0
    82  0000BC  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  0000BE  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  0000C0  0100               	movlb	0
    85  0000C2  EF31  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssCOMRAM
    88  000007                     __pbssCOMRAM:
    89                           	callstack 0
    90  000007                     _cont:
    91                           	callstack 0
    92  000007                     	ds	2
    93                           
    94                           	psect	cstackCOMRAM
    95  000001                     __pcstackCOMRAM:
    96                           	callstack 0
    97  000001                     ??_Estado:
    98                           
    99                           ; 1 bytes @ 0x0
   100  000001                     	ds	1
   101  000002                     
   102                           ; 2 bytes @ 0x1
   103  000002                     	ds	2
   104  000004                     
   105                           ; 3 bytes @ 0x3
   106  000004                     	ds	3
   107  000007                     
   108                           ; 1 bytes @ 0x6
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 19 in file "main_TIMER0.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;  argc            2    1[COMRAM] int 
   117 ;;  argv            3    3[COMRAM] PTR PTR unsigned char 
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  2    1[COMRAM] int 
   122 ;; Registers used:
   123 ;;		wreg, status,2, status,0, cstack
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   129 ;;      Params:         5       0       0       0       0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0       0       0       0       0
   131 ;;      Temps:          0       0       0       0       0       0       0       0       0
   132 ;;      Totals:         5       0       0       0       0       0       0       0       0
   133 ;;Total ram usage:        5 bytes
   134 ;; Hardware stack levels required when called: 2
   135 ;; This function calls:
   136 ;;		_Interrupt_TIMER
   137 ;;		_Interrupt_global
   138 ;;		_Timer0_enable
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  000062                     __ptext0:
   146                           	callstack 0
   147  000062                     _main:
   148                           	callstack 29
   149  000062                     
   150                           ;main_TIMER0.c: 21:     TRISBbits.TRISB0 = 0;
   151  000062  9093               	bcf	147,0,c	;volatile
   152                           
   153                           ;main_TIMER0.c: 23:     LATBbits.LATB0 = 0;
   154  000064  908A               	bcf	138,0,c	;volatile
   155                           
   156                           ;main_TIMER0.c: 26:     TRISAbits.TRISA0 = 0;
   157  000066  9092               	bcf	146,0,c	;volatile
   158                           
   159                           ;main_TIMER0.c: 28:     LATAbits.LATA0 = 0;
   160  000068  9089               	bcf	137,0,c	;volatile
   161  00006A                     
   162                           ;main_TIMER0.c: 31:     Interrupt_global();
   163  00006A  EC63  F000         	call	_Interrupt_global	;wreg free
   164                           
   165                           ;main_TIMER0.c: 32:     Interrupt_TIMER();
   166  00006E  EC67  F000         	call	_Interrupt_TIMER	;wreg free
   167  000072                     
   168                           ;main_TIMER0.c: 33:     Timer0_enable();
   169  000072  EC4E  F000         	call	_Timer0_enable	;wreg free
   170  000076                     l769:
   171                           
   172                           ;main_TIMER0.c: 37:         if(cont>=10){
   173  000076  BE08               	btfsc	(_cont+1)^0,7,c
   174  000078  EF47  F000         	goto	u51
   175  00007C  5008               	movf	(_cont+1)^0,w,c
   176  00007E  E109               	bnz	u50
   177  000080  0E0A               	movlw	10
   178  000082  5C07               	subwf	_cont^0,w,c
   179  000084  A0D8               	btfss	status,0,c
   180  000086  EF47  F000         	goto	u51
   181  00008A  EF49  F000         	goto	u50
   182  00008E                     u51:
   183  00008E  EF3B  F000         	goto	l769
   184  000092                     u50:
   185  000092                     
   186                           ;main_TIMER0.c: 38:             LATAbits.LATA0 = 1;
   187  000092  8089               	bsf	137,0,c	;volatile
   188  000094  EF3B  F000         	goto	l769
   189  000098  EF07  F000         	goto	start
   190  00009C                     __end_of_main:
   191                           	callstack 0
   192                           
   193 ;; *************** function _Timer0_enable *****************
   194 ;; Defined at:
   195 ;;		line 19 in file "Interrupciones.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   209 ;;      Params:         0       0       0       0       0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels used: 1
   215 ;; Hardware stack levels required when called: 1
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		_main
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text1
   224  00009C                     __ptext1:
   225                           	callstack 0
   226  00009C                     _Timer0_enable:
   227                           	callstack 29
   228  00009C                     
   229                           ;Interrupciones.c: 21:     T0CONbits.TMR0ON = 0;
   230  00009C  9ED5               	bcf	213,7,c	;volatile
   231                           
   232                           ;Interrupciones.c: 23:     T0CONbits.T08BIT = 0;
   233  00009E  9CD5               	bcf	213,6,c	;volatile
   234                           
   235                           ;Interrupciones.c: 25:     T0CONbits.T0CS = 0;
   236  0000A0  9AD5               	bcf	213,5,c	;volatile
   237                           
   238                           ;Interrupciones.c: 27:     T0CONbits.T0SE = 0;
   239  0000A2  98D5               	bcf	213,4,c	;volatile
   240                           
   241                           ;Interrupciones.c: 29:     T0CONbits.PSA = 0;
   242  0000A4  96D5               	bcf	213,3,c	;volatile
   243                           
   244                           ;Interrupciones.c: 31:     T0CONbits.T0PS2 = 1;
   245  0000A6  84D5               	bsf	213,2,c	;volatile
   246                           
   247                           ;Interrupciones.c: 32:     T0CONbits.T0PS1 = 1;
   248  0000A8  82D5               	bsf	213,1,c	;volatile
   249                           
   250                           ;Interrupciones.c: 33:     T0CONbits.T0PS0 = 1;
   251  0000AA  80D5               	bsf	213,0,c	;volatile
   252  0000AC                     
   253                           ;Interrupciones.c: 35:     TMR0H = 0x48;
   254  0000AC  0E48               	movlw	72
   255  0000AE  6ED7               	movwf	215,c	;volatile
   256                           
   257                           ;Interrupciones.c: 36:     TMR0L = 0xE4;
   258  0000B0  0EE4               	movlw	228
   259  0000B2  6ED6               	movwf	214,c	;volatile
   260  0000B4                     
   261                           ;Interrupciones.c: 38:     T0CONbits.TMR0ON = 1;
   262  0000B4  8ED5               	bsf	213,7,c	;volatile
   263  0000B6  0012               	return		;funcret
   264  0000B8                     __end_of_Timer0_enable:
   265                           	callstack 0
   266                           
   267 ;; *************** function _Interrupt_global *****************
   268 ;; Defined at:
   269 ;;		line 42 in file "Interrupciones.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		None
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   283 ;;      Params:         0       0       0       0       0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0       0       0       0       0
   286 ;;      Totals:         0       0       0       0       0       0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels used: 1
   289 ;; Hardware stack levels required when called: 1
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		_main
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text2
   298  0000C6                     __ptext2:
   299                           	callstack 0
   300  0000C6                     _Interrupt_global:
   301                           	callstack 29
   302  0000C6                     
   303                           ;Interrupciones.c: 44:     RCONbits.IPEN = 0;
   304  0000C6  9ED0               	bcf	208,7,c	;volatile
   305                           
   306                           ;Interrupciones.c: 46:     INTCONbits.GIE_GIEH = 1;
   307  0000C8  8EF2               	bsf	242,7,c	;volatile
   308                           
   309                           ;Interrupciones.c: 48:     INTCONbits.PEIE_GIEL = 1;
   310  0000CA  8CF2               	bsf	242,6,c	;volatile
   311  0000CC  0012               	return		;funcret
   312  0000CE                     __end_of_Interrupt_global:
   313                           	callstack 0
   314                           
   315 ;; *************** function _Interrupt_TIMER *****************
   316 ;; Defined at:
   317 ;;		line 51 in file "Interrupciones.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		None
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   331 ;;      Params:         0       0       0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used: 1
   337 ;; Hardware stack levels required when called: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text3
   346  0000CE                     __ptext3:
   347                           	callstack 0
   348  0000CE                     _Interrupt_TIMER:
   349                           	callstack 29
   350  0000CE                     
   351                           ;Interrupciones.c: 53:     INTCONbits.TMR0IE = 1;
   352  0000CE  8AF2               	bsf	242,5,c	;volatile
   353                           
   354                           ;Interrupciones.c: 55:     INTCONbits.TMR0IF = 0;
   355  0000D0  94F2               	bcf	242,2,c	;volatile
   356  0000D2  0012               	return		;funcret
   357  0000D4                     __end_of_Interrupt_TIMER:
   358                           	callstack 0
   359                           
   360 ;; *************** function _Estado *****************
   361 ;; Defined at:
   362 ;;		line 4 in file "Interrupciones.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          1       0       0       0       0       0       0       0       0
   379 ;;      Totals:         1       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		Interrupt level 2
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	intcode
   390  000008                     __pintcode:
   391                           	callstack 0
   392  000008                     _Estado:
   393                           	callstack 29
   394                           
   395                           ;incstack = 0
   396  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   397  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   398                           
   399                           	psect	intcode_body
   400  000012                     __pintcode_body:
   401                           	callstack 29
   402  000012                     int_func:
   403                           	callstack 29
   404  000012  0006               	pop		; remove dummy address from shadow register refresh
   405  000014                     
   406                           ;Interrupciones.c: 6:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
   407  000014  AAF2               	btfss	242,5,c	;volatile
   408  000016  EF0F  F000         	goto	i2u2_41
   409  00001A  EF11  F000         	goto	i2u2_40
   410  00001E                     i2u2_41:
   411  00001E  EF2F  F000         	goto	i2l44
   412  000022                     i2u2_40:
   413  000022  A4F2               	btfss	242,2,c	;volatile
   414  000024  EF16  F000         	goto	i2u3_41
   415  000028  EF18  F000         	goto	i2u3_40
   416  00002C                     i2u3_41:
   417  00002C  EF2F  F000         	goto	i2l44
   418  000030                     i2u3_40:
   419  000030                     
   420                           ;Interrupciones.c: 8:        LATBbits.LATB0 = ~LATBbits.LATB0;
   421  000030  B08A               	btfsc	138,0,c	;volatile
   422  000032  EF1D  F000         	goto	i2u4_41
   423  000036  EF20  F000         	goto	i2u4_40
   424  00003A                     i2u4_41:
   425  00003A  0E01               	movlw	1
   426  00003C  EF21  F000         	goto	i2u4_46
   427  000040                     i2u4_40:
   428  000040  0E00               	movlw	0
   429  000042                     i2u4_46:
   430  000042  0AFF               	xorlw	255
   431  000044  6E01               	movwf	??_Estado^0,c
   432  000046  508A               	movf	138,w,c	;volatile
   433  000048  1801               	xorwf	??_Estado^0,w,c
   434  00004A  0BFE               	andlw	-2
   435  00004C  1801               	xorwf	??_Estado^0,w,c
   436  00004E  6E8A               	movwf	138,c	;volatile
   437  000050                     
   438                           ;Interrupciones.c: 10:        TMR0H = 0x48;
   439  000050  0E48               	movlw	72
   440  000052  6ED7               	movwf	215,c	;volatile
   441  000054                     
   442                           ;Interrupciones.c: 11:        TMR0L = 0xE4;
   443  000054  0EE4               	movlw	228
   444  000056  6ED6               	movwf	214,c	;volatile
   445  000058                     
   446                           ;Interrupciones.c: 13:        INTCONbits.TMR0IF = 0;
   447  000058  94F2               	bcf	242,2,c	;volatile
   448  00005A                     
   449                           ;Interrupciones.c: 15:        cont++;
   450  00005A  4A07               	infsnz	_cont^0,f,c
   451  00005C  2A08               	incf	(_cont+1)^0,f,c
   452  00005E                     i2l44:
   453  00005E  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   454  000060  0011               	retfie		f
   455  000062                     __end_of_Estado:
   456                           	callstack 0
   457  0000                     
   458                           	psect	rparam
   459  0000                     
   460                           	psect	temp
   461  000009                     btemp:
   462                           	callstack 0
   463  000009                     	ds	1
   464  0000                     int$flags	set	btemp
   465  0000                     wtemp8	set	btemp+1
   466  0000                     ttemp5	set	btemp+1
   467  0000                     ttemp6	set	btemp+4
   468  0000                     ttemp7	set	btemp+8
   469                           
   470                           	psect	idloc
   471                           
   472                           ;Config register IDLOC0 @ 0x200000
   473                           ;	unspecified, using default values
   474  200000                     	org	2097152
   475  200000  FF                 	db	255
   476                           
   477                           ;Config register IDLOC1 @ 0x200001
   478                           ;	unspecified, using default values
   479  200001                     	org	2097153
   480  200001  FF                 	db	255
   481                           
   482                           ;Config register IDLOC2 @ 0x200002
   483                           ;	unspecified, using default values
   484  200002                     	org	2097154
   485  200002  FF                 	db	255
   486                           
   487                           ;Config register IDLOC3 @ 0x200003
   488                           ;	unspecified, using default values
   489  200003                     	org	2097155
   490  200003  FF                 	db	255
   491                           
   492                           ;Config register IDLOC4 @ 0x200004
   493                           ;	unspecified, using default values
   494  200004                     	org	2097156
   495  200004  FF                 	db	255
   496                           
   497                           ;Config register IDLOC5 @ 0x200005
   498                           ;	unspecified, using default values
   499  200005                     	org	2097157
   500  200005  FF                 	db	255
   501                           
   502                           ;Config register IDLOC6 @ 0x200006
   503                           ;	unspecified, using default values
   504  200006                     	org	2097158
   505  200006  FF                 	db	255
   506                           
   507                           ;Config register IDLOC7 @ 0x200007
   508                           ;	unspecified, using default values
   509  200007                     	org	2097159
   510  200007  FF                 	db	255
   511                           
   512                           	psect	config
   513                           
   514                           ;Config register CONFIG1L @ 0x300000
   515                           ;	PLL Prescaler Selection bits
   516                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   517                           ;	System Clock Postscaler Selection bits
   518                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   519                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   520                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   521  300000                     	org	3145728
   522  300000  04                 	db	4
   523                           
   524                           ;Config register CONFIG1H @ 0x300001
   525                           ;	Oscillator Selection bits
   526                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   527                           ;	Fail-Safe Clock Monitor Enable bit
   528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   529                           ;	Internal/External Oscillator Switchover bit
   530                           ;	IESO = OFF, Oscillator Switchover mode disabled
   531  300001                     	org	3145729
   532  300001  0E                 	db	14
   533                           
   534                           ;Config register CONFIG2L @ 0x300002
   535                           ;	Power-up Timer Enable bit
   536                           ;	PWRT = ON, PWRT enabled
   537                           ;	Brown-out Reset Enable bits
   538                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   539                           ;	Brown-out Reset Voltage bits
   540                           ;	BORV = 3, Minimum setting 2.05V
   541                           ;	USB Voltage Regulator Enable bit
   542                           ;	VREGEN = OFF, USB voltage regulator disabled
   543  300002                     	org	3145730
   544  300002  18                 	db	24
   545                           
   546                           ;Config register CONFIG2H @ 0x300003
   547                           ;	Watchdog Timer Enable bit
   548                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   549                           ;	Watchdog Timer Postscale Select bits
   550                           ;	WDTPS = 32768, 1:32768
   551  300003                     	org	3145731
   552  300003  1E                 	db	30
   553                           
   554                           ; Padding undefined space
   555  300004                     	org	3145732
   556  300004  FF                 	db	255
   557                           
   558                           ;Config register CONFIG3H @ 0x300005
   559                           ;	CCP2 MUX bit
   560                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   561                           ;	PORTB A/D Enable bit
   562                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   563                           ;	Low-Power Timer 1 Oscillator Enable bit
   564                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   565                           ;	MCLR Pin Enable bit
   566                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   567  300005                     	org	3145733
   568  300005  83                 	db	131
   569                           
   570                           ;Config register CONFIG4L @ 0x300006
   571                           ;	Stack Full/Underflow Reset Enable bit
   572                           ;	STVREN = ON, Stack full/underflow will cause Reset
   573                           ;	Single-Supply ICSP Enable bit
   574                           ;	LVP = OFF, Single-Supply ICSP disabled
   575                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   576                           ;	ICPRT = OFF, ICPORT disabled
   577                           ;	Extended Instruction Set Enable bit
   578                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   579                           ;	Background Debugger Enable bit
   580                           ;	DEBUG = 0x1, unprogrammed default
   581  300006                     	org	3145734
   582  300006  81                 	db	129
   583                           
   584                           ; Padding undefined space
   585  300007                     	org	3145735
   586  300007  FF                 	db	255
   587                           
   588                           ;Config register CONFIG5L @ 0x300008
   589                           ;	Code Protection bit
   590                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   591                           ;	Code Protection bit
   592                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   593                           ;	Code Protection bit
   594                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   595                           ;	Code Protection bit
   596                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   597  300008                     	org	3145736
   598  300008  0F                 	db	15
   599                           
   600                           ;Config register CONFIG5H @ 0x300009
   601                           ;	Boot Block Code Protection bit
   602                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   603                           ;	Data EEPROM Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM is not code-protected
   605  300009                     	org	3145737
   606  300009  C0                 	db	192
   607                           
   608                           ;Config register CONFIG6L @ 0x30000A
   609                           ;	Write Protection bit
   610                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   611                           ;	Write Protection bit
   612                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   613                           ;	Write Protection bit
   614                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   615                           ;	Write Protection bit
   616                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   617  30000A                     	org	3145738
   618  30000A  0F                 	db	15
   619                           
   620                           ;Config register CONFIG6H @ 0x30000B
   621                           ;	Configuration Register Write Protection bit
   622                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   623                           ;	Boot Block Write Protection bit
   624                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   625                           ;	Data EEPROM Write Protection bit
   626                           ;	WRTD = OFF, Data EEPROM is not write-protected
   627  30000B                     	org	3145739
   628  30000B  E0                 	db	224
   629                           
   630                           ;Config register CONFIG7L @ 0x30000C
   631                           ;	Table Read Protection bit
   632                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   633                           ;	Table Read Protection bit
   634                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   635                           ;	Table Read Protection bit
   636                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   637                           ;	Table Read Protection bit
   638                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   639  30000C                     	org	3145740
   640  30000C  0F                 	db	15
   641                           
   642                           ;Config register CONFIG7H @ 0x30000D
   643                           ;	Boot Block Table Read Protection bit
   644                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   645  30000D                     	org	3145741
   646  30000D  40                 	db	64
   647                           tosu	equ	0xFFF
   648                           tosh	equ	0xFFE
   649                           tosl	equ	0xFFD
   650                           stkptr	equ	0xFFC
   651                           pclatu	equ	0xFFB
   652                           pclath	equ	0xFFA
   653                           pcl	equ	0xFF9
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           prodh	equ	0xFF4
   659                           prodl	equ	0xFF3
   660                           indf0	equ	0xFEF
   661                           postinc0	equ	0xFEE
   662                           postdec0	equ	0xFED
   663                           preinc0	equ	0xFEC
   664                           plusw0	equ	0xFEB
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           wreg	equ	0xFE8
   668                           indf1	equ	0xFE7
   669                           postinc1	equ	0xFE6
   670                           postdec1	equ	0xFE5
   671                           preinc1	equ	0xFE4
   672                           plusw1	equ	0xFE3
   673                           fsr1h	equ	0xFE2
   674                           fsr1l	equ	0xFE1
   675                           bsr	equ	0xFE0
   676                           indf2	equ	0xFDF
   677                           postinc2	equ	0xFDE
   678                           postdec2	equ	0xFDD
   679                           preinc2	equ	0xFDC
   680                           plusw2	equ	0xFDB
   681                           fsr2h	equ	0xFDA
   682                           fsr2l	equ	0xFD9
   683                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Estado in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Estado in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Estado in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Estado in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Estado in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Estado in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Estado in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Estado in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Estado in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                              1 COMRAM     5     0      5
                    _Interrupt_TIMER
                   _Interrupt_global
                      _Timer0_enable
 ---------------------------------------------------------------------------------
 (1) _Timer0_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_global                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_TIMER                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Estado                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_TIMER
   _Interrupt_global
   _Timer0_enable

 _Estado (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       8       1        8.5%
BITBIGSFRhlll       3C      0       0      24        0.0%
BITBIGSFRll         29      0       0      26        0.0%
BITBIGSFRhlh        1A      0       0      22        0.0%
BITBIGSFRhh          D      0       0      21        0.0%
BITBIGSFRlh          7      0       0      25        0.0%
BITBIGSFRhllh        4      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       3        0.0%
DATA                 0      0       8       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 17 18:01:02 2023

                      l50 00CC                        l53 00D2                        l47 00B6  
                      u50 0092                        u51 008E         ?_Interrupt_global 0001  
                     l731 00CE                       l733 009C                       l735 00AC  
                     l729 00C6                       l737 00B4                       l771 0092  
                     l763 0062                       l765 006A                       l767 0072  
                     l769 0076        ??_Interrupt_global 0002                      i2l44 005E  
                    _cont 0007                      _main 0062                      btemp 0009  
                    start 000E              ___param_bank 000000                     ?_main 0002  
                   i2l751 0022                     i2l761 005A                     i2l753 0030  
                   i2l755 0050                     i2l757 0054                     i2l749 0014  
                   i2l759 0058                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   ttemp5 000A                     ttemp6 000D                     ttemp7 0011  
                   status 000FD8                     wtemp8 000A     __end_of_Timer0_enable 00B8  
         __initialization 00B8              __end_of_main 009C                    ??_main 0007  
           __activetblptr 000000                    i2u2_40 0022                    i2u2_41 001E  
                  i2u3_40 0030                    i2u3_41 002C                    i2u4_40 0040  
                  i2u4_41 003A                    i2u4_46 0042                    _Estado 0008  
                  isa$std 000001           _Interrupt_TIMER 00CE                __accesstop 0060  
 __end_of__initialization 00BC             ___rparam_used 000001            __pcstackCOMRAM 0001  
                 ?_Estado 0001   __end_of_Interrupt_TIMER 00D4                   __Hparam 0000  
                 __Lparam 0000                   __pcinit 00B8                   __ramtop 0800  
                 __ptext0 0062                   __ptext1 009C                   __ptext2 00C6  
                 __ptext3 00CE                 _T0CONbits 000FD5            __pintcode_body 0012  
    end_of_initialization 00BC                   int_func 0012          ?_Interrupt_TIMER 0001  
               _TRISAbits 000F92                 _TRISBbits 000F93          _Interrupt_global 00C6  
          __end_of_Estado 0062       start_initialization 00B8                  ??_Estado 0001  
           _Timer0_enable 009C               __pbssCOMRAM 0007            ?_Timer0_enable 0001  
               __pintcode 0008                  _LATAbits 000F89                  _LATBbits 000F8A  
                _RCONbits 000FD0  __end_of_Interrupt_global 00CE           ??_Timer0_enable 0002  
                __Hrparam 0000                  __Lrparam 0000                  isa$xinst 000000  
                int$flags 0009                  main@argc 0002                  main@argv 0004  
              _INTCONbits 000FF2                  intlevel2 0000         ??_Interrupt_TIMER 0002  
