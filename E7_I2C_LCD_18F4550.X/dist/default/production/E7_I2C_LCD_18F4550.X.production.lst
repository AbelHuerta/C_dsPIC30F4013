

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 23 16:34:32 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _SSPCON2bits	set	4037
    61  0000                     _TRISBbits	set	3987
    62  0000                     _ADCON1	set	4033
    63  0000                     _SSPCON2	set	4037
    64  0000                     _SSPCON1bits	set	4038
    65  0000                     _SSPSTATbits	set	4039
    66  0000                     _PIR1bits	set	3998
    67  0000                     _SSPBUF	set	4041
    68  0000                     _SSPADD	set	4040
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	callstack 0
    73  000800  00                 	db	0
    74  000801                     STR_3:
    75  000801  20                 	db	32
    76  000802  20                 	db	32
    77  000803  20                 	db	32
    78  000804  20                 	db	32
    79  000805  20                 	db	32
    80  000806  20                 	db	32
    81  000807  20                 	db	32
    82  000808  20                 	db	32
    83  000809  49                 	db	73	;'I'
    84  00080A  32                 	db	50	;'2'
    85  00080B  43                 	db	67	;'C'
    86  00080C  20                 	db	32
    87  00080D  20                 	db	32
    88  00080E  20                 	db	32
    89  00080F  20                 	db	32
    90  000810  20                 	db	32
    91  000811  20                 	db	32
    92  000812  20                 	db	32
    93  000813  20                 	db	32
    94  000814  20                 	db	32
    95  000815  00                 	db	0
    96  000816                     STR_2:
    97  000816  20                 	db	32
    98  000817  20                 	db	32
    99  000818  20                 	db	32
   100  000819  20                 	db	32
   101  00081A  20                 	db	32
   102  00081B  20                 	db	32
   103  00081C  20                 	db	32
   104  00081D  20                 	db	32
   105  00081E  4C                 	db	76	;'L'
   106  00081F  43                 	db	67	;'C'
   107  000820  44                 	db	68	;'D'
   108  000821  20                 	db	32
   109  000822  20                 	db	32
   110  000823  20                 	db	32
   111  000824  20                 	db	32
   112  000825  20                 	db	32
   113  000826  20                 	db	32
   114  000827  20                 	db	32
   115  000828  20                 	db	32
   116  000829  20                 	db	32
   117  00082A  00                 	db	0
   118  00082B                     STR_1:
   119  00082B  2D                 	db	45
   120  00082C  2D                 	db	45
   121  00082D  2D                 	db	45
   122  00082E  2D                 	db	45
   123  00082F  2D                 	db	45
   124  000830  2D                 	db	45
   125  000831  2D                 	db	45
   126  000832  50                 	db	80	;'P'
   127  000833  52                 	db	82	;'R'
   128  000834  55                 	db	85	;'U'
   129  000835  45                 	db	69	;'E'
   130  000836  42                 	db	66	;'B'
   131  000837  41                 	db	65	;'A'
   132  000838  2D                 	db	45
   133  000839  2D                 	db	45
   134  00083A  2D                 	db	45
   135  00083B  2D                 	db	45
   136  00083C  2D                 	db	45
   137  00083D  2D                 	db	45
   138  00083E  2D                 	db	45
   139  00083F  00                 	db	0
   140  000840                     STR_4:
   141  000840  2D                 	db	45
   142  000841  2D                 	db	45
   143  000842  2D                 	db	45
   144  000843  2D                 	db	45
   145  000844  2D                 	db	45
   146  000845  50                 	db	80	;'P'
   147  000846  49                 	db	73	;'I'
   148  000847  43                 	db	67	;'C'
   149  000848  31                 	db	49	;'1'
   150  000849  38                 	db	56	;'8'
   151  00084A  46                 	db	70	;'F'
   152  00084B  34                 	db	52	;'4'
   153  00084C  35                 	db	53	;'5'
   154  00084D  35                 	db	53	;'5'
   155  00084E  30                 	db	48	;'0'
   156  00084F  2D                 	db	45
   157  000850  2D                 	db	45
   158  000851  2D                 	db	45
   159  000852  2D                 	db	45
   160  000853  2D                 	db	45
   161  000854  00                 	db	0
   162  000855  00                 	db	0	; dummy byte at the end
   163  0000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167  000C18                     __pcinit:
   168                           	callstack 0
   169  000C18                     start_initialization:
   170                           	callstack 0
   171  000C18                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Clear objects allocated to COMRAM (2 bytes)
   175  000C18  6A17               	clrf	(__pbssCOMRAM+1)& (0+255),c
   176  000C1A  6A16               	clrf	__pbssCOMRAM& (0+255),c
   177  000C1C                     end_of_initialization:
   178                           	callstack 0
   179  000C1C                     __end_of__initialization:
   180                           	callstack 0
   181  000C1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182  000C1E  6EF8               	movwf	tblptru,c
   183  000C20  0100               	movlb	0
   184  000C22  EF80  F005         	goto	_main	;jump to C main() function
   185                           
   186                           	psect	bssCOMRAM
   187  000016                     __pbssCOMRAM:
   188                           	callstack 0
   189  000016                     _i:
   190                           	callstack 0
   191  000016                     	ds	2
   192                           
   193                           	psect	cstackCOMRAM
   194  000001                     __pcstackCOMRAM:
   195                           	callstack 0
   196  000001                     I2C_ADDRESS_SLAVE@modo:
   197                           	callstack 0
   198  000001                     I2C_Write_Data@data:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x0
   202  000001                     	ds	1
   203  000002                     ??_I2C_ADDRESS_SLAVE:
   204                           
   205                           ; 1 bytes @ 0x1
   206  000002                     	ds	1
   207  000003                     I2C_ADDRESS_SLAVE@address:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x2
   211  000003                     	ds	1
   212  000004                     I2C_ADDRESS_SLAVE@data:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x3
   216  000004                     	ds	1
   217  000005                     PCF8574_Write@byte:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x4
   221  000005                     	ds	1
   222  000006                     LCD_I2C_Databus@cmd:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x5
   226  000006                     	ds	1
   227  000007                     LCD_I2C_Databus@ctrl:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x6
   231  000007                     	ds	1
   232  000008                     LCD_I2C_Databus@data:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x7
   236  000008                     	ds	1
   237  000009                     LCD_I2C_nibble@cmd:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x8
   241  000009                     	ds	1
   242  00000A                     LCD_I2C_nibble@ctrl:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x9
   246  00000A                     	ds	1
   247  00000B                     ??_LCD_I2C_Init:
   248  00000B                     LCD_I2C_WriteText@col:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0xA
   252  00000B                     	ds	1
   253  00000C                     LCD_I2C_WriteText@string:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xB
   257  00000C                     	ds	2
   258  00000E                     ??_LCD_I2C_WriteText:
   259                           
   260                           ; 1 bytes @ 0xD
   261  00000E                     	ds	2
   262  000010                     LCD_I2C_WriteText@row:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0xF
   266  000010                     	ds	1
   267  000011                     
   268                           ; 2 bytes @ 0x10
   269  000011                     	ds	2
   270  000013                     
   271                           ; 3 bytes @ 0x12
   272  000013                     	ds	3
   273  000016                     
   274                           ; 1 bytes @ 0x15
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 23 in file "Main_I2C_LCD.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;  argc            2   16[COMRAM] int 
   283 ;;  argv            3   18[COMRAM] PTR PTR unsigned char 
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  2   16[COMRAM] int 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   295 ;;      Params:         5       0       0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0
   298 ;;      Totals:         5       0       0       0       0       0       0       0       0
   299 ;;Total ram usage:        5 bytes
   300 ;; Hardware stack levels required when called: 5
   301 ;; This function calls:
   302 ;;		_LCD_I2C_Init
   303 ;;		_LCD_I2C_WriteText
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  000B00                     __ptext0:
   311                           	callstack 0
   312  000B00                     _main:
   313                           	callstack 26
   314  000B00                     
   315                           ;Main_I2C_LCD.c: 24:     ADCON1 = 0x0F;
   316  000B00  0E0F               	movlw	15
   317  000B02  6EC1               	movwf	193,c	;volatile
   318  000B04                     
   319                           ;Main_I2C_LCD.c: 32:     LCD_I2C_Init();
   320  000B04  EC2B  F004         	call	_LCD_I2C_Init	;wreg free
   321  000B08                     
   322                           ;Main_I2C_LCD.c: 34:     LCD_I2C_WriteText(0,0,"-------PRUEBA-------");
   323  000B08  0E00               	movlw	0
   324  000B0A  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   325  000B0C  0E2B               	movlw	low STR_1
   326  000B0E  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   327  000B10  0E08               	movlw	high STR_1
   328  000B12  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   329  000B14  0E00               	movlw	0
   330  000B16  ECB6  F004         	call	_LCD_I2C_WriteText
   331  000B1A                     
   332                           ;Main_I2C_LCD.c: 35:     LCD_I2C_WriteText(1,0,"        LCD         ");
   333  000B1A  0E00               	movlw	0
   334  000B1C  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   335  000B1E  0E16               	movlw	low STR_2
   336  000B20  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   337  000B22  0E08               	movlw	high STR_2
   338  000B24  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   339  000B26  0E01               	movlw	1
   340  000B28  ECB6  F004         	call	_LCD_I2C_WriteText
   341  000B2C                     
   342                           ;Main_I2C_LCD.c: 36:     LCD_I2C_WriteText(2,0,"        I2C         ");
   343  000B2C  0E00               	movlw	0
   344  000B2E  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   345  000B30  0E01               	movlw	low STR_3
   346  000B32  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   347  000B34  0E08               	movlw	high STR_3
   348  000B36  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   349  000B38  0E02               	movlw	2
   350  000B3A  ECB6  F004         	call	_LCD_I2C_WriteText
   351  000B3E                     
   352                           ;Main_I2C_LCD.c: 37:     LCD_I2C_WriteText(3,0,"-----PIC18F4550-----");
   353  000B3E  0E00               	movlw	0
   354  000B40  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   355  000B42  0E40               	movlw	low STR_4
   356  000B44  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   357  000B46  0E08               	movlw	high STR_4
   358  000B48  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   359  000B4A  0E03               	movlw	3
   360  000B4C  ECB6  F004         	call	_LCD_I2C_WriteText
   361  000B50                     l13:
   362                           
   363                           ;Main_I2C_LCD.c: 42:     }
   364  000B50  EFA8  F005         	goto	l13
   365  000B54  EF00  F000         	goto	start
   366  000B58                     __end_of_main:
   367                           	callstack 0
   368                           
   369 ;; *************** function _LCD_I2C_WriteText *****************
   370 ;; Defined at:
   371 ;;		line 109 in file "LCD_I2C.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  row             1    wreg     unsigned char 
   374 ;;  col             1   10[COMRAM] unsigned char 
   375 ;;  string          2   11[COMRAM] PTR unsigned char 
   376 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  row             1   15[COMRAM] unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   388 ;;      Params:         3       0       0       0       0       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0       0       0       0       0
   390 ;;      Temps:          2       0       0       0       0       0       0       0       0
   391 ;;      Totals:         6       0       0       0       0       0       0       0       0
   392 ;;Total ram usage:        6 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 4
   395 ;; This function calls:
   396 ;;		_LCD_I2C_nibble
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  00096C                     __ptext1:
   404                           	callstack 0
   405  00096C                     _LCD_I2C_WriteText:
   406                           	callstack 26
   407                           
   408                           ;incstack = 0
   409                           ;LCD_I2C_WriteText@row stored from wreg
   410  00096C  6E10               	movwf	LCD_I2C_WriteText@row^0,c
   411  00096E                     
   412                           ;LCD_I2C.c: 112:     switch (row) {
   413  00096E  EFEB  F004         	goto	l1085
   414  000972                     l1063:
   415  000972  500B               	movf	LCD_I2C_WriteText@col^0,w,c
   416  000974  0F80               	addlw	128
   417  000976  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   418  000978                     
   419                           ;LCD_I2C.c: 114:                 LCD_I2C_nibble(0x00,col);
   420  000978  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   421  00097C  0E00               	movlw	0
   422  00097E  ECD1  F005         	call	_LCD_I2C_nibble
   423                           
   424                           ;LCD_I2C.c: 115:                 break;
   425  000982  EF14  F005         	goto	l1091
   426  000986                     l1067:
   427  000986  500B               	movf	LCD_I2C_WriteText@col^0,w,c
   428  000988  0FC0               	addlw	192
   429  00098A  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   430  00098C                     
   431                           ;LCD_I2C.c: 118:                 LCD_I2C_nibble(0x00,col);
   432  00098C  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   433  000990  0E00               	movlw	0
   434  000992  ECD1  F005         	call	_LCD_I2C_nibble
   435                           
   436                           ;LCD_I2C.c: 119:                 break;
   437  000996  EF14  F005         	goto	l1091
   438  00099A                     l1071:
   439  00099A  500B               	movf	LCD_I2C_WriteText@col^0,w,c
   440  00099C  0F94               	addlw	148
   441  00099E  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   442  0009A0                     
   443                           ;LCD_I2C.c: 122:                 LCD_I2C_nibble(0x00,col);
   444  0009A0  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   445  0009A4  0E00               	movlw	0
   446  0009A6  ECD1  F005         	call	_LCD_I2C_nibble
   447                           
   448                           ;LCD_I2C.c: 123:                 break;
   449  0009AA  EF14  F005         	goto	l1091
   450  0009AE                     l1075:
   451  0009AE  500B               	movf	LCD_I2C_WriteText@col^0,w,c
   452  0009B0  0FD4               	addlw	212
   453  0009B2  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   454  0009B4                     
   455                           ;LCD_I2C.c: 126:                 LCD_I2C_nibble(0x00,col);
   456  0009B4  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   457  0009B8  0E00               	movlw	0
   458  0009BA  ECD1  F005         	call	_LCD_I2C_nibble
   459                           
   460                           ;LCD_I2C.c: 127:                 break;
   461  0009BE  EF14  F005         	goto	l1091
   462  0009C2                     l1079:
   463  0009C2  500B               	movf	LCD_I2C_WriteText@col^0,w,c
   464  0009C4  0F80               	addlw	128
   465  0009C6  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   466  0009C8                     
   467                           ;LCD_I2C.c: 130:                 LCD_I2C_nibble(0x00,col);
   468  0009C8  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   469  0009CC  0E00               	movlw	0
   470  0009CE  ECD1  F005         	call	_LCD_I2C_nibble
   471                           
   472                           ;LCD_I2C.c: 131:                 break;
   473  0009D2  EF14  F005         	goto	l1091
   474  0009D6                     l1085:
   475  0009D6  5010               	movf	LCD_I2C_WriteText@row^0,w,c
   476  0009D8  6E0E               	movwf	??_LCD_I2C_WriteText^0,c
   477  0009DA  6A0F               	clrf	(??_LCD_I2C_WriteText+1)^0,c
   478                           
   479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   480                           ; Switch size 1, requested type "simple"
   481                           ; Number of cases is 1, Range of values is 0 to 0
   482                           ; switch strategies available:
   483                           ; Name         Instructions Cycles
   484                           ; simple_byte            4     3 (average)
   485                           ;	Chosen strategy is simple_byte
   486  0009DC  500F               	movf	(??_LCD_I2C_WriteText+1)^0,w,c
   487  0009DE  0A00               	xorlw	0	; case 0
   488  0009E0  B4D8               	btfsc	status,2,c
   489  0009E2  EFF5  F004         	goto	l1113
   490  0009E6  EFE1  F004         	goto	l1079
   491  0009EA                     l1113:
   492                           
   493                           ; Switch size 1, requested type "simple"
   494                           ; Number of cases is 4, Range of values is 0 to 3
   495                           ; switch strategies available:
   496                           ; Name         Instructions Cycles
   497                           ; simple_byte           13     7 (average)
   498                           ;	Chosen strategy is simple_byte
   499  0009EA  500E               	movf	??_LCD_I2C_WriteText^0,w,c
   500  0009EC  0A00               	xorlw	0	; case 0
   501  0009EE  B4D8               	btfsc	status,2,c
   502  0009F0  EFB9  F004         	goto	l1063
   503  0009F4  0A01               	xorlw	1	; case 1
   504  0009F6  B4D8               	btfsc	status,2,c
   505  0009F8  EFC3  F004         	goto	l1067
   506  0009FC  0A03               	xorlw	3	; case 2
   507  0009FE  B4D8               	btfsc	status,2,c
   508  000A00  EFCD  F004         	goto	l1071
   509  000A04  0A01               	xorlw	1	; case 3
   510  000A06  B4D8               	btfsc	status,2,c
   511  000A08  EFD7  F004         	goto	l1075
   512  000A0C  EFE1  F004         	goto	l1079
   513  000A10                     l1087:
   514                           
   515                           ;LCD_I2C.c: 138:         LCD_I2C_nibble(0x01,*string++);
   516  000A10  C00C  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
   517  000A14  C00D  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
   518  000A18                     	if	0	;tblptru may be non-zero
   519  000A18                     	endif
   520  000A18                     	if	0	;tblptru may be non-zero
   521  000A18                     	endif
   522  000A18  0008               	tblrd		*
   523  000A1A  CFF5 F009          	movff	tablat,LCD_I2C_nibble@cmd
   524  000A1E  0E01               	movlw	1
   525  000A20  ECD1  F005         	call	_LCD_I2C_nibble
   526  000A24  4A0C               	infsnz	LCD_I2C_WriteText@string^0,f,c
   527  000A26  2A0D               	incf	(LCD_I2C_WriteText@string+1)^0,f,c
   528  000A28                     l1091:
   529                           
   530                           ;LCD_I2C.c: 137:     while (*string)
   531  000A28  C00C  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
   532  000A2C  C00D  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
   533  000A30                     	if	0	;tblptru may be non-zero
   534  000A30                     	endif
   535  000A30                     	if	0	;tblptru may be non-zero
   536  000A30                     	endif
   537  000A30  0008               	tblrd		*
   538  000A32  50F5               	movf	tablat,w,c
   539  000A34  0900               	iorlw	0
   540  000A36  A4D8               	btfss	status,2,c
   541  000A38  EF20  F005         	goto	u171
   542  000A3C  EF22  F005         	goto	u170
   543  000A40                     u171:
   544  000A40  EF08  F005         	goto	l1087
   545  000A44                     u170:
   546  000A44  0012               	return		;funcret
   547  000A46                     __end_of_LCD_I2C_WriteText:
   548                           	callstack 0
   549                           
   550 ;; *************** function _LCD_I2C_Init *****************
   551 ;; Defined at:
   552 ;;		line 61 in file "LCD_I2C.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         0       0       0       0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 4
   573 ;; This function calls:
   574 ;;		_I2C_ADDRESS_SLAVE
   575 ;;		_I2C_Start
   576 ;;		_I2C_Stop
   577 ;;		_I2C_Write_Data
   578 ;;		_LCD_I2C_Databus
   579 ;;		_LCD_I2C_nibble
   580 ;;		_Master_Mode
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text2
   587  000856                     __ptext2:
   588                           	callstack 0
   589  000856                     _LCD_I2C_Init:
   590                           	callstack 26
   591  000856                     
   592                           ;LCD_I2C.c: 63:     Master_Mode();
   593  000856  ECED  F005         	call	_Master_Mode	;wreg free
   594  00085A                     
   595                           ;LCD_I2C.c: 64:     I2C_Start();
   596  00085A  EC03  F006         	call	_I2C_Start	;wreg free
   597  00085E                     
   598                           ;LCD_I2C.c: 65:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
   599  00085E  0E00               	movlw	0
   600  000860  6E01               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
   601  000862  0E4E               	movlw	78
   602  000864  ECAC  F005         	call	_I2C_ADDRESS_SLAVE
   603  000868                     
   604                           ;LCD_I2C.c: 66:     I2C_Write_Data(0x00);
   605  000868  0E00               	movlw	0
   606  00086A  ECDF  F005         	call	_I2C_Write_Data
   607  00086E                     
   608                           ;LCD_I2C.c: 67:     I2C_Stop();
   609  00086E  ECFA  F005         	call	_I2C_Stop	;wreg free
   610  000872                     
   611                           ;LCD_I2C.c: 68:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   612  000872  0E62               	movlw	98
   613  000874  6E0B               	movwf	??_LCD_I2C_Init^0,c
   614  000876  0E66               	movlw	102
   615  000878                     u187:
   616  000878  2EE8               	decfsz	wreg,f,c
   617  00087A  D7FE               	bra	u187
   618  00087C  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   619  00087E  D7FC               	bra	u187
   620  000880                     
   621                           ;LCD_I2C.c: 86:     LCD_I2C_Databus(0,0x03);
   622  000880  0E03               	movlw	3
   623  000882  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   624  000884  0E00               	movlw	0
   625  000886  EC23  F005         	call	_LCD_I2C_Databus
   626  00088A                     
   627                           ;LCD_I2C.c: 87:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   628  00088A  0E21               	movlw	33
   629  00088C  6E0B               	movwf	??_LCD_I2C_Init^0,c
   630  00088E  0E76               	movlw	118
   631  000890                     u197:
   632  000890  2EE8               	decfsz	wreg,f,c
   633  000892  D7FE               	bra	u197
   634  000894  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   635  000896  D7FC               	bra	u197
   636  000898  D000               	nop2	
   637  00089A                     
   638                           ;LCD_I2C.c: 89:     LCD_I2C_Databus(0,0x03);
   639  00089A  0E03               	movlw	3
   640  00089C  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   641  00089E  0E00               	movlw	0
   642  0008A0  EC23  F005         	call	_LCD_I2C_Databus
   643  0008A4                     
   644                           ;LCD_I2C.c: 90:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   645  0008A4  0E21               	movlw	33
   646  0008A6  6E0B               	movwf	??_LCD_I2C_Init^0,c
   647  0008A8  0E76               	movlw	118
   648  0008AA                     u207:
   649  0008AA  2EE8               	decfsz	wreg,f,c
   650  0008AC  D7FE               	bra	u207
   651  0008AE  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   652  0008B0  D7FC               	bra	u207
   653  0008B2  D000               	nop2	
   654  0008B4                     
   655                           ;LCD_I2C.c: 92:     LCD_I2C_Databus(0,0x03);
   656  0008B4  0E03               	movlw	3
   657  0008B6  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   658  0008B8  0E00               	movlw	0
   659  0008BA  EC23  F005         	call	_LCD_I2C_Databus
   660  0008BE                     
   661                           ;LCD_I2C.c: 93:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   662  0008BE  0E21               	movlw	33
   663  0008C0  6E0B               	movwf	??_LCD_I2C_Init^0,c
   664  0008C2  0E76               	movlw	118
   665  0008C4                     u217:
   666  0008C4  2EE8               	decfsz	wreg,f,c
   667  0008C6  D7FE               	bra	u217
   668  0008C8  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   669  0008CA  D7FC               	bra	u217
   670  0008CC  D000               	nop2	
   671  0008CE                     
   672                           ;LCD_I2C.c: 95:     LCD_I2C_Databus(0,0x02);
   673  0008CE  0E02               	movlw	2
   674  0008D0  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   675  0008D2  0E00               	movlw	0
   676  0008D4  EC23  F005         	call	_LCD_I2C_Databus
   677  0008D8                     
   678                           ;LCD_I2C.c: 96:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   679  0008D8  0E21               	movlw	33
   680  0008DA  6E0B               	movwf	??_LCD_I2C_Init^0,c
   681  0008DC  0E76               	movlw	118
   682  0008DE                     u227:
   683  0008DE  2EE8               	decfsz	wreg,f,c
   684  0008E0  D7FE               	bra	u227
   685  0008E2  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   686  0008E4  D7FC               	bra	u227
   687  0008E6  D000               	nop2	
   688  0008E8                     
   689                           ;LCD_I2C.c: 97:     LCD_I2C_nibble(0,0x028);
   690  0008E8  0E28               	movlw	40
   691  0008EA  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
   692  0008EC  0E00               	movlw	0
   693  0008EE  ECD1  F005         	call	_LCD_I2C_nibble
   694  0008F2                     
   695                           ;LCD_I2C.c: 98:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   696  0008F2  0E21               	movlw	33
   697  0008F4  6E0B               	movwf	??_LCD_I2C_Init^0,c
   698  0008F6  0E76               	movlw	118
   699  0008F8                     u237:
   700  0008F8  2EE8               	decfsz	wreg,f,c
   701  0008FA  D7FE               	bra	u237
   702  0008FC  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   703  0008FE  D7FC               	bra	u237
   704  000900  D000               	nop2	
   705  000902                     
   706                           ;LCD_I2C.c: 99:     LCD_I2C_nibble(0,0x08);
   707  000902  0E08               	movlw	8
   708  000904  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
   709  000906  0E00               	movlw	0
   710  000908  ECD1  F005         	call	_LCD_I2C_nibble
   711  00090C                     
   712                           ;LCD_I2C.c: 100:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   713  00090C  0E21               	movlw	33
   714  00090E  6E0B               	movwf	??_LCD_I2C_Init^0,c
   715  000910  0E76               	movlw	118
   716  000912                     u247:
   717  000912  2EE8               	decfsz	wreg,f,c
   718  000914  D7FE               	bra	u247
   719  000916  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   720  000918  D7FC               	bra	u247
   721  00091A  D000               	nop2	
   722  00091C                     
   723                           ;LCD_I2C.c: 101:     LCD_I2C_nibble(0,0x01);
   724  00091C  0E01               	movlw	1
   725  00091E  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
   726  000920  0E00               	movlw	0
   727  000922  ECD1  F005         	call	_LCD_I2C_nibble
   728  000926                     
   729                           ;LCD_I2C.c: 102:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   730  000926  0E21               	movlw	33
   731  000928  6E0B               	movwf	??_LCD_I2C_Init^0,c
   732  00092A  0E76               	movlw	118
   733  00092C                     u257:
   734  00092C  2EE8               	decfsz	wreg,f,c
   735  00092E  D7FE               	bra	u257
   736  000930  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   737  000932  D7FC               	bra	u257
   738  000934  D000               	nop2	
   739  000936                     
   740                           ;LCD_I2C.c: 103:     LCD_I2C_nibble(0,0x06);
   741  000936  0E06               	movlw	6
   742  000938  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
   743  00093A  0E00               	movlw	0
   744  00093C  ECD1  F005         	call	_LCD_I2C_nibble
   745  000940                     
   746                           ;LCD_I2C.c: 104:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   747  000940  0E21               	movlw	33
   748  000942  6E0B               	movwf	??_LCD_I2C_Init^0,c
   749  000944  0E76               	movlw	118
   750  000946                     u267:
   751  000946  2EE8               	decfsz	wreg,f,c
   752  000948  D7FE               	bra	u267
   753  00094A  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   754  00094C  D7FC               	bra	u267
   755  00094E  D000               	nop2	
   756  000950                     
   757                           ;LCD_I2C.c: 105:     LCD_I2C_nibble(0,0x0F);
   758  000950  0E0F               	movlw	15
   759  000952  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
   760  000954  0E00               	movlw	0
   761  000956  ECD1  F005         	call	_LCD_I2C_nibble
   762  00095A                     
   763                           ;LCD_I2C.c: 106:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   764  00095A  0E21               	movlw	33
   765  00095C  6E0B               	movwf	??_LCD_I2C_Init^0,c
   766  00095E  0E76               	movlw	118
   767  000960                     u277:
   768  000960  2EE8               	decfsz	wreg,f,c
   769  000962  D7FE               	bra	u277
   770  000964  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
   771  000966  D7FC               	bra	u277
   772  000968  D000               	nop2	
   773  00096A  0012               	return		;funcret
   774  00096C                     __end_of_LCD_I2C_Init:
   775                           	callstack 0
   776                           
   777 ;; *************** function _Master_Mode *****************
   778 ;; Defined at:
   779 ;;		line 12 in file "I2C.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   793 ;;      Params:         0       0       0       0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_LCD_I2C_Init
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text3
   807  000BDA                     __ptext3:
   808                           	callstack 0
   809  000BDA                     _Master_Mode:
   810                           	callstack 29
   811  000BDA                     
   812                           ;I2C.c: 14:     TRISBbits.RB0 = 1;
   813  000BDA  8093               	bsf	147,0,c	;volatile
   814                           
   815                           ;I2C.c: 15:     TRISBbits.RB1 = 1;
   816  000BDC  8293               	bsf	147,1,c	;volatile
   817                           
   818                           ;I2C.c: 17:     SSPSTATbits.SMP = 1;
   819  000BDE  8EC7               	bsf	199,7,c	;volatile
   820                           
   821                           ;I2C.c: 19:     SSPCON1bits.SSPEN = 1;
   822  000BE0  8AC6               	bsf	198,5,c	;volatile
   823                           
   824                           ;I2C.c: 21:     SSPCON1bits.SSPM3 = 1;
   825  000BE2  86C6               	bsf	198,3,c	;volatile
   826                           
   827                           ;I2C.c: 22:     SSPCON1bits.SSPM2 = 0;
   828  000BE4  94C6               	bcf	198,2,c	;volatile
   829                           
   830                           ;I2C.c: 23:     SSPCON1bits.SSPM1 = 0;
   831  000BE6  92C6               	bcf	198,1,c	;volatile
   832                           
   833                           ;I2C.c: 24:     SSPCON1bits.SSPM0 = 0;
   834  000BE8  90C6               	bcf	198,0,c	;volatile
   835  000BEA                     
   836                           ;I2C.c: 35:     SSPADD = (uint8_t)(((48000000UL/4)/100000UL) - 1);
   837  000BEA  0E77               	movlw	119
   838  000BEC  6EC8               	movwf	200,c	;volatile
   839                           
   840                           ;I2C.c: 36:     SSPCON2 = 0x00;
   841  000BEE  0E00               	movlw	0
   842  000BF0  6EC5               	movwf	197,c	;volatile
   843  000BF2  0012               	return		;funcret
   844  000BF4                     __end_of_Master_Mode:
   845                           	callstack 0
   846                           
   847 ;; *************** function _LCD_I2C_nibble *****************
   848 ;; Defined at:
   849 ;;		line 53 in file "LCD_I2C.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  ctrl            1    wreg     unsigned char 
   852 ;;  cmd             1    8[COMRAM] unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  ctrl            1    9[COMRAM] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         1       0       0       0       0       0       0       0       0
   865 ;;      Locals:         1       0       0       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 3
   871 ;; This function calls:
   872 ;;		_LCD_I2C_Databus
   873 ;; This function is called by:
   874 ;;		_LCD_I2C_Init
   875 ;;		_LCD_I2C_WriteText
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text4
   880  000BA2                     __ptext4:
   881                           	callstack 0
   882  000BA2                     _LCD_I2C_nibble:
   883                           	callstack 26
   884                           
   885                           ;incstack = 0
   886                           ;LCD_I2C_nibble@ctrl stored from wreg
   887  000BA2  6E0A               	movwf	LCD_I2C_nibble@ctrl^0,c
   888  000BA4                     
   889                           ;LCD_I2C.c: 55:     LCD_I2C_Databus(ctrl,cmd>>4);
   890  000BA4  3809               	swapf	LCD_I2C_nibble@cmd^0,w,c
   891  000BA6  0B0F               	andlw	15
   892  000BA8  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   893  000BAA  500A               	movf	LCD_I2C_nibble@ctrl^0,w,c
   894  000BAC  EC23  F005         	call	_LCD_I2C_Databus
   895                           
   896                           ;LCD_I2C.c: 56:     LCD_I2C_Databus(ctrl,cmd&0x0F);
   897  000BB0  5009               	movf	LCD_I2C_nibble@cmd^0,w,c
   898  000BB2  0B0F               	andlw	15
   899  000BB4  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
   900  000BB6  500A               	movf	LCD_I2C_nibble@ctrl^0,w,c
   901  000BB8  EC23  F005         	call	_LCD_I2C_Databus
   902  000BBC  0012               	return		;funcret
   903  000BBE                     __end_of_LCD_I2C_nibble:
   904                           	callstack 0
   905                           
   906 ;; *************** function _LCD_I2C_Databus *****************
   907 ;; Defined at:
   908 ;;		line 12 in file "LCD_I2C.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  ctrl            1    wreg     unsigned char 
   911 ;;  cmd             1    5[COMRAM] unsigned char 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  ctrl            1    6[COMRAM] unsigned char 
   914 ;;  data            1    7[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         1       0       0       0       0       0       0       0       0
   925 ;;      Locals:         2       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         3       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        3 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 2
   931 ;; This function calls:
   932 ;;		_PCF8574_Write
   933 ;; This function is called by:
   934 ;;		_LCD_I2C_nibble
   935 ;;		_LCD_I2C_Init
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text5
   940  000A46                     __ptext5:
   941                           	callstack 0
   942  000A46                     _LCD_I2C_Databus:
   943                           	callstack 26
   944                           
   945                           ;incstack = 0
   946                           ;LCD_I2C_Databus@ctrl stored from wreg
   947  000A46  6E07               	movwf	LCD_I2C_Databus@ctrl^0,c
   948  000A48                     
   949                           ;LCD_I2C.c: 13:     uint8_t data;;LCD_I2C.c: 15:     if((cmd & 1) == 1){
   950  000A48  A006               	btfss	LCD_I2C_Databus@cmd^0,0,c
   951  000A4A  EF29  F005         	goto	u121
   952  000A4E  EF2B  F005         	goto	u120
   953  000A52                     u121:
   954  000A52  EF30  F005         	goto	l977
   955  000A56                     u120:
   956  000A56                     
   957                           ;LCD_I2C.c: 16:         data = data | 0x10;
   958  000A56  5008               	movf	LCD_I2C_Databus@data^0,w,c
   959  000A58  0910               	iorlw	16
   960  000A5A  6E08               	movwf	LCD_I2C_Databus@data^0,c
   961                           
   962                           ;LCD_I2C.c: 17:     }else{
   963  000A5C  EF33  F005         	goto	l979
   964  000A60                     l977:
   965                           
   966                           ;LCD_I2C.c: 18:         data = data &~ 0x10;
   967  000A60  5008               	movf	LCD_I2C_Databus@data^0,w,c
   968  000A62  0BEF               	andlw	239
   969  000A64  6E08               	movwf	LCD_I2C_Databus@data^0,c
   970  000A66                     l979:
   971                           
   972                           ;LCD_I2C.c: 21:     if((cmd & 2) == 2){
   973  000A66  A206               	btfss	LCD_I2C_Databus@cmd^0,1,c
   974  000A68  EF38  F005         	goto	u131
   975  000A6C  EF3A  F005         	goto	u130
   976  000A70                     u131:
   977  000A70  EF3F  F005         	goto	l983
   978  000A74                     u130:
   979  000A74                     
   980                           ;LCD_I2C.c: 22:         data = data | 0x20;
   981  000A74  5008               	movf	LCD_I2C_Databus@data^0,w,c
   982  000A76  0920               	iorlw	32
   983  000A78  6E08               	movwf	LCD_I2C_Databus@data^0,c
   984                           
   985                           ;LCD_I2C.c: 23:     }else{
   986  000A7A  EF42  F005         	goto	l985
   987  000A7E                     l983:
   988                           
   989                           ;LCD_I2C.c: 24:         data = data &~ 0x20;
   990  000A7E  5008               	movf	LCD_I2C_Databus@data^0,w,c
   991  000A80  0BDF               	andlw	223
   992  000A82  6E08               	movwf	LCD_I2C_Databus@data^0,c
   993  000A84                     l985:
   994                           
   995                           ;LCD_I2C.c: 27:     if((cmd & 4) == 4){
   996  000A84  A406               	btfss	LCD_I2C_Databus@cmd^0,2,c
   997  000A86  EF47  F005         	goto	u141
   998  000A8A  EF49  F005         	goto	u140
   999  000A8E                     u141:
  1000  000A8E  EF4E  F005         	goto	l989
  1001  000A92                     u140:
  1002  000A92                     
  1003                           ;LCD_I2C.c: 28:         data = data | 0x40;
  1004  000A92  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1005  000A94  0940               	iorlw	64
  1006  000A96  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1007                           
  1008                           ;LCD_I2C.c: 29:     }else{
  1009  000A98  EF51  F005         	goto	l991
  1010  000A9C                     l989:
  1011                           
  1012                           ;LCD_I2C.c: 30:         data = data &~ 0x40;
  1013  000A9C  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1014  000A9E  0BBF               	andlw	191
  1015  000AA0  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1016  000AA2                     l991:
  1017                           
  1018                           ;LCD_I2C.c: 33:     if((cmd & 8) == 8){
  1019  000AA2  A606               	btfss	LCD_I2C_Databus@cmd^0,3,c
  1020  000AA4  EF56  F005         	goto	u151
  1021  000AA8  EF58  F005         	goto	u150
  1022  000AAC                     u151:
  1023  000AAC  EF5D  F005         	goto	l995
  1024  000AB0                     u150:
  1025  000AB0                     
  1026                           ;LCD_I2C.c: 34:         data = data | 0x80;
  1027  000AB0  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1028  000AB2  0980               	iorlw	128
  1029  000AB4  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1030                           
  1031                           ;LCD_I2C.c: 35:     }else{
  1032  000AB6  EF60  F005         	goto	l997
  1033  000ABA                     l995:
  1034                           
  1035                           ;LCD_I2C.c: 36:         data = data &~ 0x80;
  1036  000ABA  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1037  000ABC  0B7F               	andlw	127
  1038  000ABE  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1039  000AC0                     l997:
  1040                           
  1041                           ;LCD_I2C.c: 39:     _delay((unsigned long)((60)*(20000000UL/4000000.0)));
  1042  000AC0  0E64               	movlw	100
  1043  000AC2                     u287:
  1044  000AC2  2EE8               	decfsz	wreg,f,c
  1045  000AC4  D7FE               	bra	u287
  1046  000AC6                     
  1047                           ;LCD_I2C.c: 42:     if(ctrl == 1){
  1048  000AC6  0407               	decf	LCD_I2C_Databus@ctrl^0,w,c
  1049  000AC8  A4D8               	btfss	status,2,c
  1050  000ACA  EF69  F005         	goto	u161
  1051  000ACE  EF6B  F005         	goto	u160
  1052  000AD2                     u161:
  1053  000AD2  EF70  F005         	goto	l1003
  1054  000AD6                     u160:
  1055  000AD6                     
  1056                           ;LCD_I2C.c: 43:         data = data | 0x01;
  1057  000AD6  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1058  000AD8  0901               	iorlw	1
  1059  000ADA  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1060                           
  1061                           ;LCD_I2C.c: 44:     }else{
  1062  000ADC  EF73  F005         	goto	l1005
  1063  000AE0                     l1003:
  1064                           
  1065                           ;LCD_I2C.c: 45:         data = data &~ 0x01;
  1066  000AE0  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1067  000AE2  0BFE               	andlw	254
  1068  000AE4  6E08               	movwf	LCD_I2C_Databus@data^0,c
  1069  000AE6                     l1005:
  1070                           
  1071                           ;LCD_I2C.c: 48:     PCF8574_Write(data | 0x04);
  1072  000AE6  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1073  000AE8  0904               	iorlw	4
  1074  000AEA  ECC2  F005         	call	_PCF8574_Write
  1075  000AEE                     
  1076                           ;LCD_I2C.c: 49:     _delay((unsigned long)((2)*(20000000UL/4000000.0)));
  1077  000AEE  0E03               	movlw	3
  1078  000AF0                     u297:
  1079  000AF0  2EE8               	decfsz	wreg,f,c
  1080  000AF2  D7FE               	bra	u297
  1081  000AF4  F000               	nop	
  1082  000AF6                     
  1083                           ;LCD_I2C.c: 50:     PCF8574_Write(data &~ 0x04);
  1084  000AF6  5008               	movf	LCD_I2C_Databus@data^0,w,c
  1085  000AF8  0BFB               	andlw	251
  1086  000AFA  ECC2  F005         	call	_PCF8574_Write
  1087  000AFE  0012               	return		;funcret
  1088  000B00                     __end_of_LCD_I2C_Databus:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _PCF8574_Write *****************
  1092 ;; Defined at:
  1093 ;;		line 4 in file "LCD_I2C.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  byte            1    wreg     unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  byte            1    4[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 1
  1114 ;; This function calls:
  1115 ;;		_I2C_ADDRESS_SLAVE
  1116 ;;		_I2C_Start
  1117 ;;		_I2C_Stop
  1118 ;;		_I2C_Write_Data
  1119 ;; This function is called by:
  1120 ;;		_LCD_I2C_Databus
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text6
  1125  000B84                     __ptext6:
  1126                           	callstack 0
  1127  000B84                     _PCF8574_Write:
  1128                           	callstack 26
  1129                           
  1130                           ;incstack = 0
  1131                           ;PCF8574_Write@byte stored from wreg
  1132  000B84  6E05               	movwf	PCF8574_Write@byte^0,c
  1133  000B86                     
  1134                           ;LCD_I2C.c: 6:     I2C_Start();
  1135  000B86  EC03  F006         	call	_I2C_Start	;wreg free
  1136  000B8A                     
  1137                           ;LCD_I2C.c: 7:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  1138  000B8A  0E00               	movlw	0
  1139  000B8C  6E01               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  1140  000B8E  0E4E               	movlw	78
  1141  000B90  ECAC  F005         	call	_I2C_ADDRESS_SLAVE
  1142  000B94                     
  1143                           ;LCD_I2C.c: 8:     I2C_Write_Data((byte | 0x08));
  1144  000B94  5005               	movf	PCF8574_Write@byte^0,w,c
  1145  000B96  0908               	iorlw	8
  1146  000B98  ECDF  F005         	call	_I2C_Write_Data
  1147                           
  1148                           ;LCD_I2C.c: 9:     I2C_Stop();
  1149  000B9C  ECFA  F005         	call	_I2C_Stop	;wreg free
  1150  000BA0  0012               	return		;funcret
  1151  000BA2                     __end_of_PCF8574_Write:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _I2C_Write_Data *****************
  1155 ;; Defined at:
  1156 ;;		line 65 in file "I2C.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  data            1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  data            1    0[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1173 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1174 ;;Total ram usage:        1 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_PCF8574_Write
  1180 ;;		_LCD_I2C_Init
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text7
  1185  000BBE                     __ptext7:
  1186                           	callstack 0
  1187  000BBE                     _I2C_Write_Data:
  1188                           	callstack 26
  1189                           
  1190                           ;incstack = 0
  1191                           ;I2C_Write_Data@data stored from wreg
  1192  000BBE  6E01               	movwf	I2C_Write_Data@data^0,c
  1193  000BC0                     
  1194                           ;I2C.c: 67:     SSPBUF = data;
  1195  000BC0  C001  FFC9         	movff	I2C_Write_Data@data,4041	;volatile
  1196  000BC4                     
  1197                           ;I2C.c: 69:     SSPCON2bits.ACKDT = 0;
  1198  000BC4  9AC5               	bcf	197,5,c	;volatile
  1199  000BC6                     
  1200                           ;I2C.c: 71:     SSPCON2bits.ACKEN = 1;
  1201  000BC6  88C5               	bsf	197,4,c	;volatile
  1202  000BC8                     
  1203                           ;I2C.c: 73:     PIR1bits.SSPIF = 0;
  1204  000BC8  969E               	bcf	158,3,c	;volatile
  1205  000BCA                     l49:
  1206  000BCA  A69E               	btfss	158,3,c	;volatile
  1207  000BCC  EFEA  F005         	goto	u31
  1208  000BD0  EFEC  F005         	goto	u30
  1209  000BD4                     u31:
  1210  000BD4  EFE5  F005         	goto	l49
  1211  000BD8                     u30:
  1212  000BD8  0012               	return		;funcret
  1213  000BDA                     __end_of_I2C_Write_Data:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _I2C_Stop *****************
  1217 ;; Defined at:
  1218 ;;		line 78 in file "I2C.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		None
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_PCF8574_Write
  1242 ;;		_LCD_I2C_Init
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text8
  1247  000BF4                     __ptext8:
  1248                           	callstack 0
  1249  000BF4                     _I2C_Stop:
  1250                           	callstack 26
  1251  000BF4                     
  1252                           ;I2C.c: 82:     SSPCON2bits.PEN = 1;
  1253  000BF4  84C5               	bsf	197,2,c	;volatile
  1254  000BF6                     l55:
  1255  000BF6  B4C5               	btfsc	197,2,c	;volatile
  1256  000BF8  EF00  F006         	goto	u41
  1257  000BFC  EF02  F006         	goto	u40
  1258  000C00                     u41:
  1259  000C00  EFFB  F005         	goto	l55
  1260  000C04                     u40:
  1261  000C04  0012               	return		;funcret
  1262  000C06                     __end_of_I2C_Stop:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _I2C_Start *****************
  1266 ;; Defined at:
  1267 ;;		line 39 in file "I2C.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		None
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_PCF8574_Write
  1291 ;;		_LCD_I2C_Init
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text9
  1296  000C06                     __ptext9:
  1297                           	callstack 0
  1298  000C06                     _I2C_Start:
  1299                           	callstack 26
  1300  000C06                     
  1301                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  1302  000C06  80C5               	bsf	197,0,c	;volatile
  1303  000C08                     l37:
  1304  000C08  B0C5               	btfsc	197,0,c	;volatile
  1305  000C0A  EF09  F006         	goto	u11
  1306  000C0E  EF0B  F006         	goto	u10
  1307  000C12                     u11:
  1308  000C12  EF04  F006         	goto	l37
  1309  000C16                     u10:
  1310  000C16  0012               	return		;funcret
  1311  000C18                     __end_of_I2C_Start:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _I2C_ADDRESS_SLAVE *****************
  1315 ;; Defined at:
  1316 ;;		line 48 in file "I2C.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  address         1    wreg     unsigned char 
  1319 ;;  modo            1    0[COMRAM] unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  address         1    2[COMRAM] unsigned char 
  1322 ;;  data            1    3[COMRAM] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1332 ;;      Params:         1       0       0       0       0       0       0       0       0
  1333 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1334 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1335 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1336 ;;Total ram usage:        4 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_PCF8574_Write
  1342 ;;		_LCD_I2C_Init
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text10
  1347  000B58                     __ptext10:
  1348                           	callstack 0
  1349  000B58                     _I2C_ADDRESS_SLAVE:
  1350                           	callstack 26
  1351                           
  1352                           ;incstack = 0
  1353                           ;I2C_ADDRESS_SLAVE@address stored from wreg
  1354  000B58  6E03               	movwf	I2C_ADDRESS_SLAVE@address^0,c
  1355  000B5A                     
  1356                           ;I2C.c: 51:     data = ((address & 0xFE)) | (modo & 0x01) ;
  1357  000B5A  C001  F002         	movff	I2C_ADDRESS_SLAVE@modo,??_I2C_ADDRESS_SLAVE
  1358  000B5E  0E01               	movlw	1
  1359  000B60  1602               	andwf	??_I2C_ADDRESS_SLAVE^0,f,c
  1360  000B62  5003               	movf	I2C_ADDRESS_SLAVE@address^0,w,c
  1361  000B64  0BFE               	andlw	254
  1362  000B66  1002               	iorwf	??_I2C_ADDRESS_SLAVE^0,w,c
  1363  000B68  6E04               	movwf	I2C_ADDRESS_SLAVE@data^0,c
  1364  000B6A                     
  1365                           ;I2C.c: 52:     SSPBUF = data;
  1366  000B6A  C004  FFC9         	movff	I2C_ADDRESS_SLAVE@data,4041	;volatile
  1367  000B6E                     
  1368                           ;I2C.c: 56:     SSPCON2bits.ACKDT = 0;
  1369  000B6E  9AC5               	bcf	197,5,c	;volatile
  1370  000B70                     
  1371                           ;I2C.c: 58:     SSPCON2bits.ACKEN = 1;
  1372  000B70  88C5               	bsf	197,4,c	;volatile
  1373  000B72                     
  1374                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  1375  000B72  969E               	bcf	158,3,c	;volatile
  1376  000B74                     l43:
  1377  000B74  A69E               	btfss	158,3,c	;volatile
  1378  000B76  EFBF  F005         	goto	u111
  1379  000B7A  EFC1  F005         	goto	u110
  1380  000B7E                     u111:
  1381  000B7E  EFBA  F005         	goto	l43
  1382  000B82                     u110:
  1383  000B82  0012               	return		;funcret
  1384  000B84                     __end_of_I2C_ADDRESS_SLAVE:
  1385                           	callstack 0
  1386                           
  1387                           	psect	rparam
  1388  0000                     
  1389                           	psect	idloc
  1390                           
  1391                           ;Config register IDLOC0 @ 0x200000
  1392                           ;	unspecified, using default values
  1393  200000                     	org	2097152
  1394  200000  FF                 	db	255
  1395                           
  1396                           ;Config register IDLOC1 @ 0x200001
  1397                           ;	unspecified, using default values
  1398  200001                     	org	2097153
  1399  200001  FF                 	db	255
  1400                           
  1401                           ;Config register IDLOC2 @ 0x200002
  1402                           ;	unspecified, using default values
  1403  200002                     	org	2097154
  1404  200002  FF                 	db	255
  1405                           
  1406                           ;Config register IDLOC3 @ 0x200003
  1407                           ;	unspecified, using default values
  1408  200003                     	org	2097155
  1409  200003  FF                 	db	255
  1410                           
  1411                           ;Config register IDLOC4 @ 0x200004
  1412                           ;	unspecified, using default values
  1413  200004                     	org	2097156
  1414  200004  FF                 	db	255
  1415                           
  1416                           ;Config register IDLOC5 @ 0x200005
  1417                           ;	unspecified, using default values
  1418  200005                     	org	2097157
  1419  200005  FF                 	db	255
  1420                           
  1421                           ;Config register IDLOC6 @ 0x200006
  1422                           ;	unspecified, using default values
  1423  200006                     	org	2097158
  1424  200006  FF                 	db	255
  1425                           
  1426                           ;Config register IDLOC7 @ 0x200007
  1427                           ;	unspecified, using default values
  1428  200007                     	org	2097159
  1429  200007  FF                 	db	255
  1430                           
  1431                           	psect	config
  1432                           
  1433                           ;Config register CONFIG1L @ 0x300000
  1434                           ;	PLL Prescaler Selection bits
  1435                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  1436                           ;	System Clock Postscaler Selection bits
  1437                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1438                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1439                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1440  300000                     	org	3145728
  1441  300000  04                 	db	4
  1442                           
  1443                           ;Config register CONFIG1H @ 0x300001
  1444                           ;	Oscillator Selection bits
  1445                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1446                           ;	Fail-Safe Clock Monitor Enable bit
  1447                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1448                           ;	Internal/External Oscillator Switchover bit
  1449                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1450  300001                     	org	3145729
  1451  300001  0E                 	db	14
  1452                           
  1453                           ;Config register CONFIG2L @ 0x300002
  1454                           ;	Power-up Timer Enable bit
  1455                           ;	PWRT = ON, PWRT enabled
  1456                           ;	Brown-out Reset Enable bits
  1457                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1458                           ;	Brown-out Reset Voltage bits
  1459                           ;	BORV = 3, Minimum setting 2.05V
  1460                           ;	USB Voltage Regulator Enable bit
  1461                           ;	VREGEN = OFF, USB voltage regulator disabled
  1462  300002                     	org	3145730
  1463  300002  18                 	db	24
  1464                           
  1465                           ;Config register CONFIG2H @ 0x300003
  1466                           ;	Watchdog Timer Enable bit
  1467                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1468                           ;	Watchdog Timer Postscale Select bits
  1469                           ;	WDTPS = 32768, 1:32768
  1470  300003                     	org	3145731
  1471  300003  1E                 	db	30
  1472                           
  1473                           ; Padding undefined space
  1474  300004                     	org	3145732
  1475  300004  FF                 	db	255
  1476                           
  1477                           ;Config register CONFIG3H @ 0x300005
  1478                           ;	CCP2 MUX bit
  1479                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1480                           ;	PORTB A/D Enable bit
  1481                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1482                           ;	Low-Power Timer 1 Oscillator Enable bit
  1483                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1484                           ;	MCLR Pin Enable bit
  1485                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1486  300005                     	org	3145733
  1487  300005  83                 	db	131
  1488                           
  1489                           ;Config register CONFIG4L @ 0x300006
  1490                           ;	Stack Full/Underflow Reset Enable bit
  1491                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1492                           ;	Single-Supply ICSP Enable bit
  1493                           ;	LVP = OFF, Single-Supply ICSP disabled
  1494                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1495                           ;	ICPRT = OFF, ICPORT disabled
  1496                           ;	Extended Instruction Set Enable bit
  1497                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1498                           ;	Background Debugger Enable bit
  1499                           ;	DEBUG = 0x1, unprogrammed default
  1500  300006                     	org	3145734
  1501  300006  81                 	db	129
  1502                           
  1503                           ; Padding undefined space
  1504  300007                     	org	3145735
  1505  300007  FF                 	db	255
  1506                           
  1507                           ;Config register CONFIG5L @ 0x300008
  1508                           ;	Code Protection bit
  1509                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1510                           ;	Code Protection bit
  1511                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1512                           ;	Code Protection bit
  1513                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1514                           ;	Code Protection bit
  1515                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1516  300008                     	org	3145736
  1517  300008  0F                 	db	15
  1518                           
  1519                           ;Config register CONFIG5H @ 0x300009
  1520                           ;	Boot Block Code Protection bit
  1521                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1522                           ;	Data EEPROM Code Protection bit
  1523                           ;	CPD = OFF, Data EEPROM is not code-protected
  1524  300009                     	org	3145737
  1525  300009  C0                 	db	192
  1526                           
  1527                           ;Config register CONFIG6L @ 0x30000A
  1528                           ;	Write Protection bit
  1529                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1530                           ;	Write Protection bit
  1531                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1532                           ;	Write Protection bit
  1533                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1534                           ;	Write Protection bit
  1535                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1536  30000A                     	org	3145738
  1537  30000A  0F                 	db	15
  1538                           
  1539                           ;Config register CONFIG6H @ 0x30000B
  1540                           ;	Configuration Register Write Protection bit
  1541                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1542                           ;	Boot Block Write Protection bit
  1543                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1544                           ;	Data EEPROM Write Protection bit
  1545                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1546  30000B                     	org	3145739
  1547  30000B  E0                 	db	224
  1548                           
  1549                           ;Config register CONFIG7L @ 0x30000C
  1550                           ;	Table Read Protection bit
  1551                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1552                           ;	Table Read Protection bit
  1553                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1554                           ;	Table Read Protection bit
  1555                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1556                           ;	Table Read Protection bit
  1557                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1558  30000C                     	org	3145740
  1559  30000C  0F                 	db	15
  1560                           
  1561                           ;Config register CONFIG7H @ 0x30000D
  1562                           ;	Boot Block Table Read Protection bit
  1563                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1564  30000D                     	org	3145741
  1565  30000D  40                 	db	64
  1566                           tosu	equ	0xFFF
  1567                           tosh	equ	0xFFE
  1568                           tosl	equ	0xFFD
  1569                           stkptr	equ	0xFFC
  1570                           pclatu	equ	0xFFB
  1571                           pclath	equ	0xFFA
  1572                           pcl	equ	0xFF9
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           prodh	equ	0xFF4
  1578                           prodl	equ	0xFF3
  1579                           indf0	equ	0xFEF
  1580                           postinc0	equ	0xFEE
  1581                           postdec0	equ	0xFED
  1582                           preinc0	equ	0xFEC
  1583                           plusw0	equ	0xFEB
  1584                           fsr0h	equ	0xFEA
  1585                           fsr0l	equ	0xFE9
  1586                           wreg	equ	0xFE8
  1587                           indf1	equ	0xFE7
  1588                           postinc1	equ	0xFE6
  1589                           postdec1	equ	0xFE5
  1590                           preinc1	equ	0xFE4
  1591                           plusw1	equ	0xFE3
  1592                           fsr1h	equ	0xFE2
  1593                           fsr1l	equ	0xFE1
  1594                           bsr	equ	0xFE0
  1595                           indf2	equ	0xFDF
  1596                           postinc2	equ	0xFDE
  1597                           postdec2	equ	0xFDD
  1598                           preinc2	equ	0xFDC
  1599                           plusw2	equ	0xFDB
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8

Data Sizes:
    Strings     84
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_I2C_WriteText@string	PTR unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_LCD_I2C_WriteText
    _LCD_I2C_WriteText->_LCD_I2C_nibble
    _LCD_I2C_Init->_LCD_I2C_nibble
    _LCD_I2C_nibble->_LCD_I2C_Databus
    _LCD_I2C_Databus->_PCF8574_Write
    _PCF8574_Write->_I2C_ADDRESS_SLAVE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    6274
                                             16 COMRAM     5     0      5
                       _LCD_I2C_Init
                  _LCD_I2C_WriteText
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_WriteText                                    6     3      3    2921
                                             10 COMRAM     6     3      3
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_Init                                         1     1      0    3353
                                             10 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                    _LCD_I2C_Databus
                     _LCD_I2C_nibble
                        _Master_Mode
 ---------------------------------------------------------------------------------
 (2) _Master_Mode                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_I2C_nibble                                       2     1      1    2021
                                              8 COMRAM     2     1      1
                    _LCD_I2C_Databus
 ---------------------------------------------------------------------------------
 (3) _LCD_I2C_Databus                                      3     2      1    1097
                                              5 COMRAM     3     2      1
                      _PCF8574_Write
 ---------------------------------------------------------------------------------
 (4) _PCF8574_Write                                        1     1      0     257
                                              4 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Data                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_ADDRESS_SLAVE                                    4     3      1     220
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_I2C_Init
     _I2C_ADDRESS_SLAVE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
     _LCD_I2C_Databus
       _PCF8574_Write
         _I2C_ADDRESS_SLAVE
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Data
     _LCD_I2C_nibble
       _LCD_I2C_Databus
     _Master_Mode
   _LCD_I2C_WriteText
     _LCD_I2C_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     15      17       1       24.2%
BITBIGSFRhh         36      0       0      21        0.0%
BITBIGSFRll         33      0       0      25        0.0%
BITBIGSFRlhh        22      0       0      23        0.0%
BITBIGSFRlhl         A      0       0      24        0.0%
BITBIGSFRhl          3      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17       3        0.0%
DATA                 0      0      17       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 23 16:34:32 2023

           ??_LCD_I2C_Init 000B                          _i 0016                _SSPSTATbits 000FC7  
                       l13 0B50                         l40 0C16                         l34 0BF2  
                       l43 0B74                         l52 0BD8                         l37 0C08  
                       l46 0B82                         l55 0BF6                         l49 0BCA  
                       l73 0BA0                         l58 0C04                         l92 096A  
                       l86 0AFE                         l89 0BBC                         u10 0C16  
                       u11 0C12                         u30 0BD8                         u31 0BD4  
                       u40 0C04                         u41 0C00          ??_LCD_I2C_Databus 0007  
                      l105 0A44                        l801 0BC8                        l803 0BF4  
                      l851 0BEA                        l781 0C06                        l961 0B6E  
                      l849 0BDA                        l963 0B70                        l955 0B5A  
                      l795 0BC0                        l971 0B94                        l965 0B72  
                      l957 0B5A                        l797 0BC4                        l981 0A74  
                      l973 0A48                        l959 0B6A                        l799 0BC6  
                      l967 0B86                        l991 0AA2                        l983 0A7E  
                      l975 0A56                        l969 0B8A                        l993 0AB0  
                      l985 0A84                        l977 0A60                        l995 0ABA  
                      l987 0A92                        l979 0A66                        l997 0AC0  
                      l989 0A9C                        l999 0AC6                        u110 0B82  
                      u111 0B7E                        u120 0A56                        u121 0A52  
                      u130 0A74                        u131 0A70                        u140 0A92  
                      u141 0A8E                        u150 0AB0                        u151 0AAC  
                      u207 08AA                        u160 0AD6                        u161 0AD2  
                      u217 08C4                        u170 0A44                        u227 08DE  
                      u171 0A40                        u237 08F8                        u247 0912  
                      u257 092C                        u267 0946                        u187 0878  
                      u277 0960                        u197 0890                        u287 0AC2  
                      u297 0AF0                        wreg 000FE8           ??_LCD_I2C_nibble 000A  
                     l1001 0AD6                       l1003 0AE0                       l1011 0BA4  
                     l1005 0AE6                       l1021 086E                       l1013 0856  
                     l1101 0B08                       l1007 0AEE                       l1031 08A4  
                     l1023 0872                       l1015 085A                       l1103 0B1A  
                     l1009 0AF6                       l1041 08E8                       l1033 08B4  
                     l1025 0880                       l1017 085E                       l1113 09EA  
                     l1105 0B2C                       l1051 0926                       l1043 08F2  
                     l1035 08BE                       l1027 088A                       l1019 0868  
                     l1107 0B3E                       l1053 0936                       l1045 0902  
                     l1037 08CE                       l1029 089A                       l1061 096E  
                     l1055 0940                       l1047 090C                       l1039 08D8  
                     l1071 099A                       l1063 0972                       l1057 0950  
                     l1049 091C                       l1081 09C8                       l1073 09A0  
                     l1065 0978                       l1059 095A                       l1075 09AE  
                     l1067 0986                       l1091 0A28                       l1077 09B4  
                     l1069 098C                       l1085 09D6                       l1087 0A10  
                     l1079 09C2                       l1089 0A24                       l1097 0B00  
                     l1099 0B04                       STR_1 082B                       STR_2 0816  
                     STR_3 0801                       STR_4 0840                       _main 0B00  
         __end_of_I2C_Stop 0C06                       start 0000      I2C_ADDRESS_SLAVE@data 0004  
    I2C_ADDRESS_SLAVE@modo 0001               ___param_bank 000000                      ?_main 0011  
            ??_Master_Mode 0001       LCD_I2C_WriteText@col 000B       LCD_I2C_WriteText@row 0010  
        __end_of_I2C_Start 0C18                      tablat 000FF5                      status 000FD8  
          __initialization 0C18               __end_of_main 0B58                     ??_main 0016  
            __activetblptr 000002          _LCD_I2C_WriteText 096C         ?_LCD_I2C_WriteText 000B  
      __end_of_Master_Mode 0BF4                     _ADCON1 000FC1       __end_of_LCD_I2C_Init 096C  
      ??_LCD_I2C_WriteText 000E                     _SSPADD 000FC8                     _SSPBUF 000FC9  
__end_of_LCD_I2C_WriteText 0A46          _I2C_ADDRESS_SLAVE 0B58                     isa$std 000001  
       ?_I2C_ADDRESS_SLAVE 0001                  ?_I2C_Stop 0001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
    __end_of_PCF8574_Write 0BA2        ??_I2C_ADDRESS_SLAVE 0002                 __accesstop 0060  
  __end_of__initialization 0C1C              ___rparam_used 000001            _LCD_I2C_Databus 0A46  
           __pcstackCOMRAM 0001  __end_of_I2C_ADDRESS_SLAVE 0B84                _Master_Mode 0BDA  
               ??_I2C_Stop 0001                    _SSPCON2 000FC5    __end_of_LCD_I2C_Databus 0B00  
                _I2C_Start 0C06                    __Hparam 0000                    __Lparam 0000  
             _LCD_I2C_Init 0856               __psmallconst 0800                    __pcinit 0C18  
                  __ramtop 0800                    __ptext0 0B00                    __ptext1 096C  
                  __ptext2 0856                    __ptext3 0BDA                    __ptext4 0BA2  
                  __ptext5 0A46                    __ptext6 0B84                    __ptext7 0BBE  
                  __ptext8 0BF4                    __ptext9 0C06       end_of_initialization 0C1C  
            __Lmediumconst 0000                 ?_I2C_Start 0001   I2C_ADDRESS_SLAVE@address 0003  
                _TRISBbits 000F93           ?_LCD_I2C_Databus 0006         LCD_I2C_nibble@ctrl 000A  
           _I2C_Write_Data 0BBE               ?_Master_Mode 0001        start_initialization 0C18  
              ??_I2C_Start 0001     __end_of_I2C_Write_Data 0BDA                __pbssCOMRAM 0016  
      LCD_I2C_Databus@data 0008        LCD_I2C_Databus@ctrl 0007             _LCD_I2C_nibble 0BA2  
          ?_I2C_Write_Data 0001                __smallconst 0800                   _I2C_Stop 0BF4  
            _PCF8574_Write 0B84     __end_of_LCD_I2C_nibble 0BBE    LCD_I2C_WriteText@string 000C  
                 _PIR1bits 000F9E          LCD_I2C_nibble@cmd 0009             ?_PCF8574_Write 0001  
          ?_LCD_I2C_nibble 0009                   __Hrparam 0000                   __Lrparam 0000  
       LCD_I2C_Databus@cmd 0006                   __ptext10 0B58                   isa$xinst 000000  
                 main@argc 0011                   main@argv 0013            ??_PCF8574_Write 0005  
         ??_I2C_Write_Data 0001              ?_LCD_I2C_Init 0001          PCF8574_Write@byte 0005  
              _SSPCON1bits 000FC6                _SSPCON2bits 000FC5         I2C_Write_Data@data 0001  
