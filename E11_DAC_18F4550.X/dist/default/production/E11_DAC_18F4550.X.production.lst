

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 05 20:43:33 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _ADRESL	set	4035
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADCON0	set	4034
    66  0000                     _SSPCON2bits	set	4037
    67  0000                     _TRISBbits	set	3987
    68  0000                     _PIR1bits	set	3998
    69  0000                     _SSPCON2	set	4037
    70  0000                     _SSPCON1bits	set	4038
    71  0000                     _SSPSTATbits	set	4039
    72  0000                     _SSPBUF	set	4041
    73  0000                     _SSPADD	set	4040
    74  0000                     _ADCON2bits	set	4032
    75  0000                     _ADCON1bits	set	4033
    76  0000                     _ADCON0bits	set	4034
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	callstack 0
    81  000800  00                 	db	0
    82  000801                     STR_2:
    83  000801  20                 	db	32
    84  000802  20                 	db	32
    85  000803  20                 	db	32
    86  000804  20                 	db	32
    87  000805  20                 	db	32
    88  000806  20                 	db	32
    89  000807  20                 	db	32
    90  000808  4D                 	db	77	;'M'
    91  000809  43                 	db	67	;'C'
    92  00080A  50                 	db	80	;'P'
    93  00080B  34                 	db	52	;'4'
    94  00080C  37                 	db	55	;'7'
    95  00080D  32                 	db	50	;'2'
    96  00080E  35                 	db	53	;'5'
    97  00080F  20                 	db	32
    98  000810  20                 	db	32
    99  000811  20                 	db	32
   100  000812  20                 	db	32
   101  000813  20                 	db	32
   102  000814  20                 	db	32
   103  000815  00                 	db	0
   104  000816                     STR_1:
   105  000816  2D                 	db	45
   106  000817  2D                 	db	45
   107  000818  2D                 	db	45
   108  000819  2D                 	db	45
   109  00081A  2D                 	db	45
   110  00081B  50                 	db	80	;'P'
   111  00081C  49                 	db	73	;'I'
   112  00081D  43                 	db	67	;'C'
   113  00081E  31                 	db	49	;'1'
   114  00081F  38                 	db	56	;'8'
   115  000820  46                 	db	70	;'F'
   116  000821  34                 	db	52	;'4'
   117  000822  35                 	db	53	;'5'
   118  000823  35                 	db	53	;'5'
   119  000824  30                 	db	48	;'0'
   120  000825  2D                 	db	45
   121  000826  2D                 	db	45
   122  000827  2D                 	db	45
   123  000828  2D                 	db	45
   124  000829  2D                 	db	45
   125  00082A  00                 	db	0
   126  00082B  00                 	db	0	; dummy byte at the end
   127  0000                     
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131  000CAA                     __pcinit:
   132                           	callstack 0
   133  000CAA                     start_initialization:
   134                           	callstack 0
   135  000CAA                     __initialization:
   136                           	callstack 0
   137                           
   138                           ; Clear objects allocated to COMRAM (38 bytes)
   139  000CAA  EE00  F001         	lfsr	0,__pbssCOMRAM
   140  000CAE  0E26               	movlw	38
   141  000CB0                     clear_0:
   142  000CB0  6AEE               	clrf	postinc0,c
   143  000CB2  06E8               	decf	wreg,f,c
   144  000CB4  E1FD               	bnz	clear_0
   145  000CB6                     end_of_initialization:
   146                           	callstack 0
   147  000CB6                     __end_of__initialization:
   148                           	callstack 0
   149  000CB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  000CB8  6EF8               	movwf	tblptru,c
   151  000CBA  0100               	movlb	0
   152  000CBC  EF69  F005         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155  000001                     __pbssCOMRAM:
   156                           	callstack 0
   157  000001                     _bufferDac:
   158                           	callstack 0
   159  000001                     	ds	16
   160  000011                     _bufferVolt:
   161                           	callstack 0
   162  000011                     	ds	16
   163  000021                     _voltaje:
   164                           	callstack 0
   165  000021                     	ds	4
   166  000025                     _ValorConvertido:
   167                           	callstack 0
   168  000025                     	ds	2
   169                           
   170                           	psect	cstackCOMRAM
   171  000027                     __pcstackCOMRAM:
   172                           	callstack 0
   173  000027                     ?_ADC_Read:
   174                           	callstack 0
   175  000027                     I2C_ADDRESS_SLAVE@modo:
   176                           	callstack 0
   177  000027                     I2C_Write_Data@data:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x0
   181  000027                     	ds	1
   182  000028                     ??_I2C_ADDRESS_SLAVE:
   183                           
   184                           ; 1 bytes @ 0x1
   185  000028                     	ds	1
   186  000029                     ??_ADC_Read:
   187  000029                     I2C_ADDRESS_SLAVE@address:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x2
   191  000029                     	ds	1
   192  00002A                     I2C_ADDRESS_SLAVE@data:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x3
   196  00002A                     	ds	1
   197  00002B                     PCF8574_Write@byte:
   198                           	callstack 0
   199  00002B                     ADC_Read@CHx:
   200                           	callstack 0
   201  00002B                     MCP4725_WriteComand@data:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x4
   205  00002B                     	ds	1
   206  00002C                     LCD_I2C_Databus@cmd:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x5
   210  00002C                     	ds	1
   211  00002D                     ??_MCP4725_WriteComand:
   212  00002D                     LCD_I2C_Databus@ctrl:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x6
   216  00002D                     	ds	1
   217  00002E                     LCD_I2C_Databus@data:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x7
   221  00002E                     	ds	1
   222  00002F                     LCD_I2C_nibble@cmd:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x8
   226  00002F                     	ds	1
   227  000030                     MCP4725_WriteComand@high:
   228                           	callstack 0
   229  000030                     LCD_I2C_nibble@ctrl:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x9
   233  000030                     	ds	1
   234  000031                     ??_LCD_I2C_Init:
   235  000031                     MCP4725_WriteComand@low:
   236                           	callstack 0
   237  000031                     LCD_I2C_WriteText@col:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0xA
   241  000031                     	ds	1
   242  000032                     LCD_I2C_WriteText@string:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xB
   246  000032                     	ds	2
   247  000034                     ??_LCD_I2C_WriteText:
   248                           
   249                           ; 1 bytes @ 0xD
   250  000034                     	ds	2
   251  000036                     LCD_I2C_WriteText@row:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0xF
   255  000036                     	ds	1
   256  000037                     
   257                           ; 2 bytes @ 0x10
   258  000037                     	ds	2
   259  000039                     
   260                           ; 3 bytes @ 0x12
   261  000039                     	ds	3
   262  00003C                     ??_main:
   263                           
   264                           ; 1 bytes @ 0x15
   265  00003C                     	ds	2
   266                           
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 33 in file "Main_DAC.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;  argc            2   16[COMRAM] int 
   275 ;;  argv            3   18[COMRAM] PTR PTR unsigned char 
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2   16[COMRAM] int 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         5       0       0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0
   290 ;;      Totals:         7       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        7 bytes
   292 ;; Hardware stack levels required when called: 5
   293 ;; This function calls:
   294 ;;		_ADC_Conversion
   295 ;;		_ADC_Read
   296 ;;		_LCD_I2C_Init
   297 ;;		_LCD_I2C_WriteText
   298 ;;		_MCP4725_WriteComand
   299 ;;		_Master_Mode
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306  000AD2                     __ptext0:
   307                           	callstack 0
   308  000AD2                     _main:
   309                           	callstack 26
   310  000AD2                     
   311                           ;Main_DAC.c: 36:     Master_Mode();
   312  000AD2  EC48  F006         	call	_Master_Mode	;wreg free
   313  000AD6                     
   314                           ;Main_DAC.c: 37:     LCD_I2C_Init();
   315  000AD6  EC16  F004         	call	_LCD_I2C_Init	;wreg free
   316  000ADA                     
   317                           ;Main_DAC.c: 38:     ADC_Conversion();
   318  000ADA  EC0D  F006         	call	_ADC_Conversion	;wreg free
   319  000ADE                     
   320                           ;Main_DAC.c: 40:     LCD_I2C_WriteText(0,0,"-----PIC18F4550-----");
   321  000ADE  0E00               	movlw	0
   322  000AE0  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   323  000AE2  0E16               	movlw	low STR_1
   324  000AE4  6E32               	movwf	LCD_I2C_WriteText@string^0,c
   325  000AE6  0E08               	movlw	high STR_1
   326  000AE8  6E33               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   327  000AEA  0E00               	movlw	0
   328  000AEC  EC9F  F004         	call	_LCD_I2C_WriteText
   329  000AF0                     
   330                           ;Main_DAC.c: 41:     LCD_I2C_WriteText(1,0,"       MCP4725      ");
   331  000AF0  0E00               	movlw	0
   332  000AF2  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   333  000AF4  0E01               	movlw	low STR_2
   334  000AF6  6E32               	movwf	LCD_I2C_WriteText@string^0,c
   335  000AF8  0E08               	movlw	high STR_2
   336  000AFA  6E33               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   337  000AFC  0E01               	movlw	1
   338  000AFE  EC9F  F004         	call	_LCD_I2C_WriteText
   339  000B02                     
   340                           ;Main_DAC.c: 42:     _delay((unsigned long)((1500)*(20000000UL/4000.0)));
   341  000B02  0E27               	movlw	39
   342  000B04  6E3D               	movwf	(??_main+1)^0,c
   343  000B06  0E0D               	movlw	13
   344  000B08  6E3C               	movwf	??_main^0,c
   345  000B0A  0E26               	movlw	38
   346  000B0C                     u267:
   347  000B0C  2EE8               	decfsz	wreg,f,c
   348  000B0E  D7FE               	bra	u267
   349  000B10  2E3C               	decfsz	??_main^0,f,c
   350  000B12  D7FC               	bra	u267
   351  000B14  2E3D               	decfsz	(??_main+1)^0,f,c
   352  000B16  D7FA               	bra	u267
   353  000B18  D000               	nop2	
   354  000B1A                     l1226:
   355                           
   356                           ;Main_DAC.c: 47:         ValorConvertido = ADC_Read(0);
   357  000B1A  0E00               	movlw	0
   358  000B1C  ECD1  F005         	call	_ADC_Read
   359  000B20  C027  F025         	movff	?_ADC_Read,_ValorConvertido
   360  000B24  C028  F026         	movff	?_ADC_Read+1,_ValorConvertido+1
   361  000B28                     
   362                           ;Main_DAC.c: 52:         MCP4725_WriteComand((uint16_t)ValorConvertido);
   363  000B28  C025  F02B         	movff	_ValorConvertido,MCP4725_WriteComand@data
   364  000B2C  C026  F02C         	movff	_ValorConvertido+1,MCP4725_WriteComand@data+1
   365  000B30  ECA9  F005         	call	_MCP4725_WriteComand	;wreg free
   366  000B34                     
   367                           ;Main_DAC.c: 54:         _delay((unsigned long)((50)*(20000000UL/4000.0)));
   368  000B34  0E02               	movlw	2
   369  000B36  6E3D               	movwf	(??_main+1)^0,c
   370  000B38  0E45               	movlw	69
   371  000B3A  6E3C               	movwf	??_main^0,c
   372  000B3C  0EAA               	movlw	170
   373  000B3E                     u277:
   374  000B3E  2EE8               	decfsz	wreg,f,c
   375  000B40  D7FE               	bra	u277
   376  000B42  2E3C               	decfsz	??_main^0,f,c
   377  000B44  D7FC               	bra	u277
   378  000B46  2E3D               	decfsz	(??_main+1)^0,f,c
   379  000B48  D7FA               	bra	u277
   380                           
   381                           ;Main_DAC.c: 56:     }
   382  000B4A  EF8D  F005         	goto	l1226
   383  000B4E  EF00  F000         	goto	start
   384  000B52                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _Master_Mode *****************
   388 ;; Defined at:
   389 ;;		line 12 in file "I2C.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   403 ;;      Params:         0       0       0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text1
   417  000C90                     __ptext1:
   418                           	callstack 0
   419  000C90                     _Master_Mode:
   420                           	callstack 30
   421  000C90                     
   422                           ;I2C.c: 14:     TRISBbits.RB0 = 1;
   423  000C90  8093               	bsf	147,0,c	;volatile
   424                           
   425                           ;I2C.c: 15:     TRISBbits.RB1 = 1;
   426  000C92  8293               	bsf	147,1,c	;volatile
   427                           
   428                           ;I2C.c: 17:     SSPSTATbits.SMP = 1;
   429  000C94  8EC7               	bsf	199,7,c	;volatile
   430                           
   431                           ;I2C.c: 19:     SSPCON1bits.SSPEN = 1;
   432  000C96  8AC6               	bsf	198,5,c	;volatile
   433                           
   434                           ;I2C.c: 21:     SSPCON1bits.SSPM3 = 1;
   435  000C98  86C6               	bsf	198,3,c	;volatile
   436                           
   437                           ;I2C.c: 22:     SSPCON1bits.SSPM2 = 0;
   438  000C9A  94C6               	bcf	198,2,c	;volatile
   439                           
   440                           ;I2C.c: 23:     SSPCON1bits.SSPM1 = 0;
   441  000C9C  92C6               	bcf	198,1,c	;volatile
   442                           
   443                           ;I2C.c: 24:     SSPCON1bits.SSPM0 = 0;
   444  000C9E  90C6               	bcf	198,0,c	;volatile
   445  000CA0                     
   446                           ;I2C.c: 35:     SSPADD = (uint8_t)(((48000000UL/4)/100000UL) - 1);
   447  000CA0  0E77               	movlw	119
   448  000CA2  6EC8               	movwf	200,c	;volatile
   449                           
   450                           ;I2C.c: 36:     SSPCON2 = 0x00;
   451  000CA4  0E00               	movlw	0
   452  000CA6  6EC5               	movwf	197,c	;volatile
   453  000CA8  0012               	return		;funcret
   454  000CAA                     __end_of_Master_Mode:
   455                           	callstack 0
   456                           
   457 ;; *************** function _MCP4725_WriteComand *****************
   458 ;; Defined at:
   459 ;;		line 5 in file "DAC.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  data            2    4[COMRAM] unsigned short 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  low             1   10[COMRAM] unsigned char 
   464 ;;  high            1    9[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         2       0       0       0       0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0       0       0       0       0
   476 ;;      Temps:          3       0       0       0       0       0       0       0       0
   477 ;;      Totals:         7       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        7 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 1
   481 ;; This function calls:
   482 ;;		_I2C_ADDRESS_SLAVE
   483 ;;		_I2C_Start
   484 ;;		_I2C_Stop
   485 ;;		_I2C_Write_Data
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text2
   492  000B52                     __ptext2:
   493                           	callstack 0
   494  000B52                     _MCP4725_WriteComand:
   495                           	callstack 29
   496  000B52                     
   497                           ;DAC.c: 6:     uint8_t high;;DAC.c: 7:     uint8_t low;;DAC.c: 9:     I2C_Start();
   498  000B52  EC69  F006         	call	_I2C_Start	;wreg free
   499  000B56                     
   500                           ;DAC.c: 11:     I2C_ADDRESS_SLAVE(0xC0,0x00);
   501  000B56  0E00               	movlw	0
   502  000B58  6E27               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
   503  000B5A  0EC0               	movlw	192
   504  000B5C  ECF7  F005         	call	_I2C_ADDRESS_SLAVE
   505  000B60                     
   506                           ;DAC.c: 12:     I2C_Write_Data(0b01000000);
   507  000B60  0E40               	movlw	64
   508  000B62  EC3A  F006         	call	_I2C_Write_Data
   509  000B66                     
   510                           ;DAC.c: 13:     high = (data >> 4);
   511  000B66  C02B  F02D         	movff	MCP4725_WriteComand@data,??_MCP4725_WriteComand
   512  000B6A  C02C  F02E         	movff	MCP4725_WriteComand@data+1,??_MCP4725_WriteComand+1
   513  000B6E  0E04               	movlw	4
   514  000B70  6E2F               	movwf	(??_MCP4725_WriteComand+2)^0,c
   515  000B72                     u255:
   516  000B72  90D8               	bcf	status,0,c
   517  000B74  322E               	rrcf	(??_MCP4725_WriteComand+1)^0,f,c
   518  000B76  322D               	rrcf	??_MCP4725_WriteComand^0,f,c
   519  000B78  2E2F               	decfsz	(??_MCP4725_WriteComand+2)^0,f,c
   520  000B7A  EFB9  F005         	goto	u255
   521  000B7E  502D               	movf	??_MCP4725_WriteComand^0,w,c
   522  000B80  6E30               	movwf	MCP4725_WriteComand@high^0,c
   523  000B82                     
   524                           ;DAC.c: 14:     low = (data & 0b1111)<<4;
   525  000B82  C02B  F02D         	movff	MCP4725_WriteComand@data,??_MCP4725_WriteComand
   526  000B86  0E0F               	movlw	15
   527  000B88  162D               	andwf	??_MCP4725_WriteComand^0,f,c
   528  000B8A  382D               	swapf	??_MCP4725_WriteComand^0,w,c
   529  000B8C  0BF0               	andlw	240
   530  000B8E  6E31               	movwf	MCP4725_WriteComand@low^0,c
   531  000B90                     
   532                           ;DAC.c: 16:     I2C_Write_Data(high);
   533  000B90  5030               	movf	MCP4725_WriteComand@high^0,w,c
   534  000B92  EC3A  F006         	call	_I2C_Write_Data
   535  000B96                     
   536                           ;DAC.c: 17:     I2C_Write_Data(low);
   537  000B96  5031               	movf	MCP4725_WriteComand@low^0,w,c
   538  000B98  EC3A  F006         	call	_I2C_Write_Data
   539  000B9C                     
   540                           ;DAC.c: 19:     I2C_Stop();
   541  000B9C  EC60  F006         	call	_I2C_Stop	;wreg free
   542  000BA0  0012               	return		;funcret
   543  000BA2                     __end_of_MCP4725_WriteComand:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_I2C_WriteText *****************
   547 ;; Defined at:
   548 ;;		line 109 in file "LCD_I2C.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  row             1    wreg     unsigned char 
   551 ;;  col             1   10[COMRAM] unsigned char 
   552 ;;  string          2   11[COMRAM] PTR unsigned char 
   553 ;;		 -> STR_2(21), STR_1(21), 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  row             1   15[COMRAM] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         3       0       0       0       0       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0       0       0       0       0
   567 ;;      Temps:          2       0       0       0       0       0       0       0       0
   568 ;;      Totals:         6       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        6 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 4
   572 ;; This function calls:
   573 ;;		_LCD_I2C_nibble
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text3
   580  00093E                     __ptext3:
   581                           	callstack 0
   582  00093E                     _LCD_I2C_WriteText:
   583                           	callstack 26
   584                           
   585                           ;incstack = 0
   586                           ;LCD_I2C_WriteText@row stored from wreg
   587  00093E  6E36               	movwf	LCD_I2C_WriteText@row^0,c
   588  000940                     
   589                           ;LCD_I2C.c: 112:     switch (row) {
   590  000940  EFD4  F004         	goto	l1176
   591  000944                     l1154:
   592  000944  5031               	movf	LCD_I2C_WriteText@col^0,w,c
   593  000946  0F80               	addlw	128
   594  000948  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   595  00094A                     
   596                           ;LCD_I2C.c: 114:                 LCD_I2C_nibble(0x00,col);
   597  00094A  C031  F02F         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   598  00094E  0E00               	movlw	0
   599  000950  EC2C  F006         	call	_LCD_I2C_nibble
   600                           
   601                           ;LCD_I2C.c: 115:                 break;
   602  000954  EFFD  F004         	goto	l1182
   603  000958                     l1158:
   604  000958  5031               	movf	LCD_I2C_WriteText@col^0,w,c
   605  00095A  0FC0               	addlw	192
   606  00095C  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   607  00095E                     
   608                           ;LCD_I2C.c: 118:                 LCD_I2C_nibble(0x00,col);
   609  00095E  C031  F02F         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   610  000962  0E00               	movlw	0
   611  000964  EC2C  F006         	call	_LCD_I2C_nibble
   612                           
   613                           ;LCD_I2C.c: 119:                 break;
   614  000968  EFFD  F004         	goto	l1182
   615  00096C                     l1162:
   616  00096C  5031               	movf	LCD_I2C_WriteText@col^0,w,c
   617  00096E  0F94               	addlw	148
   618  000970  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   619  000972                     
   620                           ;LCD_I2C.c: 122:                 LCD_I2C_nibble(0x00,col);
   621  000972  C031  F02F         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   622  000976  0E00               	movlw	0
   623  000978  EC2C  F006         	call	_LCD_I2C_nibble
   624                           
   625                           ;LCD_I2C.c: 123:                 break;
   626  00097C  EFFD  F004         	goto	l1182
   627  000980                     l1166:
   628  000980  5031               	movf	LCD_I2C_WriteText@col^0,w,c
   629  000982  0FD4               	addlw	212
   630  000984  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   631  000986                     
   632                           ;LCD_I2C.c: 126:                 LCD_I2C_nibble(0x00,col);
   633  000986  C031  F02F         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   634  00098A  0E00               	movlw	0
   635  00098C  EC2C  F006         	call	_LCD_I2C_nibble
   636                           
   637                           ;LCD_I2C.c: 127:                 break;
   638  000990  EFFD  F004         	goto	l1182
   639  000994                     l1170:
   640  000994  5031               	movf	LCD_I2C_WriteText@col^0,w,c
   641  000996  0F80               	addlw	128
   642  000998  6E31               	movwf	LCD_I2C_WriteText@col^0,c
   643  00099A                     
   644                           ;LCD_I2C.c: 130:                 LCD_I2C_nibble(0x00,col);
   645  00099A  C031  F02F         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
   646  00099E  0E00               	movlw	0
   647  0009A0  EC2C  F006         	call	_LCD_I2C_nibble
   648                           
   649                           ;LCD_I2C.c: 131:                 break;
   650  0009A4  EFFD  F004         	goto	l1182
   651  0009A8                     l1176:
   652  0009A8  5036               	movf	LCD_I2C_WriteText@row^0,w,c
   653  0009AA  6E34               	movwf	??_LCD_I2C_WriteText^0,c
   654  0009AC  6A35               	clrf	(??_LCD_I2C_WriteText+1)^0,c
   655                           
   656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   657                           ; Switch size 1, requested type "simple"
   658                           ; Number of cases is 1, Range of values is 0 to 0
   659                           ; switch strategies available:
   660                           ; Name         Instructions Cycles
   661                           ; simple_byte            4     3 (average)
   662                           ;	Chosen strategy is simple_byte
   663  0009AE  5035               	movf	(??_LCD_I2C_WriteText+1)^0,w,c
   664  0009B0  0A00               	xorlw	0	; case 0
   665  0009B2  B4D8               	btfsc	status,2,c
   666  0009B4  EFDE  F004         	goto	l1236
   667  0009B8  EFCA  F004         	goto	l1170
   668  0009BC                     l1236:
   669                           
   670                           ; Switch size 1, requested type "simple"
   671                           ; Number of cases is 4, Range of values is 0 to 3
   672                           ; switch strategies available:
   673                           ; Name         Instructions Cycles
   674                           ; simple_byte           13     7 (average)
   675                           ;	Chosen strategy is simple_byte
   676  0009BC  5034               	movf	??_LCD_I2C_WriteText^0,w,c
   677  0009BE  0A00               	xorlw	0	; case 0
   678  0009C0  B4D8               	btfsc	status,2,c
   679  0009C2  EFA2  F004         	goto	l1154
   680  0009C6  0A01               	xorlw	1	; case 1
   681  0009C8  B4D8               	btfsc	status,2,c
   682  0009CA  EFAC  F004         	goto	l1158
   683  0009CE  0A03               	xorlw	3	; case 2
   684  0009D0  B4D8               	btfsc	status,2,c
   685  0009D2  EFB6  F004         	goto	l1162
   686  0009D6  0A01               	xorlw	1	; case 3
   687  0009D8  B4D8               	btfsc	status,2,c
   688  0009DA  EFC0  F004         	goto	l1166
   689  0009DE  EFCA  F004         	goto	l1170
   690  0009E2                     l1178:
   691                           
   692                           ;LCD_I2C.c: 138:         LCD_I2C_nibble(0x01,*string++);
   693  0009E2  C032  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
   694  0009E6  C033  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
   695  0009EA                     	if	0	;tblptru may be non-zero
   696  0009EA                     	endif
   697  0009EA                     	if	0	;tblptru may be non-zero
   698  0009EA                     	endif
   699  0009EA  0008               	tblrd		*
   700  0009EC  CFF5 F02F          	movff	tablat,LCD_I2C_nibble@cmd
   701  0009F0  0E01               	movlw	1
   702  0009F2  EC2C  F006         	call	_LCD_I2C_nibble
   703  0009F6  4A32               	infsnz	LCD_I2C_WriteText@string^0,f,c
   704  0009F8  2A33               	incf	(LCD_I2C_WriteText@string+1)^0,f,c
   705  0009FA                     l1182:
   706                           
   707                           ;LCD_I2C.c: 137:     while (*string)
   708  0009FA  C032  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
   709  0009FE  C033  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
   710  000A02                     	if	0	;tblptru may be non-zero
   711  000A02                     	endif
   712  000A02                     	if	0	;tblptru may be non-zero
   713  000A02                     	endif
   714  000A02  0008               	tblrd		*
   715  000A04  50F5               	movf	tablat,w,c
   716  000A06  0900               	iorlw	0
   717  000A08  A4D8               	btfss	status,2,c
   718  000A0A  EF09  F005         	goto	u231
   719  000A0E  EF0B  F005         	goto	u230
   720  000A12                     u231:
   721  000A12  EFF1  F004         	goto	l1178
   722  000A16                     u230:
   723  000A16  0012               	return		;funcret
   724  000A18                     __end_of_LCD_I2C_WriteText:
   725                           	callstack 0
   726                           
   727 ;; *************** function _LCD_I2C_Init *****************
   728 ;; Defined at:
   729 ;;		line 61 in file "LCD_I2C.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0
   745 ;;      Temps:          1       0       0       0       0       0       0       0       0
   746 ;;      Totals:         1       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        1 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 4
   750 ;; This function calls:
   751 ;;		_I2C_ADDRESS_SLAVE
   752 ;;		_I2C_Start
   753 ;;		_I2C_Stop
   754 ;;		_I2C_Write_Data
   755 ;;		_LCD_I2C_Databus
   756 ;;		_LCD_I2C_nibble
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text4
   763  00082C                     __ptext4:
   764                           	callstack 0
   765  00082C                     _LCD_I2C_Init:
   766                           	callstack 26
   767  00082C                     
   768                           ;LCD_I2C.c: 64:     I2C_Start();
   769  00082C  EC69  F006         	call	_I2C_Start	;wreg free
   770  000830                     
   771                           ;LCD_I2C.c: 65:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
   772  000830  0E00               	movlw	0
   773  000832  6E27               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
   774  000834  0E4E               	movlw	78
   775  000836  ECF7  F005         	call	_I2C_ADDRESS_SLAVE
   776  00083A                     
   777                           ;LCD_I2C.c: 66:     I2C_Write_Data(0x00);
   778  00083A  0E00               	movlw	0
   779  00083C  EC3A  F006         	call	_I2C_Write_Data
   780  000840                     
   781                           ;LCD_I2C.c: 67:     I2C_Stop();
   782  000840  EC60  F006         	call	_I2C_Stop	;wreg free
   783  000844                     
   784                           ;LCD_I2C.c: 68:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   785  000844  0E62               	movlw	98
   786  000846  6E31               	movwf	??_LCD_I2C_Init^0,c
   787  000848  0E66               	movlw	102
   788  00084A                     u287:
   789  00084A  2EE8               	decfsz	wreg,f,c
   790  00084C  D7FE               	bra	u287
   791  00084E  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   792  000850  D7FC               	bra	u287
   793  000852                     
   794                           ;LCD_I2C.c: 86:     LCD_I2C_Databus(0,0x03);
   795  000852  0E03               	movlw	3
   796  000854  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
   797  000856  0E00               	movlw	0
   798  000858  EC0C  F005         	call	_LCD_I2C_Databus
   799  00085C                     
   800                           ;LCD_I2C.c: 87:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   801  00085C  0E21               	movlw	33
   802  00085E  6E31               	movwf	??_LCD_I2C_Init^0,c
   803  000860  0E76               	movlw	118
   804  000862                     u297:
   805  000862  2EE8               	decfsz	wreg,f,c
   806  000864  D7FE               	bra	u297
   807  000866  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   808  000868  D7FC               	bra	u297
   809  00086A  D000               	nop2	
   810  00086C                     
   811                           ;LCD_I2C.c: 89:     LCD_I2C_Databus(0,0x03);
   812  00086C  0E03               	movlw	3
   813  00086E  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
   814  000870  0E00               	movlw	0
   815  000872  EC0C  F005         	call	_LCD_I2C_Databus
   816  000876                     
   817                           ;LCD_I2C.c: 90:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   818  000876  0E21               	movlw	33
   819  000878  6E31               	movwf	??_LCD_I2C_Init^0,c
   820  00087A  0E76               	movlw	118
   821  00087C                     u307:
   822  00087C  2EE8               	decfsz	wreg,f,c
   823  00087E  D7FE               	bra	u307
   824  000880  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   825  000882  D7FC               	bra	u307
   826  000884  D000               	nop2	
   827  000886                     
   828                           ;LCD_I2C.c: 92:     LCD_I2C_Databus(0,0x03);
   829  000886  0E03               	movlw	3
   830  000888  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
   831  00088A  0E00               	movlw	0
   832  00088C  EC0C  F005         	call	_LCD_I2C_Databus
   833  000890                     
   834                           ;LCD_I2C.c: 93:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   835  000890  0E21               	movlw	33
   836  000892  6E31               	movwf	??_LCD_I2C_Init^0,c
   837  000894  0E76               	movlw	118
   838  000896                     u317:
   839  000896  2EE8               	decfsz	wreg,f,c
   840  000898  D7FE               	bra	u317
   841  00089A  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   842  00089C  D7FC               	bra	u317
   843  00089E  D000               	nop2	
   844  0008A0                     
   845                           ;LCD_I2C.c: 95:     LCD_I2C_Databus(0,0x02);
   846  0008A0  0E02               	movlw	2
   847  0008A2  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
   848  0008A4  0E00               	movlw	0
   849  0008A6  EC0C  F005         	call	_LCD_I2C_Databus
   850  0008AA                     
   851                           ;LCD_I2C.c: 96:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   852  0008AA  0E21               	movlw	33
   853  0008AC  6E31               	movwf	??_LCD_I2C_Init^0,c
   854  0008AE  0E76               	movlw	118
   855  0008B0                     u327:
   856  0008B0  2EE8               	decfsz	wreg,f,c
   857  0008B2  D7FE               	bra	u327
   858  0008B4  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   859  0008B6  D7FC               	bra	u327
   860  0008B8  D000               	nop2	
   861  0008BA                     
   862                           ;LCD_I2C.c: 97:     LCD_I2C_nibble(0,0x028);
   863  0008BA  0E28               	movlw	40
   864  0008BC  6E2F               	movwf	LCD_I2C_nibble@cmd^0,c
   865  0008BE  0E00               	movlw	0
   866  0008C0  EC2C  F006         	call	_LCD_I2C_nibble
   867  0008C4                     
   868                           ;LCD_I2C.c: 98:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   869  0008C4  0E21               	movlw	33
   870  0008C6  6E31               	movwf	??_LCD_I2C_Init^0,c
   871  0008C8  0E76               	movlw	118
   872  0008CA                     u337:
   873  0008CA  2EE8               	decfsz	wreg,f,c
   874  0008CC  D7FE               	bra	u337
   875  0008CE  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   876  0008D0  D7FC               	bra	u337
   877  0008D2  D000               	nop2	
   878  0008D4                     
   879                           ;LCD_I2C.c: 99:     LCD_I2C_nibble(0,0x08);
   880  0008D4  0E08               	movlw	8
   881  0008D6  6E2F               	movwf	LCD_I2C_nibble@cmd^0,c
   882  0008D8  0E00               	movlw	0
   883  0008DA  EC2C  F006         	call	_LCD_I2C_nibble
   884  0008DE                     
   885                           ;LCD_I2C.c: 100:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   886  0008DE  0E21               	movlw	33
   887  0008E0  6E31               	movwf	??_LCD_I2C_Init^0,c
   888  0008E2  0E76               	movlw	118
   889  0008E4                     u347:
   890  0008E4  2EE8               	decfsz	wreg,f,c
   891  0008E6  D7FE               	bra	u347
   892  0008E8  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   893  0008EA  D7FC               	bra	u347
   894  0008EC  D000               	nop2	
   895  0008EE                     
   896                           ;LCD_I2C.c: 101:     LCD_I2C_nibble(0,0x01);
   897  0008EE  0E01               	movlw	1
   898  0008F0  6E2F               	movwf	LCD_I2C_nibble@cmd^0,c
   899  0008F2  0E00               	movlw	0
   900  0008F4  EC2C  F006         	call	_LCD_I2C_nibble
   901  0008F8                     
   902                           ;LCD_I2C.c: 102:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   903  0008F8  0E21               	movlw	33
   904  0008FA  6E31               	movwf	??_LCD_I2C_Init^0,c
   905  0008FC  0E76               	movlw	118
   906  0008FE                     u357:
   907  0008FE  2EE8               	decfsz	wreg,f,c
   908  000900  D7FE               	bra	u357
   909  000902  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   910  000904  D7FC               	bra	u357
   911  000906  D000               	nop2	
   912  000908                     
   913                           ;LCD_I2C.c: 103:     LCD_I2C_nibble(0,0x06);
   914  000908  0E06               	movlw	6
   915  00090A  6E2F               	movwf	LCD_I2C_nibble@cmd^0,c
   916  00090C  0E00               	movlw	0
   917  00090E  EC2C  F006         	call	_LCD_I2C_nibble
   918  000912                     
   919                           ;LCD_I2C.c: 104:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   920  000912  0E21               	movlw	33
   921  000914  6E31               	movwf	??_LCD_I2C_Init^0,c
   922  000916  0E76               	movlw	118
   923  000918                     u367:
   924  000918  2EE8               	decfsz	wreg,f,c
   925  00091A  D7FE               	bra	u367
   926  00091C  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   927  00091E  D7FC               	bra	u367
   928  000920  D000               	nop2	
   929  000922                     
   930                           ;LCD_I2C.c: 105:     LCD_I2C_nibble(0,0x0F);
   931  000922  0E0F               	movlw	15
   932  000924  6E2F               	movwf	LCD_I2C_nibble@cmd^0,c
   933  000926  0E00               	movlw	0
   934  000928  EC2C  F006         	call	_LCD_I2C_nibble
   935  00092C                     
   936                           ;LCD_I2C.c: 106:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   937  00092C  0E21               	movlw	33
   938  00092E  6E31               	movwf	??_LCD_I2C_Init^0,c
   939  000930  0E76               	movlw	118
   940  000932                     u377:
   941  000932  2EE8               	decfsz	wreg,f,c
   942  000934  D7FE               	bra	u377
   943  000936  2E31               	decfsz	??_LCD_I2C_Init^0,f,c
   944  000938  D7FC               	bra	u377
   945  00093A  D000               	nop2	
   946  00093C  0012               	return		;funcret
   947  00093E                     __end_of_LCD_I2C_Init:
   948                           	callstack 0
   949                           
   950 ;; *************** function _LCD_I2C_nibble *****************
   951 ;; Defined at:
   952 ;;		line 53 in file "LCD_I2C.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  ctrl            1    wreg     unsigned char 
   955 ;;  cmd             1    8[COMRAM] unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  ctrl            1    9[COMRAM] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         1       0       0       0       0       0       0       0       0
   968 ;;      Locals:         1       0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0       0
   970 ;;      Totals:         2       0       0       0       0       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; Hardware stack levels required when called: 3
   974 ;; This function calls:
   975 ;;		_LCD_I2C_Databus
   976 ;; This function is called by:
   977 ;;		_LCD_I2C_Init
   978 ;;		_LCD_I2C_WriteText
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text5
   983  000C58                     __ptext5:
   984                           	callstack 0
   985  000C58                     _LCD_I2C_nibble:
   986                           	callstack 26
   987                           
   988                           ;incstack = 0
   989                           ;LCD_I2C_nibble@ctrl stored from wreg
   990  000C58  6E30               	movwf	LCD_I2C_nibble@ctrl^0,c
   991  000C5A                     
   992                           ;LCD_I2C.c: 55:     LCD_I2C_Databus(ctrl,cmd>>4);
   993  000C5A  382F               	swapf	LCD_I2C_nibble@cmd^0,w,c
   994  000C5C  0B0F               	andlw	15
   995  000C5E  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
   996  000C60  5030               	movf	LCD_I2C_nibble@ctrl^0,w,c
   997  000C62  EC0C  F005         	call	_LCD_I2C_Databus
   998                           
   999                           ;LCD_I2C.c: 56:     LCD_I2C_Databus(ctrl,cmd&0x0F);
  1000  000C66  502F               	movf	LCD_I2C_nibble@cmd^0,w,c
  1001  000C68  0B0F               	andlw	15
  1002  000C6A  6E2C               	movwf	LCD_I2C_Databus@cmd^0,c
  1003  000C6C  5030               	movf	LCD_I2C_nibble@ctrl^0,w,c
  1004  000C6E  EC0C  F005         	call	_LCD_I2C_Databus
  1005  000C72  0012               	return		;funcret
  1006  000C74                     __end_of_LCD_I2C_nibble:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _LCD_I2C_Databus *****************
  1010 ;; Defined at:
  1011 ;;		line 12 in file "LCD_I2C.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  ctrl            1    wreg     unsigned char 
  1014 ;;  cmd             1    5[COMRAM] unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  ctrl            1    6[COMRAM] unsigned char 
  1017 ;;  data            1    7[COMRAM] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1027 ;;      Params:         1       0       0       0       0       0       0       0       0
  1028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1030 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1031 ;;Total ram usage:        3 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 2
  1034 ;; This function calls:
  1035 ;;		_PCF8574_Write
  1036 ;; This function is called by:
  1037 ;;		_LCD_I2C_nibble
  1038 ;;		_LCD_I2C_Init
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text6
  1043  000A18                     __ptext6:
  1044                           	callstack 0
  1045  000A18                     _LCD_I2C_Databus:
  1046                           	callstack 26
  1047                           
  1048                           ;incstack = 0
  1049                           ;LCD_I2C_Databus@ctrl stored from wreg
  1050  000A18  6E2D               	movwf	LCD_I2C_Databus@ctrl^0,c
  1051  000A1A                     
  1052                           ;LCD_I2C.c: 13:     uint8_t data;;LCD_I2C.c: 15:     if((cmd & 1) == 1){
  1053  000A1A  A02C               	btfss	LCD_I2C_Databus@cmd^0,0,c
  1054  000A1C  EF12  F005         	goto	u181
  1055  000A20  EF14  F005         	goto	u180
  1056  000A24                     u181:
  1057  000A24  EF19  F005         	goto	l1070
  1058  000A28                     u180:
  1059  000A28                     
  1060                           ;LCD_I2C.c: 16:         data = data | 0x10;
  1061  000A28  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1062  000A2A  0910               	iorlw	16
  1063  000A2C  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1064                           
  1065                           ;LCD_I2C.c: 17:     }else{
  1066  000A2E  EF1C  F005         	goto	l1072
  1067  000A32                     l1070:
  1068                           
  1069                           ;LCD_I2C.c: 18:         data = data &~ 0x10;
  1070  000A32  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1071  000A34  0BEF               	andlw	239
  1072  000A36  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1073  000A38                     l1072:
  1074                           
  1075                           ;LCD_I2C.c: 21:     if((cmd & 2) == 2){
  1076  000A38  A22C               	btfss	LCD_I2C_Databus@cmd^0,1,c
  1077  000A3A  EF21  F005         	goto	u191
  1078  000A3E  EF23  F005         	goto	u190
  1079  000A42                     u191:
  1080  000A42  EF28  F005         	goto	l1076
  1081  000A46                     u190:
  1082  000A46                     
  1083                           ;LCD_I2C.c: 22:         data = data | 0x20;
  1084  000A46  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1085  000A48  0920               	iorlw	32
  1086  000A4A  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1087                           
  1088                           ;LCD_I2C.c: 23:     }else{
  1089  000A4C  EF2B  F005         	goto	l1078
  1090  000A50                     l1076:
  1091                           
  1092                           ;LCD_I2C.c: 24:         data = data &~ 0x20;
  1093  000A50  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1094  000A52  0BDF               	andlw	223
  1095  000A54  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1096  000A56                     l1078:
  1097                           
  1098                           ;LCD_I2C.c: 27:     if((cmd & 4) == 4){
  1099  000A56  A42C               	btfss	LCD_I2C_Databus@cmd^0,2,c
  1100  000A58  EF30  F005         	goto	u201
  1101  000A5C  EF32  F005         	goto	u200
  1102  000A60                     u201:
  1103  000A60  EF37  F005         	goto	l1082
  1104  000A64                     u200:
  1105  000A64                     
  1106                           ;LCD_I2C.c: 28:         data = data | 0x40;
  1107  000A64  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1108  000A66  0940               	iorlw	64
  1109  000A68  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1110                           
  1111                           ;LCD_I2C.c: 29:     }else{
  1112  000A6A  EF3A  F005         	goto	l1084
  1113  000A6E                     l1082:
  1114                           
  1115                           ;LCD_I2C.c: 30:         data = data &~ 0x40;
  1116  000A6E  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1117  000A70  0BBF               	andlw	191
  1118  000A72  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1119  000A74                     l1084:
  1120                           
  1121                           ;LCD_I2C.c: 33:     if((cmd & 8) == 8){
  1122  000A74  A62C               	btfss	LCD_I2C_Databus@cmd^0,3,c
  1123  000A76  EF3F  F005         	goto	u211
  1124  000A7A  EF41  F005         	goto	u210
  1125  000A7E                     u211:
  1126  000A7E  EF46  F005         	goto	l1088
  1127  000A82                     u210:
  1128  000A82                     
  1129                           ;LCD_I2C.c: 34:         data = data | 0x80;
  1130  000A82  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1131  000A84  0980               	iorlw	128
  1132  000A86  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1133                           
  1134                           ;LCD_I2C.c: 35:     }else{
  1135  000A88  EF49  F005         	goto	l1090
  1136  000A8C                     l1088:
  1137                           
  1138                           ;LCD_I2C.c: 36:         data = data &~ 0x80;
  1139  000A8C  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1140  000A8E  0B7F               	andlw	127
  1141  000A90  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1142  000A92                     l1090:
  1143                           
  1144                           ;LCD_I2C.c: 39:     _delay((unsigned long)((60)*(20000000UL/4000000.0)));
  1145  000A92  0E64               	movlw	100
  1146  000A94                     u387:
  1147  000A94  2EE8               	decfsz	wreg,f,c
  1148  000A96  D7FE               	bra	u387
  1149  000A98                     
  1150                           ;LCD_I2C.c: 42:     if(ctrl == 1){
  1151  000A98  042D               	decf	LCD_I2C_Databus@ctrl^0,w,c
  1152  000A9A  A4D8               	btfss	status,2,c
  1153  000A9C  EF52  F005         	goto	u221
  1154  000AA0  EF54  F005         	goto	u220
  1155  000AA4                     u221:
  1156  000AA4  EF59  F005         	goto	l1096
  1157  000AA8                     u220:
  1158  000AA8                     
  1159                           ;LCD_I2C.c: 43:         data = data | 0x01;
  1160  000AA8  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1161  000AAA  0901               	iorlw	1
  1162  000AAC  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1163                           
  1164                           ;LCD_I2C.c: 44:     }else{
  1165  000AAE  EF5C  F005         	goto	l1098
  1166  000AB2                     l1096:
  1167                           
  1168                           ;LCD_I2C.c: 45:         data = data &~ 0x01;
  1169  000AB2  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1170  000AB4  0BFE               	andlw	254
  1171  000AB6  6E2E               	movwf	LCD_I2C_Databus@data^0,c
  1172  000AB8                     l1098:
  1173                           
  1174                           ;LCD_I2C.c: 48:     PCF8574_Write(data | 0x04);
  1175  000AB8  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1176  000ABA  0904               	iorlw	4
  1177  000ABC  EC1D  F006         	call	_PCF8574_Write
  1178  000AC0                     
  1179                           ;LCD_I2C.c: 49:     _delay((unsigned long)((2)*(20000000UL/4000000.0)));
  1180  000AC0  0E03               	movlw	3
  1181  000AC2                     u397:
  1182  000AC2  2EE8               	decfsz	wreg,f,c
  1183  000AC4  D7FE               	bra	u397
  1184  000AC6  F000               	nop	
  1185  000AC8                     
  1186                           ;LCD_I2C.c: 50:     PCF8574_Write(data &~ 0x04);
  1187  000AC8  502E               	movf	LCD_I2C_Databus@data^0,w,c
  1188  000ACA  0BFB               	andlw	251
  1189  000ACC  EC1D  F006         	call	_PCF8574_Write
  1190  000AD0  0012               	return		;funcret
  1191  000AD2                     __end_of_LCD_I2C_Databus:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _PCF8574_Write *****************
  1195 ;; Defined at:
  1196 ;;		line 4 in file "LCD_I2C.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  byte            1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  byte            1    4[COMRAM] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        1 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 1
  1217 ;; This function calls:
  1218 ;;		_I2C_ADDRESS_SLAVE
  1219 ;;		_I2C_Start
  1220 ;;		_I2C_Stop
  1221 ;;		_I2C_Write_Data
  1222 ;; This function is called by:
  1223 ;;		_LCD_I2C_Databus
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text7
  1228  000C3A                     __ptext7:
  1229                           	callstack 0
  1230  000C3A                     _PCF8574_Write:
  1231                           	callstack 26
  1232                           
  1233                           ;incstack = 0
  1234                           ;PCF8574_Write@byte stored from wreg
  1235  000C3A  6E2B               	movwf	PCF8574_Write@byte^0,c
  1236  000C3C                     
  1237                           ;LCD_I2C.c: 6:     I2C_Start();
  1238  000C3C  EC69  F006         	call	_I2C_Start	;wreg free
  1239  000C40                     
  1240                           ;LCD_I2C.c: 7:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  1241  000C40  0E00               	movlw	0
  1242  000C42  6E27               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  1243  000C44  0E4E               	movlw	78
  1244  000C46  ECF7  F005         	call	_I2C_ADDRESS_SLAVE
  1245  000C4A                     
  1246                           ;LCD_I2C.c: 8:     I2C_Write_Data((byte | 0x08));
  1247  000C4A  502B               	movf	PCF8574_Write@byte^0,w,c
  1248  000C4C  0908               	iorlw	8
  1249  000C4E  EC3A  F006         	call	_I2C_Write_Data
  1250                           
  1251                           ;LCD_I2C.c: 9:     I2C_Stop();
  1252  000C52  EC60  F006         	call	_I2C_Stop	;wreg free
  1253  000C56  0012               	return		;funcret
  1254  000C58                     __end_of_PCF8574_Write:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _I2C_Write_Data *****************
  1258 ;; Defined at:
  1259 ;;		line 65 in file "I2C.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  data            1    wreg     unsigned char 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  data            1    0[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        1 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_MCP4725_WriteComand
  1283 ;;		_PCF8574_Write
  1284 ;;		_LCD_I2C_Init
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text8
  1289  000C74                     __ptext8:
  1290                           	callstack 0
  1291  000C74                     _I2C_Write_Data:
  1292                           	callstack 29
  1293                           
  1294                           ;incstack = 0
  1295                           ;I2C_Write_Data@data stored from wreg
  1296  000C74  6E27               	movwf	I2C_Write_Data@data^0,c
  1297  000C76                     
  1298                           ;I2C.c: 67:     SSPBUF = data;
  1299  000C76  C027  FFC9         	movff	I2C_Write_Data@data,4041	;volatile
  1300  000C7A                     
  1301                           ;I2C.c: 69:     SSPCON2bits.ACKDT = 0;
  1302  000C7A  9AC5               	bcf	197,5,c	;volatile
  1303  000C7C                     
  1304                           ;I2C.c: 71:     SSPCON2bits.ACKEN = 1;
  1305  000C7C  88C5               	bsf	197,4,c	;volatile
  1306  000C7E                     
  1307                           ;I2C.c: 73:     PIR1bits.SSPIF = 0;
  1308  000C7E  969E               	bcf	158,3,c	;volatile
  1309  000C80                     l63:
  1310  000C80  A69E               	btfss	158,3,c	;volatile
  1311  000C82  EF45  F006         	goto	u31
  1312  000C86  EF47  F006         	goto	u30
  1313  000C8A                     u31:
  1314  000C8A  EF40  F006         	goto	l63
  1315  000C8E                     u30:
  1316  000C8E  0012               	return		;funcret
  1317  000C90                     __end_of_I2C_Write_Data:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _I2C_Stop *****************
  1321 ;; Defined at:
  1322 ;;		line 102 in file "I2C.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		None
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_MCP4725_WriteComand
  1346 ;;		_PCF8574_Write
  1347 ;;		_LCD_I2C_Init
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text9
  1352  000CC0                     __ptext9:
  1353                           	callstack 0
  1354  000CC0                     _I2C_Stop:
  1355                           	callstack 29
  1356  000CC0                     
  1357                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  1358  000CC0  84C5               	bsf	197,2,c	;volatile
  1359  000CC2                     l78:
  1360  000CC2  B4C5               	btfsc	197,2,c	;volatile
  1361  000CC4  EF66  F006         	goto	u41
  1362  000CC8  EF68  F006         	goto	u40
  1363  000CCC                     u41:
  1364  000CCC  EF61  F006         	goto	l78
  1365  000CD0                     u40:
  1366  000CD0  0012               	return		;funcret
  1367  000CD2                     __end_of_I2C_Stop:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _I2C_Start *****************
  1371 ;; Defined at:
  1372 ;;		line 39 in file "I2C.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		None
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_MCP4725_WriteComand
  1396 ;;		_PCF8574_Write
  1397 ;;		_LCD_I2C_Init
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text10
  1402  000CD2                     __ptext10:
  1403                           	callstack 0
  1404  000CD2                     _I2C_Start:
  1405                           	callstack 29
  1406  000CD2                     
  1407                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  1408  000CD2  80C5               	bsf	197,0,c	;volatile
  1409  000CD4                     l51:
  1410  000CD4  B0C5               	btfsc	197,0,c	;volatile
  1411  000CD6  EF6F  F006         	goto	u11
  1412  000CDA  EF71  F006         	goto	u10
  1413  000CDE                     u11:
  1414  000CDE  EF6A  F006         	goto	l51
  1415  000CE2                     u10:
  1416  000CE2  0012               	return		;funcret
  1417  000CE4                     __end_of_I2C_Start:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _I2C_ADDRESS_SLAVE *****************
  1421 ;; Defined at:
  1422 ;;		line 48 in file "I2C.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  address         1    wreg     unsigned char 
  1425 ;;  modo            1    0[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  address         1    2[COMRAM] unsigned char 
  1428 ;;  data            1    3[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         1       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_MCP4725_WriteComand
  1448 ;;		_PCF8574_Write
  1449 ;;		_LCD_I2C_Init
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text11
  1454  000BEE                     __ptext11:
  1455                           	callstack 0
  1456  000BEE                     _I2C_ADDRESS_SLAVE:
  1457                           	callstack 29
  1458                           
  1459                           ;incstack = 0
  1460                           ;I2C_ADDRESS_SLAVE@address stored from wreg
  1461  000BEE  6E29               	movwf	I2C_ADDRESS_SLAVE@address^0,c
  1462  000BF0                     
  1463                           ;I2C.c: 51:     data = ((address & 0xFE)) | (modo & 0x01) ;
  1464  000BF0  C027  F028         	movff	I2C_ADDRESS_SLAVE@modo,??_I2C_ADDRESS_SLAVE
  1465  000BF4  0E01               	movlw	1
  1466  000BF6  1628               	andwf	??_I2C_ADDRESS_SLAVE^0,f,c
  1467  000BF8  5029               	movf	I2C_ADDRESS_SLAVE@address^0,w,c
  1468  000BFA  0BFE               	andlw	254
  1469  000BFC  1028               	iorwf	??_I2C_ADDRESS_SLAVE^0,w,c
  1470  000BFE  6E2A               	movwf	I2C_ADDRESS_SLAVE@data^0,c
  1471  000C00                     
  1472                           ;I2C.c: 52:     SSPBUF = data;
  1473  000C00  C02A  FFC9         	movff	I2C_ADDRESS_SLAVE@data,4041	;volatile
  1474  000C04                     
  1475                           ;I2C.c: 56:     SSPCON2bits.ACKDT = 0;
  1476  000C04  9AC5               	bcf	197,5,c	;volatile
  1477  000C06                     
  1478                           ;I2C.c: 58:     SSPCON2bits.ACKEN = 1;
  1479  000C06  88C5               	bsf	197,4,c	;volatile
  1480  000C08                     
  1481                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  1482  000C08  969E               	bcf	158,3,c	;volatile
  1483  000C0A                     l57:
  1484  000C0A  A69E               	btfss	158,3,c	;volatile
  1485  000C0C  EF0A  F006         	goto	u171
  1486  000C10  EF0C  F006         	goto	u170
  1487  000C14                     u171:
  1488  000C14  EF05  F006         	goto	l57
  1489  000C18                     u170:
  1490  000C18  0012               	return		;funcret
  1491  000C1A                     __end_of_I2C_ADDRESS_SLAVE:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _ADC_Read *****************
  1495 ;; Defined at:
  1496 ;;		line 42 in file "ADC.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  CHx             1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  CHx             1    4[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[COMRAM] unsigned short 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         2       0       0       0       0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1512 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1513 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1514 ;;Total ram usage:        5 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text12
  1524  000BA2                     __ptext12:
  1525                           	callstack 0
  1526  000BA2                     _ADC_Read:
  1527                           	callstack 30
  1528                           
  1529                           ;incstack = 0
  1530                           ;ADC_Read@CHx stored from wreg
  1531  000BA2  6E2B               	movwf	ADC_Read@CHx^0,c
  1532  000BA4                     
  1533                           ;ADC.c: 44:     ADCON0 = (ADCON0 & 0x03) | ((CHx<<2) & 0x3C);
  1534  000BA4  C02B  F029         	movff	ADC_Read@CHx,??_ADC_Read
  1535  000BA8  90D8               	bcf	status,0,c
  1536  000BAA  3629               	rlcf	??_ADC_Read^0,f,c
  1537  000BAC  90D8               	bcf	status,0,c
  1538  000BAE  3629               	rlcf	??_ADC_Read^0,f,c
  1539  000BB0  0E3C               	movlw	60
  1540  000BB2  1629               	andwf	??_ADC_Read^0,f,c
  1541  000BB4  50C2               	movf	194,w,c	;volatile
  1542  000BB6  0B03               	andlw	3
  1543  000BB8  1029               	iorwf	??_ADC_Read^0,w,c
  1544  000BBA  6EC2               	movwf	194,c	;volatile
  1545  000BBC                     
  1546                           ;ADC.c: 50:     ADCON0bits.GO_DONE = 1;
  1547  000BBC  82C2               	bsf	194,1,c	;volatile
  1548  000BBE                     l157:
  1549  000BBE  B2C2               	btfsc	194,1,c	;volatile
  1550  000BC0  EFE4  F005         	goto	u241
  1551  000BC4  EFE6  F005         	goto	u240
  1552  000BC8                     u241:
  1553  000BC8  EFDF  F005         	goto	l157
  1554  000BCC                     u240:
  1555  000BCC                     
  1556                           ;ADC.c: 54:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  1557  000BCC  0E0D               	movlw	13
  1558  000BCE  6E29               	movwf	??_ADC_Read^0,c
  1559  000BD0  0EFC               	movlw	252
  1560  000BD2                     u407:
  1561  000BD2  2EE8               	decfsz	wreg,f,c
  1562  000BD4  D7FE               	bra	u407
  1563  000BD6  2E29               	decfsz	??_ADC_Read^0,f,c
  1564  000BD8  D7FC               	bra	u407
  1565  000BDA                     
  1566                           ;ADC.c: 56:     return ((ADRESH<<8)+ADRESL);
  1567  000BDA  50C4               	movf	196,w,c	;volatile
  1568  000BDC  6E2A               	movwf	(??_ADC_Read+1)^0,c
  1569  000BDE  6A29               	clrf	??_ADC_Read^0,c
  1570  000BE0  50C3               	movf	195,w,c	;volatile
  1571  000BE2  2429               	addwf	??_ADC_Read^0,w,c
  1572  000BE4  6E27               	movwf	?_ADC_Read^0,c
  1573  000BE6  0E00               	movlw	0
  1574  000BE8  202A               	addwfc	(??_ADC_Read+1)^0,w,c
  1575  000BEA  6E28               	movwf	(?_ADC_Read+1)^0,c
  1576  000BEC  0012               	return		;funcret
  1577  000BEE                     __end_of_ADC_Read:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _ADC_Conversion *****************
  1581 ;; Defined at:
  1582 ;;		line 11 in file "ADC.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text13
  1610  000C1A                     __ptext13:
  1611                           	callstack 0
  1612  000C1A                     _ADC_Conversion:
  1613                           	callstack 30
  1614  000C1A                     
  1615                           ;ADC.c: 13:     ADCON0bits.GO_DONE = 0;
  1616  000C1A  92C2               	bcf	194,1,c	;volatile
  1617                           
  1618                           ;ADC.c: 15:     ADCON0bits.ADON = 1;
  1619  000C1C  80C2               	bsf	194,0,c	;volatile
  1620                           
  1621                           ;ADC.c: 18:     ADCON1bits.VCFG1 = 0;
  1622  000C1E  9AC1               	bcf	193,5,c	;volatile
  1623                           
  1624                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  1625  000C20  98C1               	bcf	193,4,c	;volatile
  1626                           
  1627                           ;ADC.c: 22:     ADCON1bits.PCFG3 = 1;
  1628  000C22  86C1               	bsf	193,3,c	;volatile
  1629                           
  1630                           ;ADC.c: 23:     ADCON1bits.PCFG2 = 1;
  1631  000C24  84C1               	bsf	193,2,c	;volatile
  1632                           
  1633                           ;ADC.c: 24:     ADCON1bits.PCFG1 = 1;
  1634  000C26  82C1               	bsf	193,1,c	;volatile
  1635                           
  1636                           ;ADC.c: 25:     ADCON1bits.PCFG0 = 0;
  1637  000C28  90C1               	bcf	193,0,c	;volatile
  1638                           
  1639                           ;ADC.c: 28:     ADCON2bits.ADFM = 1;
  1640  000C2A  8EC0               	bsf	192,7,c	;volatile
  1641                           
  1642                           ;ADC.c: 31:     ADCON2bits.ACQT2 = 0;
  1643  000C2C  9AC0               	bcf	192,5,c	;volatile
  1644                           
  1645                           ;ADC.c: 32:     ADCON2bits.ACQT1 = 1;
  1646  000C2E  88C0               	bsf	192,4,c	;volatile
  1647                           
  1648                           ;ADC.c: 33:     ADCON2bits.ACQT0 = 1;
  1649  000C30  86C0               	bsf	192,3,c	;volatile
  1650                           
  1651                           ;ADC.c: 36:     ADCON2bits.ADCS2 = 1;
  1652  000C32  84C0               	bsf	192,2,c	;volatile
  1653                           
  1654                           ;ADC.c: 37:     ADCON2bits.ADCS1 = 1;
  1655  000C34  82C0               	bsf	192,1,c	;volatile
  1656                           
  1657                           ;ADC.c: 38:     ADCON2bits.ADCS0 = 0;
  1658  000C36  90C0               	bcf	192,0,c	;volatile
  1659  000C38  0012               	return		;funcret
  1660  000C3A                     __end_of_ADC_Conversion:
  1661                           	callstack 0
  1662                           
  1663                           	psect	rparam
  1664  0000                     
  1665                           	psect	idloc
  1666                           
  1667                           ;Config register IDLOC0 @ 0x200000
  1668                           ;	unspecified, using default values
  1669  200000                     	org	2097152
  1670  200000  FF                 	db	255
  1671                           
  1672                           ;Config register IDLOC1 @ 0x200001
  1673                           ;	unspecified, using default values
  1674  200001                     	org	2097153
  1675  200001  FF                 	db	255
  1676                           
  1677                           ;Config register IDLOC2 @ 0x200002
  1678                           ;	unspecified, using default values
  1679  200002                     	org	2097154
  1680  200002  FF                 	db	255
  1681                           
  1682                           ;Config register IDLOC3 @ 0x200003
  1683                           ;	unspecified, using default values
  1684  200003                     	org	2097155
  1685  200003  FF                 	db	255
  1686                           
  1687                           ;Config register IDLOC4 @ 0x200004
  1688                           ;	unspecified, using default values
  1689  200004                     	org	2097156
  1690  200004  FF                 	db	255
  1691                           
  1692                           ;Config register IDLOC5 @ 0x200005
  1693                           ;	unspecified, using default values
  1694  200005                     	org	2097157
  1695  200005  FF                 	db	255
  1696                           
  1697                           ;Config register IDLOC6 @ 0x200006
  1698                           ;	unspecified, using default values
  1699  200006                     	org	2097158
  1700  200006  FF                 	db	255
  1701                           
  1702                           ;Config register IDLOC7 @ 0x200007
  1703                           ;	unspecified, using default values
  1704  200007                     	org	2097159
  1705  200007  FF                 	db	255
  1706                           
  1707                           	psect	config
  1708                           
  1709                           ;Config register CONFIG1L @ 0x300000
  1710                           ;	PLL Prescaler Selection bits
  1711                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  1712                           ;	System Clock Postscaler Selection bits
  1713                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1714                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1715                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1716  300000                     	org	3145728
  1717  300000  04                 	db	4
  1718                           
  1719                           ;Config register CONFIG1H @ 0x300001
  1720                           ;	Oscillator Selection bits
  1721                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1722                           ;	Fail-Safe Clock Monitor Enable bit
  1723                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1724                           ;	Internal/External Oscillator Switchover bit
  1725                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1726  300001                     	org	3145729
  1727  300001  0E                 	db	14
  1728                           
  1729                           ;Config register CONFIG2L @ 0x300002
  1730                           ;	Power-up Timer Enable bit
  1731                           ;	PWRT = ON, PWRT enabled
  1732                           ;	Brown-out Reset Enable bits
  1733                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1734                           ;	Brown-out Reset Voltage bits
  1735                           ;	BORV = 3, Minimum setting 2.05V
  1736                           ;	USB Voltage Regulator Enable bit
  1737                           ;	VREGEN = OFF, USB voltage regulator disabled
  1738  300002                     	org	3145730
  1739  300002  18                 	db	24
  1740                           
  1741                           ;Config register CONFIG2H @ 0x300003
  1742                           ;	Watchdog Timer Enable bit
  1743                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1744                           ;	Watchdog Timer Postscale Select bits
  1745                           ;	WDTPS = 32768, 1:32768
  1746  300003                     	org	3145731
  1747  300003  1E                 	db	30
  1748                           
  1749                           ; Padding undefined space
  1750  300004                     	org	3145732
  1751  300004  FF                 	db	255
  1752                           
  1753                           ;Config register CONFIG3H @ 0x300005
  1754                           ;	CCP2 MUX bit
  1755                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1756                           ;	PORTB A/D Enable bit
  1757                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1758                           ;	Low-Power Timer 1 Oscillator Enable bit
  1759                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1760                           ;	MCLR Pin Enable bit
  1761                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1762  300005                     	org	3145733
  1763  300005  83                 	db	131
  1764                           
  1765                           ;Config register CONFIG4L @ 0x300006
  1766                           ;	Stack Full/Underflow Reset Enable bit
  1767                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1768                           ;	Single-Supply ICSP Enable bit
  1769                           ;	LVP = OFF, Single-Supply ICSP disabled
  1770                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1771                           ;	ICPRT = OFF, ICPORT disabled
  1772                           ;	Extended Instruction Set Enable bit
  1773                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1774                           ;	Background Debugger Enable bit
  1775                           ;	DEBUG = 0x1, unprogrammed default
  1776  300006                     	org	3145734
  1777  300006  81                 	db	129
  1778                           
  1779                           ; Padding undefined space
  1780  300007                     	org	3145735
  1781  300007  FF                 	db	255
  1782                           
  1783                           ;Config register CONFIG5L @ 0x300008
  1784                           ;	Code Protection bit
  1785                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1786                           ;	Code Protection bit
  1787                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1788                           ;	Code Protection bit
  1789                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1790                           ;	Code Protection bit
  1791                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1792  300008                     	org	3145736
  1793  300008  0F                 	db	15
  1794                           
  1795                           ;Config register CONFIG5H @ 0x300009
  1796                           ;	Boot Block Code Protection bit
  1797                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1798                           ;	Data EEPROM Code Protection bit
  1799                           ;	CPD = OFF, Data EEPROM is not code-protected
  1800  300009                     	org	3145737
  1801  300009  C0                 	db	192
  1802                           
  1803                           ;Config register CONFIG6L @ 0x30000A
  1804                           ;	Write Protection bit
  1805                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1806                           ;	Write Protection bit
  1807                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1808                           ;	Write Protection bit
  1809                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1810                           ;	Write Protection bit
  1811                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1812  30000A                     	org	3145738
  1813  30000A  0F                 	db	15
  1814                           
  1815                           ;Config register CONFIG6H @ 0x30000B
  1816                           ;	Configuration Register Write Protection bit
  1817                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1818                           ;	Boot Block Write Protection bit
  1819                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1820                           ;	Data EEPROM Write Protection bit
  1821                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1822  30000B                     	org	3145739
  1823  30000B  E0                 	db	224
  1824                           
  1825                           ;Config register CONFIG7L @ 0x30000C
  1826                           ;	Table Read Protection bit
  1827                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1828                           ;	Table Read Protection bit
  1829                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1830                           ;	Table Read Protection bit
  1831                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1832                           ;	Table Read Protection bit
  1833                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1834  30000C                     	org	3145740
  1835  30000C  0F                 	db	15
  1836                           
  1837                           ;Config register CONFIG7H @ 0x30000D
  1838                           ;	Boot Block Table Read Protection bit
  1839                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1840  30000D                     	org	3145741
  1841  30000D  40                 	db	64
  1842                           tosu	equ	0xFFF
  1843                           tosh	equ	0xFFE
  1844                           tosl	equ	0xFFD
  1845                           stkptr	equ	0xFFC
  1846                           pclatu	equ	0xFFB
  1847                           pclath	equ	0xFFA
  1848                           pcl	equ	0xFF9
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           prodh	equ	0xFF4
  1854                           prodl	equ	0xFF3
  1855                           indf0	equ	0xFEF
  1856                           postinc0	equ	0xFEE
  1857                           postdec0	equ	0xFED
  1858                           preinc0	equ	0xFEC
  1859                           plusw0	equ	0xFEB
  1860                           fsr0h	equ	0xFEA
  1861                           fsr0l	equ	0xFE9
  1862                           wreg	equ	0xFE8
  1863                           indf1	equ	0xFE7
  1864                           postinc1	equ	0xFE6
  1865                           postdec1	equ	0xFE5
  1866                           preinc1	equ	0xFE4
  1867                           plusw1	equ	0xFE3
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           bsr	equ	0xFE0
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           postdec2	equ	0xFDD
  1874                           preinc2	equ	0xFDC
  1875                           plusw2	equ	0xFDB
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_I2C_WriteText@string	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_LCD_I2C_WriteText
    _MCP4725_WriteComand->_I2C_ADDRESS_SLAVE
    _LCD_I2C_WriteText->_LCD_I2C_nibble
    _LCD_I2C_Init->_LCD_I2C_nibble
    _LCD_I2C_nibble->_LCD_I2C_Databus
    _LCD_I2C_Databus->_PCF8574_Write
    _PCF8574_Write->_I2C_ADDRESS_SLAVE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5    6773
                                             16 COMRAM     7     2      5
                     _ADC_Conversion
                           _ADC_Read
                       _LCD_I2C_Init
                  _LCD_I2C_WriteText
                _MCP4725_WriteComand
                        _Master_Mode
 ---------------------------------------------------------------------------------
 (1) _Master_Mode                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP4725_WriteComand                                  7     5      2     477
                                              4 COMRAM     7     5      2
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_WriteText                                    6     3      3    2693
                                             10 COMRAM     6     3      3
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_Init                                         1     1      0    3581
                                             10 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                    _LCD_I2C_Databus
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_I2C_nibble                                       2     1      1    2097
                                              8 COMRAM     2     1      1
                    _LCD_I2C_Databus
 ---------------------------------------------------------------------------------
 (3) _LCD_I2C_Databus                                      3     2      1    1173
                                              5 COMRAM     3     2      1
                      _PCF8574_Write
 ---------------------------------------------------------------------------------
 (4) _PCF8574_Write                                        1     1      0     333
                                              4 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Data                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ADDRESS_SLAVE                                    4     3      1     296
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Conversion                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Conversion
   _ADC_Read
   _LCD_I2C_Init
     _I2C_ADDRESS_SLAVE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
     _LCD_I2C_Databus
       _PCF8574_Write
         _I2C_ADDRESS_SLAVE
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Data
     _LCD_I2C_nibble
       _LCD_I2C_Databus
   _LCD_I2C_WriteText
     _LCD_I2C_nibble
   _MCP4725_WriteComand
     _I2C_ADDRESS_SLAVE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
   _Master_Mode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      3D       1       64.2%
BITBIGSFRhh         36      0       0      20        0.0%
BITBIGSFRl          33      0       0      23        0.0%
BITBIGSFRhlhl       21      0       0      21        0.0%
BITBIGSFRhll         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      24        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 05 20:43:33 2023

             ??_LCD_I2C_Init 0031                  _SSPSTATbits 000FC7                           l51 0CD4  
                         l60 0C18                           l54 0CE2                           l63 0C80  
                         l48 0CA8                           l57 0C0A                           l81 0CD0  
                         l66 0C8E                           l92 0BA0                           l78 0CC2  
                         u10 0CE2                           u11 0CDE                           u30 0C8E  
                         u31 0C8A                           u40 0CD0                           u41 0CCC  
          ??_LCD_I2C_Databus 002D                          l105 0C56                          l121 0C72  
                        l124 093C                          l118 0AD0                          l160 0BEC  
                        l137 0A16                          l154 0C38                          l157 0BBE  
                        l850 0C76                          l906 0C90                          l836 0CD2  
                        l852 0C7A                          l908 0CA0                          l854 0C7C  
                        l856 0C7E                          l858 0CC0                          l956 0C1A  
                        u200 0A64                          u201 0A60                          u210 0A82  
                        u211 0A7E                          u220 0AA8                          u221 0AA4  
                        u230 0A16                          u231 0A12                          u240 0BCC  
                        u241 0BC8                          u170 0C18                          u171 0C14  
                        u307 087C                          u180 0A28                          u181 0A24  
                        u317 0896                          u190 0A46                          u407 0BD2  
                        u191 0A42                          u327 08B0                          u255 0B72  
                        u337 08CA                          u347 08E4                          u267 0B0C  
                        u357 08FE                          u277 0B3E                          u367 0918  
                        u287 084A                          u377 0932                          u297 0862  
                        u387 0A94                          u397 0AC2                          wreg 000FE8  
           ??_LCD_I2C_nibble 0030                         l1100 0AC0                         l1102 0AC8  
                       l1110 083A                         l1104 0C5A                         l1120 086C  
                       l1112 0840                         l1200 0B56                         l1050 0BF0  
                       l1130 08AA                         l1122 0876                         l1114 0844  
                       l1106 082C                         l1210 0B96                         l1202 0B60  
                       l1052 0C00                         l1060 0C3C                         l1140 08EE  
                       l1132 08BA                         l1124 0886                         l1116 0852  
                       l1108 0830                         l1212 0B9C                         l1204 0B66  
                       l1220 0ADE                         l1054 0C04                         l1062 0C40  
                       l1070 0A32                         l1150 092C                         l1142 08F8  
                       l1134 08C4                         l1126 0890                         l1118 085C  
                       l1206 0B82                         l1230 0B34                         l1222 0AF0  
                       l1214 0AD2                         l1056 0C06                         l1048 0BF0  
                       l1064 0C4A                         l1080 0A64                         l1072 0A38  
                       l1144 0908                         l1136 08D4                         l1128 08A0  
                       l1160 095E                         l1152 0940                         l1208 0B90  
                       l1224 0B02                         l1216 0AD6                         l1058 0C08  
                       l1090 0A92                         l1082 0A6E                         l1074 0A46  
                       l1066 0A1A                         l1146 0912                         l1138 08DE  
                       l1170 0994                         l1162 096C                         l1154 0944  
                       l1226 0B1A                         l1218 0ADA                         l1092 0A98  
                       l1084 0A74                         l1076 0A50                         l1068 0A28  
                       l1148 0922                         l1180 09F6                         l1236 09BC  
                       l1172 099A                         l1164 0972                         l1156 094A  
                       l1228 0B28                         l1190 0BBC                         l1094 0AA8  
                       l1086 0A82                         l1078 0A56                         l1166 0980  
                       l1158 0958                         l1182 09FA                         l1192 0BCC  
                       l1096 0AB2                         l1088 0A8C                         l1168 0986  
                       l1176 09A8                         l1194 0BDA                         l1098 0AB8  
                       l1178 09E2                         l1188 0BA4                         l1198 0B52  
                       STR_1 0816                         STR_2 0801                         _main 0AD2  
           __end_of_I2C_Stop 0CD2             __end_of_ADC_Read 0BEE                         start 0000  
      I2C_ADDRESS_SLAVE@data 002A        I2C_ADDRESS_SLAVE@modo 0027                 ___param_bank 000000  
                      ?_main 0037                ??_Master_Mode 0027         LCD_I2C_WriteText@col 0031  
       LCD_I2C_WriteText@row 0036            __end_of_I2C_Start 0CE4                        tablat 000FF5  
                      status 000FD8              __initialization 0CAA                 __end_of_main 0B52  
                     ??_main 003C                __activetblptr 000002            _LCD_I2C_WriteText 093E  
         ?_LCD_I2C_WriteText 0031          __end_of_Master_Mode 0CAA                       _ADCON0 000FC2  
       __end_of_LCD_I2C_Init 093E                       _ADRESH 000FC4                       _ADRESL 000FC3  
        ??_LCD_I2C_WriteText 0034                       _SSPADD 000FC8                       _SSPBUF 000FC9  
                     clear_0 0CB0    __end_of_LCD_I2C_WriteText 0A18            _I2C_ADDRESS_SLAVE 0BEE  
                     isa$std 000001           ?_I2C_ADDRESS_SLAVE 0027                    ?_I2C_Stop 0027  
                  ?_ADC_Read 0027                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8        __end_of_PCF8574_Write 0C58  
        ??_I2C_ADDRESS_SLAVE 0028                   __accesstop 0060      __end_of__initialization 0CB6  
__end_of_MCP4725_WriteComand 0BA2                ___rparam_used 000001              _LCD_I2C_Databus 0A18  
             __pcstackCOMRAM 0027    __end_of_I2C_ADDRESS_SLAVE 0C1A                  _Master_Mode 0C90  
                 ??_I2C_Stop 0027                   ??_ADC_Read 0029                   _bufferVolt 0011  
                    _SSPCON2 000FC5      __end_of_LCD_I2C_Databus 0AD2                    _I2C_Start 0CD2  
            _ValorConvertido 0025                      __Hparam 0000                      __Lparam 0000  
               _LCD_I2C_Init 082C                 __psmallconst 0800                      __pcinit 0CAA  
                    __ramtop 0800                      __ptext0 0AD2                      __ptext1 0C90  
                    __ptext2 0B52                      __ptext3 093E                      __ptext4 082C  
                    __ptext5 0C58                      __ptext6 0A18                      __ptext7 0C3A  
                    __ptext8 0C74                      __ptext9 0CC0                      _voltaje 0021  
       end_of_initialization 0CB6      MCP4725_WriteComand@data 002B      MCP4725_WriteComand@high 0030  
              __Lmediumconst 0000                   ?_I2C_Start 0027                      postinc0 000FEE  
   I2C_ADDRESS_SLAVE@address 0029                    _TRISBbits 000F93             ?_LCD_I2C_Databus 002C  
             _ADC_Conversion 0C1A           LCD_I2C_nibble@ctrl 0030               _I2C_Write_Data 0C74  
               ?_Master_Mode 0027          start_initialization 0CAA       __end_of_ADC_Conversion 0C3A  
                ??_I2C_Start 0027       __end_of_I2C_Write_Data 0C90                  __pbssCOMRAM 0001  
            ?_ADC_Conversion 0027          LCD_I2C_Databus@data 002E          LCD_I2C_Databus@ctrl 002D  
             _LCD_I2C_nibble 0C58              ?_I2C_Write_Data 0027                    _bufferDac 0001  
                __smallconst 0800                     _I2C_Stop 0CC0                     _ADC_Read 0BA2  
                ADC_Read@CHx 002B                _PCF8574_Write 0C3A       __end_of_LCD_I2C_nibble 0C74  
    LCD_I2C_WriteText@string 0032       MCP4725_WriteComand@low 0031                     _PIR1bits 000F9E  
                 _ADCON0bits 000FC2                   _ADCON1bits 000FC1                   _ADCON2bits 000FC0  
          LCD_I2C_nibble@cmd 002F               ?_PCF8574_Write 0027              ?_LCD_I2C_nibble 002F  
                   __Hrparam 0000                     __Lrparam 0000           LCD_I2C_Databus@cmd 002C  
                   __ptext10 0CD2                     __ptext11 0BEE                     __ptext12 0BA2  
                   __ptext13 0C1A          _MCP4725_WriteComand 0B52                     isa$xinst 000000  
       ?_MCP4725_WriteComand 002B                     main@argc 0037                     main@argv 0039  
            ??_PCF8574_Write 002B             ??_ADC_Conversion 0027             ??_I2C_Write_Data 0027  
      ??_MCP4725_WriteComand 002D                ?_LCD_I2C_Init 0027            PCF8574_Write@byte 002B  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5           I2C_Write_Data@data 0027  
