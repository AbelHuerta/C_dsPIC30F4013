

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 22 00:13:39 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	nvCOMRAM
    56  00000C                     __pnvCOMRAM:
    57                           	callstack 0
    58  00000C                     _i:
    59                           	callstack 0
    60  00000C                     	ds	2
    61  0000                     _SSPCON2bits	set	4037
    62  0000                     _TRISBbits	set	3987
    63  0000                     _ADCON1	set	4033
    64  0000                     _SSPCON2	set	4037
    65  0000                     _SSPCON1bits	set	4038
    66  0000                     _SSPSTATbits	set	4039
    67  0000                     _PIR1bits	set	3998
    68  0000                     _SSPBUF	set	4041
    69  0000                     _SSPADD	set	4040
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  007F12                     __pcinit:
    75                           	callstack 0
    76  007F12                     start_initialization:
    77                           	callstack 0
    78  007F12                     __initialization:
    79                           	callstack 0
    80  007F12                     end_of_initialization:
    81                           	callstack 0
    82  007F12                     __end_of__initialization:
    83                           	callstack 0
    84  007F12  0100               	movlb	0
    85  007F14  EFCF  F03F         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMRAM
    88  000001                     __pcstackCOMRAM:
    89                           	callstack 0
    90  000001                     I2C_ADDRESS_SLAVE@modo:
    91                           	callstack 0
    92  000001                     I2C_Write_Data@data:
    93                           	callstack 0
    94                           
    95                           ; 1 bytes @ 0x0
    96  000001                     	ds	1
    97  000002                     ??_I2C_ADDRESS_SLAVE:
    98                           
    99                           ; 1 bytes @ 0x1
   100  000002                     	ds	1
   101  000003                     I2C_ADDRESS_SLAVE@address:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x2
   105  000003                     	ds	1
   106  000004                     I2C_ADDRESS_SLAVE@data:
   107                           	callstack 0
   108                           
   109                           ; 1 bytes @ 0x3
   110  000004                     	ds	1
   111  000005                     
   112                           ; 2 bytes @ 0x4
   113  000005                     	ds	2
   114  000007                     
   115                           ; 3 bytes @ 0x6
   116  000007                     	ds	3
   117  00000A                     ??_main:
   118                           
   119                           ; 1 bytes @ 0x9
   120  00000A                     	ds	2
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 21 in file "Main_I2C.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;  argc            2    4[COMRAM] int 
   130 ;;  argv            3    6[COMRAM] PTR PTR unsigned char 
   131 ;; Auto vars:     Size  Location     Type
   132 ;;		None
   133 ;; Return value:  Size  Location     Type
   134 ;;                  2    4[COMRAM] int 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   142 ;;      Params:         5       0       0       0       0       0       0       0       0
   143 ;;      Locals:         0       0       0       0       0       0       0       0       0
   144 ;;      Temps:          2       0       0       0       0       0       0       0       0
   145 ;;      Totals:         7       0       0       0       0       0       0       0       0
   146 ;;Total ram usage:        7 bytes
   147 ;; Hardware stack levels required when called: 1
   148 ;; This function calls:
   149 ;;		_I2C_ADDRESS_SLAVE
   150 ;;		_I2C_Start
   151 ;;		_I2C_Stop
   152 ;;		_I2C_Write_Data
   153 ;;		_Master_Mode
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  007F9E                     __ptext0:
   161                           	callstack 0
   162  007F9E                     _main:
   163                           	callstack 30
   164  007F9E                     
   165                           ;Main_I2C.c: 22:     ADCON1 = 0x0F;
   166  007F9E  0E0F               	movlw	15
   167  007FA0  6EC1               	movwf	193,c	;volatile
   168  007FA2                     
   169                           ;Main_I2C.c: 23:     Master_Mode();
   170  007FA2  EC9E  F03F         	call	_Master_Mode	;wreg free
   171  007FA6                     l812:
   172                           
   173                           ;Main_I2C.c: 32:         for(i=0;i<=255;i++){
   174  007FA6  0E00               	movlw	0
   175  007FA8  6E0D               	movwf	(_i+1)^0,c
   176  007FAA  0E00               	movlw	0
   177  007FAC  6E0C               	movwf	_i^0,c
   178  007FAE                     l818:
   179                           
   180                           ;Main_I2C.c: 33:             I2C_Start();
   181  007FAE  EC8C  F03F         	call	_I2C_Start	;wreg free
   182  007FB2                     
   183                           ;Main_I2C.c: 34:             I2C_ADDRESS_SLAVE(0x40,0x00);
   184  007FB2  0E00               	movlw	0
   185  007FB4  6E01               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
   186  007FB6  0E40               	movlw	64
   187  007FB8  ECB9  F03F         	call	_I2C_ADDRESS_SLAVE
   188  007FBC                     
   189                           ;Main_I2C.c: 35:             I2C_Write_Data(i);
   190  007FBC  500C               	movf	_i^0,w,c
   191  007FBE  ECAB  F03F         	call	_I2C_Write_Data
   192  007FC2                     
   193                           ;Main_I2C.c: 36:             I2C_Stop();
   194  007FC2  EC95  F03F         	call	_I2C_Stop	;wreg free
   195  007FC6                     
   196                           ;Main_I2C.c: 37:             _delay((unsigned long)((500)*(20000000UL/4000.0)));
   197  007FC6  0E0D               	movlw	13
   198  007FC8  6E0B               	movwf	(??_main+1)^0,c
   199  007FCA  0EAF               	movlw	175
   200  007FCC  6E0A               	movwf	??_main^0,c
   201  007FCE  0EB6               	movlw	182
   202  007FD0                     u87:
   203  007FD0  2EE8               	decfsz	wreg,f,c
   204  007FD2  D7FE               	bra	u87
   205  007FD4  2E0A               	decfsz	??_main^0,f,c
   206  007FD6  D7FC               	bra	u87
   207  007FD8  2E0B               	decfsz	(??_main+1)^0,f,c
   208  007FDA  D7FA               	bra	u87
   209  007FDC  D000               	nop2	
   210  007FDE                     
   211                           ;Main_I2C.c: 38:         }
   212  007FDE  4A0C               	infsnz	_i^0,f,c
   213  007FE0  2A0D               	incf	(_i+1)^0,f,c
   214  007FE2  BE0D               	btfsc	(_i+1)^0,7,c
   215  007FE4  EFFA  F03F         	goto	u71
   216  007FE8  040D               	decf	(_i+1)^0,w,c
   217  007FEA  A0D8               	btfss	status,0,c
   218  007FEC  EFFA  F03F         	goto	u71
   219  007FF0  EFFC  F03F         	goto	u70
   220  007FF4                     u71:
   221  007FF4  EFD7  F03F         	goto	l818
   222  007FF8                     u70:
   223  007FF8  EFD3  F03F         	goto	l812
   224  007FFC  EF00  F000         	goto	start
   225  008000                     __end_of_main:
   226                           	callstack 0
   227                           
   228 ;; *************** function _Master_Mode *****************
   229 ;; Defined at:
   230 ;;		line 12 in file "I2C.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   244 ;;      Params:         0       0       0       0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels used: 1
   250 ;; This function calls:
   251 ;;		Nothing
   252 ;; This function is called by:
   253 ;;		_main
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text1
   258  007F3C                     __ptext1:
   259                           	callstack 0
   260  007F3C                     _Master_Mode:
   261                           	callstack 30
   262  007F3C                     
   263                           ;I2C.c: 14:     TRISBbits.RB0 = 1;
   264  007F3C  8093               	bsf	147,0,c	;volatile
   265                           
   266                           ;I2C.c: 15:     TRISBbits.RB1 = 1;
   267  007F3E  8293               	bsf	147,1,c	;volatile
   268                           
   269                           ;I2C.c: 17:     SSPSTATbits.SMP = 1;
   270  007F40  8EC7               	bsf	199,7,c	;volatile
   271                           
   272                           ;I2C.c: 19:     SSPCON1bits.SSPEN = 1;
   273  007F42  8AC6               	bsf	198,5,c	;volatile
   274                           
   275                           ;I2C.c: 21:     SSPCON1bits.SSPM3 = 1;
   276  007F44  86C6               	bsf	198,3,c	;volatile
   277                           
   278                           ;I2C.c: 22:     SSPCON1bits.SSPM2 = 0;
   279  007F46  94C6               	bcf	198,2,c	;volatile
   280                           
   281                           ;I2C.c: 23:     SSPCON1bits.SSPM1 = 0;
   282  007F48  92C6               	bcf	198,1,c	;volatile
   283                           
   284                           ;I2C.c: 24:     SSPCON1bits.SSPM0 = 0;
   285  007F4A  90C6               	bcf	198,0,c	;volatile
   286  007F4C                     
   287                           ;I2C.c: 35:     SSPADD = (uint8_t)(((48000000UL/4)/100000UL) - 1);
   288  007F4C  0E77               	movlw	119
   289  007F4E  6EC8               	movwf	200,c	;volatile
   290                           
   291                           ;I2C.c: 36:     SSPCON2 = 0x00;
   292  007F50  0E00               	movlw	0
   293  007F52  6EC5               	movwf	197,c	;volatile
   294  007F54  0012               	return		;funcret
   295  007F56                     __end_of_Master_Mode:
   296                           	callstack 0
   297                           
   298 ;; *************** function _I2C_Write_Data *****************
   299 ;; Defined at:
   300 ;;		line 65 in file "I2C.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;  data            1    wreg     unsigned char 
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  data            1    0[COMRAM] unsigned char 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   314 ;;      Params:         0       0       0       0       0       0       0       0       0
   315 ;;      Locals:         1       0       0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0
   317 ;;      Totals:         1       0       0       0       0       0       0       0       0
   318 ;;Total ram usage:        1 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328  007F56                     __ptext2:
   329                           	callstack 0
   330  007F56                     _I2C_Write_Data:
   331                           	callstack 30
   332                           
   333                           ;incstack = 0
   334                           ;I2C_Write_Data@data stored from wreg
   335  007F56  6E01               	movwf	I2C_Write_Data@data^0,c
   336  007F58                     
   337                           ;I2C.c: 67:     SSPBUF = data;
   338  007F58  C001  FFC9         	movff	I2C_Write_Data@data,4041	;volatile
   339  007F5C                     
   340                           ;I2C.c: 69:     SSPCON2bits.ACKDT = 0;
   341  007F5C  9AC5               	bcf	197,5,c	;volatile
   342  007F5E                     
   343                           ;I2C.c: 71:     SSPCON2bits.ACKEN = 1;
   344  007F5E  88C5               	bsf	197,4,c	;volatile
   345  007F60                     
   346                           ;I2C.c: 73:     PIR1bits.SSPIF = 0;
   347  007F60  969E               	bcf	158,3,c	;volatile
   348  007F62                     l59:
   349  007F62  A69E               	btfss	158,3,c	;volatile
   350  007F64  EFB6  F03F         	goto	u31
   351  007F68  EFB8  F03F         	goto	u30
   352  007F6C                     u31:
   353  007F6C  EFB1  F03F         	goto	l59
   354  007F70                     u30:
   355  007F70  0012               	return		;funcret
   356  007F72                     __end_of_I2C_Write_Data:
   357                           	callstack 0
   358                           
   359 ;; *************** function _I2C_Stop *****************
   360 ;; Defined at:
   361 ;;		line 78 in file "I2C.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		None
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   375 ;;      Params:         0       0       0       0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text3
   389  007F2A                     __ptext3:
   390                           	callstack 0
   391  007F2A                     _I2C_Stop:
   392                           	callstack 30
   393  007F2A                     
   394                           ;I2C.c: 82:     SSPCON2bits.PEN = 1;
   395  007F2A  84C5               	bsf	197,2,c	;volatile
   396  007F2C                     l65:
   397  007F2C  B4C5               	btfsc	197,2,c	;volatile
   398  007F2E  EF9B  F03F         	goto	u41
   399  007F32  EF9D  F03F         	goto	u40
   400  007F36                     u41:
   401  007F36  EF96  F03F         	goto	l65
   402  007F3A                     u40:
   403  007F3A  0012               	return		;funcret
   404  007F3C                     __end_of_I2C_Stop:
   405                           	callstack 0
   406                           
   407 ;; *************** function _I2C_Start *****************
   408 ;; Defined at:
   409 ;;		line 39 in file "I2C.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		None
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   423 ;;      Params:         0       0       0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text4
   437  007F18                     __ptext4:
   438                           	callstack 0
   439  007F18                     _I2C_Start:
   440                           	callstack 30
   441  007F18                     
   442                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
   443  007F18  80C5               	bsf	197,0,c	;volatile
   444  007F1A                     l47:
   445  007F1A  B0C5               	btfsc	197,0,c	;volatile
   446  007F1C  EF92  F03F         	goto	u11
   447  007F20  EF94  F03F         	goto	u10
   448  007F24                     u11:
   449  007F24  EF8D  F03F         	goto	l47
   450  007F28                     u10:
   451  007F28  0012               	return		;funcret
   452  007F2A                     __end_of_I2C_Start:
   453                           	callstack 0
   454                           
   455 ;; *************** function _I2C_ADDRESS_SLAVE *****************
   456 ;; Defined at:
   457 ;;		line 48 in file "I2C.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  address         1    wreg     unsigned char 
   460 ;;  modo            1    0[COMRAM] unsigned char 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  address         1    2[COMRAM] unsigned char 
   463 ;;  data            1    3[COMRAM] unsigned char 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   473 ;;      Params:         1       0       0       0       0       0       0       0       0
   474 ;;      Locals:         2       0       0       0       0       0       0       0       0
   475 ;;      Temps:          1       0       0       0       0       0       0       0       0
   476 ;;      Totals:         4       0       0       0       0       0       0       0       0
   477 ;;Total ram usage:        4 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text5
   487  007F72                     __ptext5:
   488                           	callstack 0
   489  007F72                     _I2C_ADDRESS_SLAVE:
   490                           	callstack 30
   491                           
   492                           ;incstack = 0
   493                           ;I2C_ADDRESS_SLAVE@address stored from wreg
   494  007F72  6E03               	movwf	I2C_ADDRESS_SLAVE@address^0,c
   495  007F74                     
   496                           ;I2C.c: 51:     data = ((address & 0xFE)) | (modo & 0x01) ;
   497  007F74  C001  F002         	movff	I2C_ADDRESS_SLAVE@modo,??_I2C_ADDRESS_SLAVE
   498  007F78  0E01               	movlw	1
   499  007F7A  1602               	andwf	??_I2C_ADDRESS_SLAVE^0,f,c
   500  007F7C  5003               	movf	I2C_ADDRESS_SLAVE@address^0,w,c
   501  007F7E  0BFE               	andlw	254
   502  007F80  1002               	iorwf	??_I2C_ADDRESS_SLAVE^0,w,c
   503  007F82  6E04               	movwf	I2C_ADDRESS_SLAVE@data^0,c
   504  007F84                     
   505                           ;I2C.c: 52:     SSPBUF = data;
   506  007F84  C004  FFC9         	movff	I2C_ADDRESS_SLAVE@data,4041	;volatile
   507  007F88                     
   508                           ;I2C.c: 56:     SSPCON2bits.ACKDT = 0;
   509  007F88  9AC5               	bcf	197,5,c	;volatile
   510  007F8A                     
   511                           ;I2C.c: 58:     SSPCON2bits.ACKEN = 1;
   512  007F8A  88C5               	bsf	197,4,c	;volatile
   513  007F8C                     
   514                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
   515  007F8C  969E               	bcf	158,3,c	;volatile
   516  007F8E                     l53:
   517  007F8E  A69E               	btfss	158,3,c	;volatile
   518  007F90  EFCC  F03F         	goto	u61
   519  007F94  EFCE  F03F         	goto	u60
   520  007F98                     u61:
   521  007F98  EFC7  F03F         	goto	l53
   522  007F9C                     u60:
   523  007F9C  0012               	return		;funcret
   524  007F9E                     __end_of_I2C_ADDRESS_SLAVE:
   525                           	callstack 0
   526  0000                     
   527                           	psect	rparam
   528  0000                     
   529                           	psect	idloc
   530                           
   531                           ;Config register IDLOC0 @ 0x200000
   532                           ;	unspecified, using default values
   533  200000                     	org	2097152
   534  200000  FF                 	db	255
   535                           
   536                           ;Config register IDLOC1 @ 0x200001
   537                           ;	unspecified, using default values
   538  200001                     	org	2097153
   539  200001  FF                 	db	255
   540                           
   541                           ;Config register IDLOC2 @ 0x200002
   542                           ;	unspecified, using default values
   543  200002                     	org	2097154
   544  200002  FF                 	db	255
   545                           
   546                           ;Config register IDLOC3 @ 0x200003
   547                           ;	unspecified, using default values
   548  200003                     	org	2097155
   549  200003  FF                 	db	255
   550                           
   551                           ;Config register IDLOC4 @ 0x200004
   552                           ;	unspecified, using default values
   553  200004                     	org	2097156
   554  200004  FF                 	db	255
   555                           
   556                           ;Config register IDLOC5 @ 0x200005
   557                           ;	unspecified, using default values
   558  200005                     	org	2097157
   559  200005  FF                 	db	255
   560                           
   561                           ;Config register IDLOC6 @ 0x200006
   562                           ;	unspecified, using default values
   563  200006                     	org	2097158
   564  200006  FF                 	db	255
   565                           
   566                           ;Config register IDLOC7 @ 0x200007
   567                           ;	unspecified, using default values
   568  200007                     	org	2097159
   569  200007  FF                 	db	255
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG1L @ 0x300000
   574                           ;	PLL Prescaler Selection bits
   575                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   576                           ;	System Clock Postscaler Selection bits
   577                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   578                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   579                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   580  300000                     	org	3145728
   581  300000  04                 	db	4
   582                           
   583                           ;Config register CONFIG1H @ 0x300001
   584                           ;	Oscillator Selection bits
   585                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   586                           ;	Fail-Safe Clock Monitor Enable bit
   587                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   588                           ;	Internal/External Oscillator Switchover bit
   589                           ;	IESO = OFF, Oscillator Switchover mode disabled
   590  300001                     	org	3145729
   591  300001  0E                 	db	14
   592                           
   593                           ;Config register CONFIG2L @ 0x300002
   594                           ;	Power-up Timer Enable bit
   595                           ;	PWRT = ON, PWRT enabled
   596                           ;	Brown-out Reset Enable bits
   597                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   598                           ;	Brown-out Reset Voltage bits
   599                           ;	BORV = 3, Minimum setting 2.05V
   600                           ;	USB Voltage Regulator Enable bit
   601                           ;	VREGEN = OFF, USB voltage regulator disabled
   602  300002                     	org	3145730
   603  300002  18                 	db	24
   604                           
   605                           ;Config register CONFIG2H @ 0x300003
   606                           ;	Watchdog Timer Enable bit
   607                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   608                           ;	Watchdog Timer Postscale Select bits
   609                           ;	WDTPS = 32768, 1:32768
   610  300003                     	org	3145731
   611  300003  1E                 	db	30
   612                           
   613                           ; Padding undefined space
   614  300004                     	org	3145732
   615  300004  FF                 	db	255
   616                           
   617                           ;Config register CONFIG3H @ 0x300005
   618                           ;	CCP2 MUX bit
   619                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   620                           ;	PORTB A/D Enable bit
   621                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   622                           ;	Low-Power Timer 1 Oscillator Enable bit
   623                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   624                           ;	MCLR Pin Enable bit
   625                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   626  300005                     	org	3145733
   627  300005  83                 	db	131
   628                           
   629                           ;Config register CONFIG4L @ 0x300006
   630                           ;	Stack Full/Underflow Reset Enable bit
   631                           ;	STVREN = ON, Stack full/underflow will cause Reset
   632                           ;	Single-Supply ICSP Enable bit
   633                           ;	LVP = OFF, Single-Supply ICSP disabled
   634                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   635                           ;	ICPRT = OFF, ICPORT disabled
   636                           ;	Extended Instruction Set Enable bit
   637                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   638                           ;	Background Debugger Enable bit
   639                           ;	DEBUG = 0x1, unprogrammed default
   640  300006                     	org	3145734
   641  300006  81                 	db	129
   642                           
   643                           ; Padding undefined space
   644  300007                     	org	3145735
   645  300007  FF                 	db	255
   646                           
   647                           ;Config register CONFIG5L @ 0x300008
   648                           ;	Code Protection bit
   649                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   650                           ;	Code Protection bit
   651                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   652                           ;	Code Protection bit
   653                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   654                           ;	Code Protection bit
   655                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   656  300008                     	org	3145736
   657  300008  0F                 	db	15
   658                           
   659                           ;Config register CONFIG5H @ 0x300009
   660                           ;	Boot Block Code Protection bit
   661                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   662                           ;	Data EEPROM Code Protection bit
   663                           ;	CPD = OFF, Data EEPROM is not code-protected
   664  300009                     	org	3145737
   665  300009  C0                 	db	192
   666                           
   667                           ;Config register CONFIG6L @ 0x30000A
   668                           ;	Write Protection bit
   669                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   670                           ;	Write Protection bit
   671                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   672                           ;	Write Protection bit
   673                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   674                           ;	Write Protection bit
   675                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   676  30000A                     	org	3145738
   677  30000A  0F                 	db	15
   678                           
   679                           ;Config register CONFIG6H @ 0x30000B
   680                           ;	Configuration Register Write Protection bit
   681                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   682                           ;	Boot Block Write Protection bit
   683                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   684                           ;	Data EEPROM Write Protection bit
   685                           ;	WRTD = OFF, Data EEPROM is not write-protected
   686  30000B                     	org	3145739
   687  30000B  E0                 	db	224
   688                           
   689                           ;Config register CONFIG7L @ 0x30000C
   690                           ;	Table Read Protection bit
   691                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   692                           ;	Table Read Protection bit
   693                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   694                           ;	Table Read Protection bit
   695                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   696                           ;	Table Read Protection bit
   697                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   698  30000C                     	org	3145740
   699  30000C  0F                 	db	15
   700                           
   701                           ;Config register CONFIG7H @ 0x30000D
   702                           ;	Boot Block Table Read Protection bit
   703                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   704  30000D                     	org	3145741
   705  30000D  40                 	db	64
   706                           tosu	equ	0xFFF
   707                           tosh	equ	0xFFE
   708                           tosl	equ	0xFFD
   709                           stkptr	equ	0xFFC
   710                           pclatu	equ	0xFFB
   711                           pclath	equ	0xFFA
   712                           pcl	equ	0xFF9
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           indf0	equ	0xFEF
   720                           postinc0	equ	0xFEE
   721                           postdec0	equ	0xFED
   722                           preinc0	equ	0xFEC
   723                           plusw0	equ	0xFEB
   724                           fsr0h	equ	0xFEA
   725                           fsr0l	equ	0xFE9
   726                           wreg	equ	0xFE8
   727                           indf1	equ	0xFE7
   728                           postinc1	equ	0xFE6
   729                           postdec1	equ	0xFE5
   730                           preinc1	equ	0xFE4
   731                           plusw1	equ	0xFE3
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           bsr	equ	0xFE0
   735                           indf2	equ	0xFDF
   736                           postinc2	equ	0xFDE
   737                           postdec2	equ	0xFDD
   738                           preinc2	equ	0xFDC
   739                           plusw2	equ	0xFDB
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_ADDRESS_SLAVE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     159
                                              4 COMRAM     7     2      5
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                        _Master_Mode
 ---------------------------------------------------------------------------------
 (1) _Master_Mode                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Data                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ADDRESS_SLAVE                                    4     3      1     144
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ADDRESS_SLAVE
   _I2C_Start
   _I2C_Stop
   _I2C_Write_Data
   _Master_Mode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       D       1       13.7%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
DATA                 0      0       D       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         36      0       0      21        0.0%
BITBIGSFRhl          3      0       0      22        0.0%
BITBIGSFRlhh        22      0       0      23        0.0%
BITBIGSFRlhl         A      0       0      24        0.0%
BITBIGSFRll         33      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 22 00:13:39 2023

                        _i 000C                _SSPSTATbits 000FC7                         l50 7F28  
                       l44 7F54                         l53 7F8E                         l62 7F70  
                       l47 7F1A                         l56 7F9C                         l65 7F2C  
                       l59 7F62                         l68 7F3A                         u10 7F28  
                       u11 7F24                         u30 7F70                         u31 7F6C  
                       u40 7F3A                         u41 7F36                         u60 7F9C  
                       u61 7F98                         u70 7FF8                         u71 7FF4  
                       u87 7FD0                        l800 7F84                        l802 7F88  
                      l810 7FA2                        l804 7F8A                        l820 7FB2  
                      l812 7FA6                        l806 7F8C                        l830 7FE2  
                      l822 7FBC                        l744 7F3C                        l824 7FC2  
                      l808 7F9E                        l770 7F2A                        l762 7F58  
                      l746 7F4C                        l826 7FC6                        l818 7FAE  
                      l748 7F18                        l764 7F5C                        l828 7FDE  
                      l766 7F5E                        l768 7F60                        l796 7F74  
                      l798 7F74                        wreg 000FE8                       _main 7F9E  
         __end_of_I2C_Stop 7F3C                       start 0000      I2C_ADDRESS_SLAVE@data 0004  
    I2C_ADDRESS_SLAVE@modo 0001               ___param_bank 000000                      ?_main 0005  
            ??_Master_Mode 0001          __end_of_I2C_Start 7F2A                      status 000FD8  
          __initialization 7F12               __end_of_main 8000                     ??_main 000A  
            __activetblptr 000000        __end_of_Master_Mode 7F56                     _ADCON1 000FC1  
                   _SSPADD 000FC8                     _SSPBUF 000FC9          _I2C_ADDRESS_SLAVE 7F72  
                   isa$std 000001         ?_I2C_ADDRESS_SLAVE 0001                  ?_I2C_Stop 0001  
      ??_I2C_ADDRESS_SLAVE 0002                 __accesstop 0060    __end_of__initialization 7F12  
            ___rparam_used 000001             __pcstackCOMRAM 0001  __end_of_I2C_ADDRESS_SLAVE 7F9E  
              _Master_Mode 7F3C                 ??_I2C_Stop 0001                 __pnvCOMRAM 000C  
                  _SSPCON2 000FC5                  _I2C_Start 7F18                    __Hparam 0000  
                  __Lparam 0000                    __pcinit 7F12                    __ramtop 0800  
                  __ptext0 7F9E                    __ptext1 7F3C                    __ptext2 7F56  
                  __ptext3 7F2A                    __ptext4 7F18                    __ptext5 7F72  
     end_of_initialization 7F12                 ?_I2C_Start 0001   I2C_ADDRESS_SLAVE@address 0003  
                _TRISBbits 000F93             _I2C_Write_Data 7F56               ?_Master_Mode 0001  
      start_initialization 7F12                ??_I2C_Start 0001     __end_of_I2C_Write_Data 7F72  
          ?_I2C_Write_Data 0001                   _I2C_Stop 7F2A                   _PIR1bits 000F9E  
                 __Hrparam 0000                   __Lrparam 0000                   isa$xinst 000000  
                 main@argc 0005                   main@argv 0007           ??_I2C_Write_Data 0001  
              _SSPCON1bits 000FC6                _SSPCON2bits 000FC5         I2C_Write_Data@data 0001  
