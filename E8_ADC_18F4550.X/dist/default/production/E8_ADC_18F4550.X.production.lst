

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 28 17:37:21 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _SSPCON2	set	4037
    95  0000                     _SSPCON1bits	set	4038
    96  0000                     _SSPSTATbits	set	4039
    97  0000                     _ADRESL	set	4035
    98  0000                     _ADRESH	set	4036
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _ADCON0	set	4034
   101  0000                     _TRISBbits	set	3987
   102  0000                     _ADCON2bits	set	4032
   103  0000                     _ADCON1bits	set	4033
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _PIR1bits	set	3998
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPADD	set	4040
   108                           
   109                           	psect	smallconst
   110  000800                     __psmallconst:
   111                           	callstack 0
   112  000800  00                 	db	0
   113  000801                     STR_1:
   114  000801  4C                 	db	76	;'L'
   115  000802  45                 	db	69	;'E'
   116  000803  43                 	db	67	;'C'
   117  000804  54                 	db	84	;'T'
   118  000805  55                 	db	85	;'U'
   119  000806  52                 	db	82	;'R'
   120  000807  41                 	db	65	;'A'
   121  000808  20                 	db	32
   122  000809  41                 	db	65	;'A'
   123  00080A  44                 	db	68	;'D'
   124  00080B  43                 	db	67	;'C'
   125  00080C  00                 	db	0
   126  00080D                     STR_2:
   127  00080D  25                 	db	37
   128  00080E  2E                 	db	46
   129  00080F  30                 	db	48	;'0'
   130  000810  32                 	db	50	;'2'
   131  000811  66                 	db	102	;'f'
   132  000812  00                 	db	0
   133  000813                     STR_3:
   134  000813  49                 	db	73	;'I'
   135  000814  4E                 	db	78	;'N'
   136  000815  46                 	db	70	;'F'
   137  000816  00                 	db	0
   138  000817                     STR_7:
   139  000817  4E                 	db	78	;'N'
   140  000818  41                 	db	65	;'A'
   141  000819  4E                 	db	78	;'N'
   142  00081A  00                 	db	0
   143  00081B                     STR_4:
   144  00081B  69                 	db	105	;'i'
   145  00081C  6E                 	db	110	;'n'
   146  00081D  66                 	db	102	;'f'
   147  00081E  00                 	db	0
   148  00081F                     STR_8:
   149  00081F  6E                 	db	110	;'n'
   150  000820  61                 	db	97	;'a'
   151  000821  6E                 	db	110	;'n'
   152  000822  00                 	db	0
   153  000823                     STR_11:
   154  000823  6C                 	db	108	;'l'
   155  000824  66                 	db	102	;'f'
   156  000825  00                 	db	0
   157  000826  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  00390C                     __pcinit:
   163                           	callstack 0
   164  00390C                     start_initialization:
   165                           	callstack 0
   166  00390C                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Clear objects allocated to BANK1 (80 bytes)
   170  00390C  EE01  F000         	lfsr	0,__pbssBANK1
   171  003910  0E50               	movlw	80
   172  003912                     clear_0:
   173  003912  6AEE               	clrf	postinc0,c
   174  003914  06E8               	decf	wreg,f,c
   175  003916  E1FD               	bnz	clear_0
   176                           
   177                           ; Clear objects allocated to BANK0 (42 bytes)
   178  003918  EE00  F0C9         	lfsr	0,__pbssBANK0
   179  00391C  0E2A               	movlw	42
   180  00391E                     clear_1:
   181  00391E  6AEE               	clrf	postinc0,c
   182  003920  06E8               	decf	wreg,f,c
   183  003922  E1FD               	bnz	clear_1
   184  003924                     end_of_initialization:
   185                           	callstack 0
   186  003924                     __end_of__initialization:
   187                           	callstack 0
   188  003924  0E00               	movlw	low (__Lmediumconst shr (0+16))
   189  003926  6EF8               	movwf	tblptru,c
   190  003928  0100               	movlb	0
   191  00392A  EF92  F017         	goto	_main	;jump to C main() function
   192                           
   193                           	psect	bssBANK0
   194  0000C9                     __pbssBANK0:
   195                           	callstack 0
   196  0000C9                     floorf@F526:
   197                           	callstack 0
   198  0000C9                     	ds	4
   199  0000CD                     ___fpclassifyf@F465:
   200                           	callstack 0
   201  0000CD                     	ds	4
   202  0000D1                     _tension:
   203                           	callstack 0
   204  0000D1                     	ds	4
   205  0000D5                     _nout:
   206                           	callstack 0
   207  0000D5                     	ds	2
   208  0000D7                     _width:
   209                           	callstack 0
   210  0000D7                     	ds	2
   211  0000D9                     _prec:
   212                           	callstack 0
   213  0000D9                     	ds	2
   214  0000DB                     _flags:
   215                           	callstack 0
   216  0000DB                     	ds	2
   217  0000DD                     _data:
   218                           	callstack 0
   219  0000DD                     	ds	2
   220  0000DF                     _bufferTx:
   221                           	callstack 0
   222  0000DF                     	ds	20
   223                           
   224                           	psect	bssBANK1
   225  000100                     __pbssBANK1:
   226                           	callstack 0
   227  000100                     _dbuf:
   228                           	callstack 0
   229  000100                     	ds	80
   230                           
   231                           	psect	cstackBANK0
   232  000060                     __pcstackBANK0:
   233                           	callstack 0
   234  000060                     ??_efgtoa:
   235                           
   236                           ; 1 bytes @ 0x0
   237  000060                     	ds	5
   238  000065                     _efgtoa$1149:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x5
   242  000065                     	ds	2
   243  000067                     _efgtoa$1157:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x7
   247  000067                     	ds	2
   248  000069                     _efgtoa$1158:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x9
   252  000069                     	ds	2
   253  00006B                     efgtoa@t:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xB
   257  00006B                     	ds	2
   258  00006D                     efgtoa@pp:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xD
   262  00006D                     	ds	2
   263  00006F                     efgtoa@ne:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0xF
   267  00006F                     	ds	2
   268  000071                     efgtoa@m:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x11
   272  000071                     	ds	2
   273  000073                     efgtoa@ou:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0x13
   277  000073                     	ds	4
   278  000077                     efgtoa@d:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x17
   282  000077                     	ds	2
   283  000079                     efgtoa@sign:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x19
   287  000079                     	ds	2
   288  00007B                     efgtoa@p:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x1B
   292  00007B                     	ds	2
   293  00007D                     efgtoa@w:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x1D
   297  00007D                     	ds	2
   298  00007F                     efgtoa@nmode:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1F
   302  00007F                     	ds	1
   303  000080                     efgtoa@mode:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x20
   307  000080                     	ds	1
   308  000081                     efgtoa@h:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x21
   312  000081                     	ds	4
   313  000085                     efgtoa@l:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x25
   317  000085                     	ds	4
   318  000089                     efgtoa@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x29
   322  000089                     	ds	2
   323  00008B                     efgtoa@g:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x2B
   327  00008B                     	ds	4
   328  00008F                     efgtoa@e:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2F
   332  00008F                     	ds	2
   333  000091                     efgtoa@n:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x31
   337  000091                     	ds	2
   338  000093                     efgtoa@u:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x33
   342  000093                     	ds	4
   343  000097                     ?_vfpfcnvrt:
   344                           	callstack 0
   345  000097                     vfpfcnvrt@fp:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x37
   349  000097                     	ds	2
   350  000099                     vfpfcnvrt@fmt:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x39
   354  000099                     	ds	2
   355  00009B                     vfpfcnvrt@ap:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x3B
   359  00009B                     	ds	2
   360  00009D                     vfpfcnvrt@f:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x3D
   364  00009D                     	ds	4
   365  0000A1                     vfpfcnvrt@ct:
   366                           	callstack 0
   367                           
   368                           ; 3 bytes @ 0x41
   369  0000A1                     	ds	3
   370  0000A4                     vfpfcnvrt@c:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x44
   374  0000A4                     	ds	1
   375  0000A5                     ?_vfprintf:
   376                           	callstack 0
   377  0000A5                     vfprintf@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x45
   381  0000A5                     	ds	2
   382  0000A7                     vfprintf@fmt:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x47
   386  0000A7                     	ds	2
   387  0000A9                     vfprintf@ap:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x49
   391  0000A9                     	ds	2
   392  0000AB                     vfprintf@cfmt:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x4B
   396  0000AB                     	ds	2
   397  0000AD                     ?_sprintf:
   398                           	callstack 0
   399  0000AD                     sprintf@s:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x4D
   403  0000AD                     	ds	2
   404  0000AF                     sprintf@fmt:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x4F
   408  0000AF                     	ds	6
   409  0000B5                     sprintf@ap:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x55
   413  0000B5                     	ds	2
   414  0000B7                     sprintf@f:
   415                           	callstack 0
   416                           
   417                           ; 11 bytes @ 0x57
   418  0000B7                     	ds	11
   419  0000C2                     
   420                           ; 2 bytes @ 0x62
   421  0000C2                     	ds	2
   422  0000C4                     
   423                           ; 3 bytes @ 0x64
   424  0000C4                     	ds	3
   425  0000C7                     ??_main:
   426                           
   427                           ; 1 bytes @ 0x67
   428  0000C7                     	ds	2
   429                           
   430                           	psect	cstackCOMRAM
   431  000001                     __pcstackCOMRAM:
   432                           	callstack 0
   433  000001                     ?_ADC_Read:
   434                           	callstack 0
   435  000001                     ?_strlen:
   436                           	callstack 0
   437  000001                     ?___fpclassifyf:
   438                           	callstack 0
   439  000001                     ?_isupper:
   440                           	callstack 0
   441  000001                     ?_isdigit:
   442                           	callstack 0
   443  000001                     ?_strncmp:
   444                           	callstack 0
   445  000001                     ?_isspace:
   446                           	callstack 0
   447  000001                     ?___wmul:
   448                           	callstack 0
   449  000001                     ?___awdiv:
   450                           	callstack 0
   451  000001                     ?___awmod:
   452                           	callstack 0
   453  000001                     ?___fladd:
   454                           	callstack 0
   455  000001                     ?___flneg:
   456                           	callstack 0
   457  000001                     ?___fltol:
   458                           	callstack 0
   459  000001                     ?___xxtofl:
   460                           	callstack 0
   461  000001                     I2C_ADDRESS_SLAVE@modo:
   462                           	callstack 0
   463  000001                     I2C_Write_Data@data:
   464                           	callstack 0
   465  000001                     ___wmul@multiplier:
   466                           	callstack 0
   467  000001                     ___awdiv@dividend:
   468                           	callstack 0
   469  000001                     ___awmod@dividend:
   470                           	callstack 0
   471  000001                     isdigit@c:
   472                           	callstack 0
   473  000001                     isspace@c:
   474                           	callstack 0
   475  000001                     isupper@c:
   476                           	callstack 0
   477  000001                     fputc@c:
   478                           	callstack 0
   479  000001                     strcpy@dest:
   480                           	callstack 0
   481  000001                     strlen@s:
   482                           	callstack 0
   483  000001                     strncmp@_l:
   484                           	callstack 0
   485  000001                     ___fleq@ff1:
   486                           	callstack 0
   487  000001                     ___flneg@f1:
   488                           	callstack 0
   489  000001                     ___fltol@f1:
   490                           	callstack 0
   491  000001                     ___fladd@b:
   492                           	callstack 0
   493  000001                     ___xxtofl@val:
   494                           	callstack 0
   495  000001                     ___fpclassifyf@x:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x0
   499  000001                     	ds	1
   500  000002                     ??_I2C_ADDRESS_SLAVE:
   501                           
   502                           ; 1 bytes @ 0x1
   503  000002                     	ds	1
   504  000003                     ??_ADC_Read:
   505  000003                     ??_isupper:
   506  000003                     ??_isdigit:
   507  000003                     ??_isspace:
   508  000003                     I2C_ADDRESS_SLAVE@address:
   509                           	callstack 0
   510  000003                     ___wmul@multiplicand:
   511                           	callstack 0
   512  000003                     ___awdiv@divisor:
   513                           	callstack 0
   514  000003                     ___awmod@divisor:
   515                           	callstack 0
   516  000003                     fputc@fp:
   517                           	callstack 0
   518  000003                     strcpy@src:
   519                           	callstack 0
   520  000003                     strlen@a:
   521                           	callstack 0
   522  000003                     strncmp@_r:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526  000003                     	ds	1
   527  000004                     I2C_ADDRESS_SLAVE@data:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x3
   531  000004                     	ds	1
   532  000005                     ??_fputc:
   533  000005                     ??___fpclassifyf:
   534  000005                     ??_strcpy:
   535  000005                     ??___fltol:
   536  000005                     ??___xxtofl:
   537  000005                     ADC_Read@CHx:
   538                           	callstack 0
   539  000005                     PCF8574_Write@byte:
   540                           	callstack 0
   541  000005                     ___awdiv@counter:
   542                           	callstack 0
   543  000005                     ___awmod@counter:
   544                           	callstack 0
   545  000005                     ___wmul@product:
   546                           	callstack 0
   547  000005                     strncmp@n:
   548                           	callstack 0
   549  000005                     ___fleq@ff2:
   550                           	callstack 0
   551  000005                     ___fladd@a:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x4
   555  000005                     	ds	1
   556  000006                     LCD_I2C_Databus@cmd:
   557                           	callstack 0
   558  000006                     ___awdiv@sign:
   559                           	callstack 0
   560  000006                     ___awmod@sign:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x5
   564  000006                     	ds	1
   565  000007                     ??_strncmp:
   566  000007                     ?_tolower:
   567                           	callstack 0
   568  000007                     LCD_I2C_Databus@ctrl:
   569                           	callstack 0
   570  000007                     _isspace$1236:
   571                           	callstack 0
   572  000007                     ___awdiv@quotient:
   573                           	callstack 0
   574  000007                     strcpy@s:
   575                           	callstack 0
   576  000007                     tolower@c:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x6
   580  000007                     	ds	1
   581  000008                     ?_atoi:
   582                           	callstack 0
   583  000008                     LCD_I2C_Databus@data:
   584                           	callstack 0
   585  000008                     atoi@s:
   586                           	callstack 0
   587  000008                     strncmp@l:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x7
   591  000008                     	ds	1
   592  000009                     ??___fladd:
   593  000009                     ??_tolower:
   594  000009                     ??___fleq:
   595  000009                     LCD_I2C_nibble@cmd:
   596                           	callstack 0
   597  000009                     ___fltol@sign1:
   598                           	callstack 0
   599  000009                     ___xxtofl@sign:
   600                           	callstack 0
   601  000009                     ___fpclassifyf@e:
   602                           	callstack 0
   603  000009                     strcpy@d:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x8
   607  000009                     	ds	1
   608  00000A                     ??_atoi:
   609  00000A                     LCD_I2C_nibble@ctrl:
   610                           	callstack 0
   611  00000A                     ___fltol@exp1:
   612                           	callstack 0
   613  00000A                     ___xxtofl@exp:
   614                           	callstack 0
   615  00000A                     fputs@s:
   616                           	callstack 0
   617  00000A                     strncmp@r:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x9
   621  00000A                     	ds	1
   622  00000B                     ??_LCD_I2C_Init:
   623  00000B                     LCD_I2C_WriteText@col:
   624                           	callstack 0
   625  00000B                     ___xxtofl@arg:
   626                           	callstack 0
   627  00000B                     ___fpclassifyf@u:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0xA
   631  00000B                     	ds	1
   632  00000C                     LCD_I2C_WriteText@string:
   633                           	callstack 0
   634  00000C                     fputs@fp:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xB
   638  00000C                     	ds	1
   639  00000D                     ___fladd@signs:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0xC
   643  00000D                     	ds	1
   644  00000E                     ??_LCD_I2C_WriteText:
   645  00000E                     ___fladd@aexp:
   646                           	callstack 0
   647  00000E                     fputs@c:
   648                           	callstack 0
   649  00000E                     atoi@neg:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xD
   653  00000E                     	ds	1
   654  00000F                     ?___flmul:
   655                           	callstack 0
   656  00000F                     ___fladd@bexp:
   657                           	callstack 0
   658  00000F                     fputs@i:
   659                           	callstack 0
   660  00000F                     ___flmul@b:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0xE
   664  00000F                     	ds	1
   665  000010                     LCD_I2C_WriteText@row:
   666                           	callstack 0
   667  000010                     ___fladd@grs:
   668                           	callstack 0
   669  000010                     atoi@n:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0xF
   673  000010                     	ds	1
   674  000011                     ?_pad:
   675                           	callstack 0
   676  000011                     pad@fp:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x10
   680  000011                     	ds	2
   681  000013                     pad@buf:
   682                           	callstack 0
   683  000013                     ___flmul@a:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x12
   687  000013                     	ds	2
   688  000015                     pad@p:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x14
   692  000015                     	ds	2
   693  000017                     ??___flmul:
   694  000017                     ??_pad:
   695                           
   696                           ; 1 bytes @ 0x16
   697  000017                     	ds	1
   698  000018                     pad@i:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x17
   702  000018                     	ds	2
   703  00001A                     pad@w:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x19
   707  00001A                     	ds	1
   708  00001B                     ___flmul@sign:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x1A
   712  00001B                     	ds	1
   713  00001C                     ___flmul@grs:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x1B
   717  00001C                     	ds	4
   718  000020                     ___flmul@aexp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x1F
   722  000020                     	ds	1
   723  000021                     ___flmul@bexp:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x20
   727  000021                     	ds	1
   728  000022                     ___flmul@prod:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x21
   732  000022                     	ds	4
   733  000026                     ___flmul@temp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x25
   737  000026                     	ds	2
   738  000028                     ?___fldiv:
   739                           	callstack 0
   740  000028                     ?___flsub:
   741                           	callstack 0
   742  000028                     ___flge@ff1:
   743                           	callstack 0
   744  000028                     ___flsub@b:
   745                           	callstack 0
   746  000028                     ___fldiv@b:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x27
   750  000028                     	ds	4
   751  00002C                     ___flge@ff2:
   752                           	callstack 0
   753  00002C                     ___flsub@a:
   754                           	callstack 0
   755  00002C                     ___fldiv@a:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x2B
   759  00002C                     	ds	4
   760  000030                     ??___fldiv:
   761  000030                     ??___flge:
   762                           
   763                           ; 1 bytes @ 0x2F
   764  000030                     	ds	4
   765  000034                     ___fldiv@rem:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x33
   769  000034                     	ds	4
   770  000038                     ___fldiv@sign:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x37
   774  000038                     	ds	1
   775  000039                     ___fldiv@new_exp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x38
   779  000039                     	ds	2
   780  00003B                     ___fldiv@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x3A
   784  00003B                     	ds	4
   785  00003F                     ___fldiv@bexp:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x3E
   789  00003F                     	ds	1
   790  000040                     ___fldiv@aexp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x3F
   794  000040                     	ds	1
   795  000041                     ?_floorf:
   796                           	callstack 0
   797  000041                     floorf@x:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x40
   801  000041                     	ds	4
   802  000045                     ??_floorf:
   803                           
   804                           ; 1 bytes @ 0x44
   805  000045                     	ds	6
   806  00004B                     floorf@m:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x4A
   810  00004B                     	ds	4
   811  00004F                     floorf@e:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x4E
   815  00004F                     	ds	2
   816  000051                     floorf@u:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x50
   820  000051                     	ds	4
   821  000055                     ?_efgtoa:
   822                           	callstack 0
   823  000055                     efgtoa@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x54
   827  000055                     	ds	2
   828  000057                     efgtoa@f:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x56
   832  000057                     	ds	4
   833  00005B                     efgtoa@c:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x5A
   837  00005B                     	ds	1
   838  00005C                     ??_vfpfcnvrt:
   839                           
   840                           ; 1 bytes @ 0x5B
   841  00005C                     	ds	4
   842  000060                     
   843                           ; 1 bytes @ 0x5F
   844 ;;
   845 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   846 ;;
   847 ;; *************** function _main *****************
   848 ;; Defined at:
   849 ;;		line 30 in file "Main_ADC.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  argc            2   98[BANK0 ] int 
   852 ;;  argv            3  100[BANK0 ] PTR PTR unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2   98[BANK0 ] int 
   857 ;; Registers used:
   858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         0       5       0       0       0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0
   866 ;;      Temps:          0       2       0       0       0       0       0       0       0
   867 ;;      Totals:         0       7       0       0       0       0       0       0       0
   868 ;;Total ram usage:        7 bytes
   869 ;; Hardware stack levels required when called: 8
   870 ;; This function calls:
   871 ;;		_ADC_Conversion
   872 ;;		_ADC_Read
   873 ;;		_LCD_I2C_Init
   874 ;;		_LCD_I2C_WriteText
   875 ;;		_Master_Mode
   876 ;;		___fldiv
   877 ;;		___flmul
   878 ;;		___xxtofl
   879 ;;		_sprintf
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text0
   886  002F24                     __ptext0:
   887                           	callstack 0
   888  002F24                     _main:
   889                           	callstack 23
   890  002F24                     
   891                           ;Main_ADC.c: 33:     Master_Mode();
   892  002F24  ECD2  F01C         	call	_Master_Mode	;wreg free
   893  002F28                     
   894                           ;Main_ADC.c: 34:     LCD_I2C_Init();
   895  002F28  EC04  F015         	call	_LCD_I2C_Init	;wreg free
   896  002F2C                     
   897                           ;Main_ADC.c: 35:     ADC_Conversion();
   898  002F2C  EC97  F01C         	call	_ADC_Conversion	;wreg free
   899  002F30                     
   900                           ;Main_ADC.c: 36:     LCD_I2C_WriteText(0,0,"LECTURA ADC");
   901  002F30  0E00               	movlw	0
   902  002F32  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   903  002F34  0E01               	movlw	low STR_1
   904  002F36  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   905  002F38  0E08               	movlw	high STR_1
   906  002F3A  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   907  002F3C  0E00               	movlw	0
   908  002F3E  EC92  F016         	call	_LCD_I2C_WriteText
   909  002F42                     l4111:
   910                           
   911                           ;Main_ADC.c: 38:         data = ADC_Read(0);
   912  002F42  0E00               	movlw	0
   913  002F44  EC08  F01B         	call	_ADC_Read
   914  002F48  C001  F0DD         	movff	?_ADC_Read,_data
   915  002F4C  C002  F0DE         	movff	?_ADC_Read+1,_data+1
   916  002F50                     
   917                           ;Main_ADC.c: 39:         tension = (data * 5.0)/1023.0;
   918  002F50  0E00               	movlw	0
   919  002F52  6E13               	movwf	___flmul@a^0,c
   920  002F54  0E00               	movlw	0
   921  002F56  6E14               	movwf	(___flmul@a+1)^0,c
   922  002F58  0EA0               	movlw	160
   923  002F5A  6E15               	movwf	(___flmul@a+2)^0,c
   924  002F5C  0E40               	movlw	64
   925  002F5E  6E16               	movwf	(___flmul@a+3)^0,c
   926  002F60  C0DD  F001         	movff	_data,___xxtofl@val
   927  002F64  C0DE  F002         	movff	_data+1,___xxtofl@val+1
   928  002F68  6A03               	clrf	(___xxtofl@val+2)^0,c
   929  002F6A  6A04               	clrf	(___xxtofl@val+3)^0,c
   930  002F6C  0E00               	movlw	0
   931  002F6E  EC7F  F013         	call	___xxtofl
   932  002F72  C001  F00F         	movff	?___xxtofl,___flmul@b
   933  002F76  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   934  002F7A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   935  002F7E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   936  002F82  EC94  F00E         	call	___flmul	;wreg free
   937  002F86  C00F  F028         	movff	?___flmul,___fldiv@b
   938  002F8A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   939  002F8E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   940  002F92  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   941  002F96  0E00               	movlw	0
   942  002F98  6E2C               	movwf	___fldiv@a^0,c
   943  002F9A  0EC0               	movlw	192
   944  002F9C  6E2D               	movwf	(___fldiv@a+1)^0,c
   945  002F9E  0E7F               	movlw	127
   946  002FA0  6E2E               	movwf	(___fldiv@a+2)^0,c
   947  002FA2  0E44               	movlw	68
   948  002FA4  6E2F               	movwf	(___fldiv@a+3)^0,c
   949  002FA6  ECA9  F010         	call	___fldiv	;wreg free
   950  002FAA  C028  F0D1         	movff	?___fldiv,_tension
   951  002FAE  C029  F0D2         	movff	?___fldiv+1,_tension+1
   952  002FB2  C02A  F0D3         	movff	?___fldiv+2,_tension+2
   953  002FB6  C02B  F0D4         	movff	?___fldiv+3,_tension+3
   954  002FBA                     
   955                           ;Main_ADC.c: 40:         sprintf(bufferTx,"%.02f",tension);
   956  002FBA  0EDF               	movlw	low _bufferTx
   957  002FBC  0100               	movlb	0	; () banked
   958  002FBE  6FAD               	movwf	sprintf@s& (0+255),b
   959  002FC0  0E00               	movlw	high _bufferTx
   960  002FC2  6FAE               	movwf	(sprintf@s+1)& (0+255),b
   961  002FC4  0E0D               	movlw	low STR_2
   962  002FC6  6FAF               	movwf	sprintf@fmt& (0+255),b
   963  002FC8  0E08               	movlw	high STR_2
   964  002FCA  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
   965  002FCC  C0D1  F0B1         	movff	_tension,?_sprintf+4
   966  002FD0  C0D2  F0B2         	movff	_tension+1,?_sprintf+5
   967  002FD4  C0D3  F0B3         	movff	_tension+2,?_sprintf+6
   968  002FD8  C0D4  F0B4         	movff	_tension+3,?_sprintf+7
   969  002FDC  EC34  F01B         	call	_sprintf	;wreg free
   970  002FE0                     
   971                           ;Main_ADC.c: 41:   LCD_I2C_WriteText(1,0,bufferTx);
   972  002FE0  0E00               	movlw	0
   973  002FE2  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
   974  002FE4  0EDF               	movlw	low _bufferTx
   975  002FE6  6E0C               	movwf	LCD_I2C_WriteText@string^0,c
   976  002FE8  0E00               	movlw	high _bufferTx
   977  002FEA  6E0D               	movwf	(LCD_I2C_WriteText@string+1)^0,c
   978  002FEC  0E01               	movlw	1
   979  002FEE  EC92  F016         	call	_LCD_I2C_WriteText
   980  002FF2                     
   981                           ;Main_ADC.c: 42:   _delay((unsigned long)((100)*(20000000UL/4000.0)));
   982  002FF2  0E03               	movlw	3
   983  002FF4  0100               	movlb	0	; () banked
   984  002FF6  6FC8               	movwf	(??_main+1)& (0+255),b
   985  002FF8  0E8A               	movlw	138
   986  002FFA  6FC7               	movwf	??_main& (0+255),b
   987  002FFC  0E55               	movlw	85
   988  002FFE                     u4757:
   989  002FFE  2EE8               	decfsz	wreg,f,c
   990  003000  D7FE               	bra	u4757
   991  003002  2FC7               	decfsz	??_main& (0+255),f,b
   992  003004  D7FC               	bra	u4757
   993  003006  2FC8               	decfsz	(??_main+1)& (0+255),f,b
   994  003008  D7FA               	bra	u4757
   995  00300A  D000               	nop2	
   996                           
   997                           ;Main_ADC.c: 45:     }
   998  00300C  EFA1  F017         	goto	l4111
   999  003010  EF00  F000         	goto	start
  1000  003014                     __end_of_main:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _sprintf *****************
  1004 ;; Defined at:
  1005 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  s               2   77[BANK0 ] PTR unsigned char 
  1008 ;;		 -> bufferTx(20), 
  1009 ;;  fmt             2   79[BANK0 ] PTR const unsigned char 
  1010 ;;		 -> STR_2(6), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  f              11   87[BANK0 ] struct _IO_FILE
  1013 ;;  ap              2   85[BANK0 ] PTR void [1]
  1014 ;;		 -> ?_sprintf(2), 
  1015 ;;  ret             2    0        int 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  2   77[BANK0 ] int 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         0       8       0       0       0       0       0       0       0
  1026 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1029 ;;Total ram usage:       21 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 7
  1032 ;; This function calls:
  1033 ;;		_vfprintf
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text1
  1040  003668                     __ptext1:
  1041                           	callstack 0
  1042  003668                     _sprintf:
  1043                           	callstack 23
  1044  003668  0EB1               	movlw	low (?_sprintf+4)
  1045  00366A  0100               	movlb	0	; () banked
  1046  00366C  6FB5               	movwf	sprintf@ap& (0+255),b
  1047  00366E  0E00               	movlw	high (?_sprintf+4)
  1048  003670  6FB6               	movwf	(sprintf@ap+1)& (0+255),b
  1049  003672  C0AD  F0B7         	movff	sprintf@s,sprintf@f
  1050  003676  C0AE  F0B8         	movff	sprintf@s+1,sprintf@f+1
  1051  00367A                     
  1052                           ; BSR set to: 0
  1053  00367A  0E00               	movlw	0
  1054  00367C  6FBB               	movwf	(sprintf@f+4)& (0+255),b
  1055  00367E  0E00               	movlw	0
  1056  003680  6FBA               	movwf	(sprintf@f+3)& (0+255),b
  1057  003682                     
  1058                           ; BSR set to: 0
  1059  003682  0E00               	movlw	0
  1060  003684  6FC1               	movwf	(sprintf@f+10)& (0+255),b
  1061  003686  0E00               	movlw	0
  1062  003688  6FC0               	movwf	(sprintf@f+9)& (0+255),b
  1063  00368A                     
  1064                           ; BSR set to: 0
  1065  00368A  0EB7               	movlw	low sprintf@f
  1066  00368C  6FA5               	movwf	vfprintf@fp& (0+255),b
  1067  00368E  0E00               	movlw	high sprintf@f
  1068  003690  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
  1069  003692  C0AF  F0A7         	movff	sprintf@fmt,vfprintf@fmt
  1070  003696  C0B0  F0A8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1071  00369A  0EB5               	movlw	low sprintf@ap
  1072  00369C  6FA9               	movwf	vfprintf@ap& (0+255),b
  1073  00369E  0E00               	movlw	high sprintf@ap
  1074  0036A0  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
  1075  0036A2  ECA9  F01A         	call	_vfprintf	;wreg free
  1076  0036A6  0100               	movlb	0	; () banked
  1077  0036A8  51BA               	movf	(sprintf@f+3)& (0+255),w,b
  1078  0036AA  25AD               	addwf	sprintf@s& (0+255),w,b
  1079  0036AC  6ED9               	movwf	fsr2l,c
  1080  0036AE  51BB               	movf	(sprintf@f+4)& (0+255),w,b
  1081  0036B0  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1082  0036B2  6EDA               	movwf	fsr2h,c
  1083  0036B4  0E00               	movlw	0
  1084  0036B6  6EDF               	movwf	indf2,c
  1085  0036B8                     
  1086                           ; BSR set to: 0
  1087  0036B8  0012               	return		;funcret
  1088  0036BA                     __end_of_sprintf:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _vfprintf *****************
  1092 ;; Defined at:
  1093 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  fp              2   69[BANK0 ] PTR struct _IO_FILE
  1096 ;;		 -> sprintf@f(11), 
  1097 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  1098 ;;		 -> STR_2(6), 
  1099 ;;  ap              2   73[BANK0 ] PTR PTR void 
  1100 ;;		 -> sprintf@ap(2), 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  cfmt            2   75[BANK0 ] PTR unsigned char 
  1103 ;;		 -> STR_2(6), 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2   69[BANK0 ] int 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       6       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        8 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 6
  1120 ;; This function calls:
  1121 ;;		_vfpfcnvrt
  1122 ;; This function is called by:
  1123 ;;		_sprintf
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text2
  1128  003552                     __ptext2:
  1129                           	callstack 0
  1130  003552                     _vfprintf:
  1131                           	callstack 23
  1132  003552                     
  1133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1134  003552  C0A7  F0AB         	movff	vfprintf@fmt,vfprintf@cfmt
  1135  003556  C0A8  F0AC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1136  00355A                     
  1137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1138  00355A  0E00               	movlw	0
  1139  00355C  0100               	movlb	0	; () banked
  1140  00355E  6FD6               	movwf	(_nout+1)& (0+255),b
  1141  003560  0E00               	movlw	0
  1142  003562  6FD5               	movwf	_nout& (0+255),b
  1143                           
  1144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1145  003564  EFC7  F01A         	goto	l3945
  1146  003568                     l3943:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1150  003568  C0A5  F097         	movff	vfprintf@fp,vfpfcnvrt@fp
  1151  00356C  C0A6  F098         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1152  003570  0EAB               	movlw	low vfprintf@cfmt
  1153  003572  6F99               	movwf	vfpfcnvrt@fmt& (0+255),b
  1154  003574  0E00               	movlw	high vfprintf@cfmt
  1155  003576  6F9A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1156  003578  C0A9  F09B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1157  00357C  C0AA  F09C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1158  003580  EC79  F00C         	call	_vfpfcnvrt	;wreg free
  1159  003584  0100               	movlb	0	; () banked
  1160  003586  5197               	movf	?_vfpfcnvrt& (0+255),w,b
  1161  003588  27D5               	addwf	_nout& (0+255),f,b
  1162  00358A  5198               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1163  00358C  23D6               	addwfc	(_nout+1)& (0+255),f,b
  1164  00358E                     l3945:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1168  00358E  C0AB  FFF6         	movff	vfprintf@cfmt,tblptrl
  1169  003592  C0AC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1170  003596                     	if	0	;tblptru may be non-zero
  1171  003596                     	endif
  1172  003596                     	if	0	;tblptru may be non-zero
  1173  003596                     	endif
  1174  003596  0008               	tblrd		*
  1175  003598  50F5               	movf	tablat,w,c
  1176  00359A  0900               	iorlw	0
  1177  00359C  A4D8               	btfss	status,2,c
  1178  00359E  EFD3  F01A         	goto	u4591
  1179  0035A2  EFD5  F01A         	goto	u4590
  1180  0035A6                     u4591:
  1181  0035A6  EFB4  F01A         	goto	l3943
  1182  0035AA                     u4590:
  1183  0035AA                     
  1184                           ; BSR set to: 0
  1185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1186  0035AA  C0D5  F0A5         	movff	_nout,?_vfprintf
  1187  0035AE  C0D6  F0A6         	movff	_nout+1,?_vfprintf+1
  1188  0035B2                     
  1189                           ; BSR set to: 0
  1190  0035B2  0012               	return		;funcret
  1191  0035B4                     __end_of_vfprintf:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _vfpfcnvrt *****************
  1195 ;; Defined at:
  1196 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  1199 ;;		 -> sprintf@f(11), 
  1200 ;;  fmt             2   57[BANK0 ] PTR PTR unsigned char 
  1201 ;;		 -> vfprintf@cfmt(2), 
  1202 ;;  ap              2   59[BANK0 ] PTR PTR void 
  1203 ;;		 -> sprintf@ap(2), 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  llu             8    0        unsigned long long 
  1206 ;;  ll              8    0        long long 
  1207 ;;  f               4   61[BANK0 ] long long 
  1208 ;;  ct              3   65[BANK0 ] unsigned char [3]
  1209 ;;  vp              3    0        PTR void 
  1210 ;;  cp              3    0        PTR unsigned char 
  1211 ;;  i               2    0        int 
  1212 ;;  done            2    0        int 
  1213 ;;  c               1   68[BANK0 ] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2   55[BANK0 ] int 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       6       0       0       0       0       0       0       0
  1224 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1225 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         4      14       0       0       0       0       0       0       0
  1227 ;;Total ram usage:       18 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 5
  1230 ;; This function calls:
  1231 ;;		_atoi
  1232 ;;		_efgtoa
  1233 ;;		_fputc
  1234 ;;		_isdigit
  1235 ;;		_isupper
  1236 ;;		_strncmp
  1237 ;;		_tolower
  1238 ;; This function is called by:
  1239 ;;		_vfprintf
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text3
  1244  0018F2                     __ptext3:
  1245                           	callstack 0
  1246  0018F2                     _vfpfcnvrt:
  1247                           	callstack 23
  1248  0018F2                     
  1249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1250  0018F2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1251  0018F6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1252  0018FA  CFDE FFF6          	movff	postinc2,tblptrl
  1253  0018FE  CFDD FFF7          	movff	postdec2,tblptrh
  1254  001902                     	if	0	;tblptru may be non-zero
  1255  001902                     	endif
  1256  001902                     	if	0	;tblptru may be non-zero
  1257  001902                     	endif
  1258  001902  0008               	tblrd		*
  1259  001904  50F5               	movf	tablat,w,c
  1260  001906  0A25               	xorlw	37
  1261  001908  A4D8               	btfss	status,2,c
  1262  00190A  EF89  F00C         	goto	u4491
  1263  00190E  EF8B  F00C         	goto	u4490
  1264  001912                     u4491:
  1265  001912  EF78  F00E         	goto	l3929
  1266  001916                     u4490:
  1267  001916                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1269  001916  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1270  00191A  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1271  00191E  2ADE               	incf	postinc2,f,c
  1272  001920  0E00               	movlw	0
  1273  001922  22DD               	addwfc	postdec2,f,c
  1274  001924                     
  1275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1276  001924  0E00               	movlw	0
  1277  001926  0100               	movlb	0	; () banked
  1278  001928  6FD8               	movwf	(_width+1)& (0+255),b
  1279  00192A  0E00               	movlw	0
  1280  00192C  6FD7               	movwf	_width& (0+255),b
  1281  00192E  C0D7  F0DB         	movff	_width,_flags
  1282  001932  C0D8  F0DC         	movff	_width+1,_flags+1
  1283  001936                     
  1284                           ; BSR set to: 0
  1285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1286  001936  69D9               	setf	_prec& (0+255),b
  1287  001938  69DA               	setf	(_prec+1)& (0+255),b
  1288  00193A                     
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1291  00193A  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292  00193E  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293  001942  CFDE FFF6          	movff	postinc2,tblptrl
  1294  001946  CFDD FFF7          	movff	postdec2,tblptrh
  1295  00194A                     	if	0	;tblptru may be non-zero
  1296  00194A                     	endif
  1297  00194A                     	if	0	;tblptru may be non-zero
  1298  00194A                     	endif
  1299  00194A  0008               	tblrd		*
  1300  00194C  50F5               	movf	tablat,w,c
  1301  00194E  0A2E               	xorlw	46
  1302  001950  A4D8               	btfss	status,2,c
  1303  001952  EFAD  F00C         	goto	u4501
  1304  001956  EFAF  F00C         	goto	u4500
  1305  00195A                     u4501:
  1306  00195A  EF1F  F00D         	goto	l3875
  1307  00195E                     u4500:
  1308  00195E                     
  1309                           ; BSR set to: 0
  1310                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1311  00195E  0E00               	movlw	0
  1312  001960  6FDA               	movwf	(_prec+1)& (0+255),b
  1313  001962  0E00               	movlw	0
  1314  001964  6FD9               	movwf	_prec& (0+255),b
  1315  001966                     
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1318  001966  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1319  00196A  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1320  00196E  2ADE               	incf	postinc2,f,c
  1321  001970  0E00               	movlw	0
  1322  001972  22DD               	addwfc	postdec2,f,c
  1323  001974                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1326  001974  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1327  001978  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1328  00197C  CFDE FFF6          	movff	postinc2,tblptrl
  1329  001980  CFDD FFF7          	movff	postdec2,tblptrh
  1330  001984                     	if	0	;tblptru may be non-zero
  1331  001984                     	endif
  1332  001984                     	if	0	;tblptru may be non-zero
  1333  001984                     	endif
  1334  001984  0008               	tblrd		*
  1335  001986  50F5               	movf	tablat,w,c
  1336  001988  0A2A               	xorlw	42
  1337  00198A  A4D8               	btfss	status,2,c
  1338  00198C  EFCA  F00C         	goto	u4511
  1339  001990  EFCC  F00C         	goto	u4510
  1340  001994                     u4511:
  1341  001994  EFE9  F00C         	goto	l3867
  1342  001998                     u4510:
  1343  001998                     
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1346  001998  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1347  00199C  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1348  0019A0  2ADE               	incf	postinc2,f,c
  1349  0019A2  0E00               	movlw	0
  1350  0019A4  22DD               	addwfc	postdec2,f,c
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1353  0019A6  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1354  0019AA  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1355  0019AE  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1356  0019B2  0E02               	movlw	2
  1357  0019B4  26DE               	addwf	postinc2,f,c
  1358  0019B6  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1359  0019BA  0E00               	movlw	0
  1360  0019BC  22DD               	addwfc	postdec2,f,c
  1361  0019BE  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1362  0019C2  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1363  0019C6  CFDE F0D9          	movff	postinc2,_prec
  1364  0019CA  CFDD F0DA          	movff	postdec2,_prec+1
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1367  0019CE  EF1F  F00D         	goto	l3875
  1368  0019D2                     l3867:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1372  0019D2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373  0019D6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374  0019DA  CFDE F008          	movff	postinc2,atoi@s
  1375  0019DE  CFDD F009          	movff	postdec2,atoi@s+1
  1376  0019E2  EC59  F014         	call	_atoi	;wreg free
  1377  0019E6  C008  F0D9         	movff	?_atoi,_prec
  1378  0019EA  C009  F0DA         	movff	?_atoi+1,_prec+1
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1381  0019EE  EF00  F00D         	goto	l3873
  1382  0019F2                     l3869:
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1385  0019F2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386  0019F6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387  0019FA  2ADE               	incf	postinc2,f,c
  1388  0019FC  0E00               	movlw	0
  1389  0019FE  22DD               	addwfc	postdec2,f,c
  1390  001A00                     l3873:
  1391  001A00  0ED0               	movlw	208
  1392  001A02  6E5C               	movwf	??_vfpfcnvrt^0,c
  1393  001A04  0EFF               	movlw	255
  1394  001A06  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1395  001A08  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1396  001A0C  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1397  001A10  CFDE FFF6          	movff	postinc2,tblptrl
  1398  001A14  CFDD FFF7          	movff	postdec2,tblptrh
  1399  001A18                     	if	0	;tblptru may be non-zero
  1400  001A18                     	endif
  1401  001A18                     	if	0	;tblptru may be non-zero
  1402  001A18                     	endif
  1403  001A18  0008               	tblrd		*
  1404  001A1A  50F5               	movf	tablat,w,c
  1405  001A1C  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1406  001A1E  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1407  001A20  505C               	movf	??_vfpfcnvrt^0,w,c
  1408  001A22  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1409  001A24  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1410  001A26  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1411  001A28  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1412  001A2A  E109               	bnz	u4520
  1413  001A2C  0E0A               	movlw	10
  1414  001A2E  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1415  001A30  A0D8               	btfss	status,0,c
  1416  001A32  EF1D  F00D         	goto	u4521
  1417  001A36  EF1F  F00D         	goto	u4520
  1418  001A3A                     u4521:
  1419  001A3A  EFF9  F00C         	goto	l3869
  1420  001A3E                     u4520:
  1421  001A3E                     l3875:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1424  001A3E  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1425  001A42  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1426  001A46  CFDE FFF6          	movff	postinc2,tblptrl
  1427  001A4A  CFDD FFF7          	movff	postdec2,tblptrh
  1428  001A4E                     	if	0	;tblptru may be non-zero
  1429  001A4E                     	endif
  1430  001A4E                     	if	0	;tblptru may be non-zero
  1431  001A4E                     	endif
  1432  001A4E  0008               	tblrd		*
  1433  001A50  50F5               	movf	tablat,w,c
  1434  001A52  6E07               	movwf	tolower@c^0,c
  1435  001A54  6A08               	clrf	(tolower@c+1)^0,c
  1436  001A56  EC86  F01B         	call	_tolower	;wreg free
  1437  001A5A  5007               	movf	?_tolower^0,w,c
  1438  001A5C  0100               	movlb	0	; () banked
  1439  001A5E  6FA1               	movwf	vfpfcnvrt@ct& (0+255),b
  1440  001A60                     
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1443  001A60  51A1               	movf	vfpfcnvrt@ct& (0+255),w,b
  1444  001A62  B4D8               	btfsc	status,2,c
  1445  001A64  EF36  F00D         	goto	u4531
  1446  001A68  EF38  F00D         	goto	u4530
  1447  001A6C                     u4531:
  1448  001A6C  EF72  F00D         	goto	l3885
  1449  001A70                     u4530:
  1450  001A70                     
  1451                           ; BSR set to: 0
  1452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1453  001A70  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1454  001A74  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1455  001A78  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1456  001A7C  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1457  001A80  0E01               	movlw	1
  1458  001A82  265C               	addwf	??_vfpfcnvrt^0,f,c
  1459  001A84  0E00               	movlw	0
  1460  001A86  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1461  001A88  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1462  001A8C  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1463  001A90                     	if	0	;tblptru may be non-zero
  1464  001A90                     	endif
  1465  001A90                     	if	0	;tblptru may be non-zero
  1466  001A90                     	endif
  1467  001A90  0008               	tblrd		*
  1468  001A92  50F5               	movf	tablat,w,c
  1469  001A94  6E07               	movwf	tolower@c^0,c
  1470  001A96  6A08               	clrf	(tolower@c+1)^0,c
  1471  001A98  EC86  F01B         	call	_tolower	;wreg free
  1472  001A9C  5007               	movf	?_tolower^0,w,c
  1473  001A9E  0100               	movlb	0	; () banked
  1474  001AA0  6FA2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1475  001AA2                     
  1476                           ; BSR set to: 0
  1477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1478  001AA2  51A2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1479  001AA4  B4D8               	btfsc	status,2,c
  1480  001AA6  EF57  F00D         	goto	u4541
  1481  001AAA  EF59  F00D         	goto	u4540
  1482  001AAE                     u4541:
  1483  001AAE  EF72  F00D         	goto	l3885
  1484  001AB2                     u4540:
  1485  001AB2                     
  1486                           ; BSR set to: 0
  1487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1488  001AB2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1489  001AB6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1490  001ABA  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1491  001ABE  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1492  001AC2  0E02               	movlw	2
  1493  001AC4  265C               	addwf	??_vfpfcnvrt^0,f,c
  1494  001AC6  0E00               	movlw	0
  1495  001AC8  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1496  001ACA  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1497  001ACE  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1498  001AD2                     	if	0	;tblptru may be non-zero
  1499  001AD2                     	endif
  1500  001AD2                     	if	0	;tblptru may be non-zero
  1501  001AD2                     	endif
  1502  001AD2  0008               	tblrd		*
  1503  001AD4  50F5               	movf	tablat,w,c
  1504  001AD6  6E07               	movwf	tolower@c^0,c
  1505  001AD8  6A08               	clrf	(tolower@c+1)^0,c
  1506  001ADA  EC86  F01B         	call	_tolower	;wreg free
  1507  001ADE  5007               	movf	?_tolower^0,w,c
  1508  001AE0  0100               	movlb	0	; () banked
  1509  001AE2  6FA3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1510  001AE4                     l3885:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1514  001AE4  0E66               	movlw	102
  1515  001AE6  19A1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1516  001AE8  A4D8               	btfss	status,2,c
  1517  001AEA  EF79  F00D         	goto	u4551
  1518  001AEE  EF7B  F00D         	goto	u4550
  1519  001AF2                     u4551:
  1520  001AF2  EFBB  F00D         	goto	l3897
  1521  001AF6                     u4550:
  1522  001AF6                     
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1525  001AF6  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  001AFA  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  001AFE  CFDE FFF6          	movff	postinc2,tblptrl
  1528  001B02  CFDD FFF7          	movff	postdec2,tblptrh
  1529  001B06                     	if	0	;tblptru may be non-zero
  1530  001B06                     	endif
  1531  001B06                     	if	0	;tblptru may be non-zero
  1532  001B06                     	endif
  1533  001B06  0008               	tblrd		*
  1534  001B08  CFF5 F0A4          	movff	tablat,vfpfcnvrt@c
  1535  001B0C                     
  1536                           ; BSR set to: 0
  1537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1538  001B0C  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1539  001B10  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1540  001B14  2ADE               	incf	postinc2,f,c
  1541  001B16  0E00               	movlw	0
  1542  001B18  22DD               	addwfc	postdec2,f,c
  1543  001B1A                     
  1544                           ; BSR set to: 0
  1545                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1546  001B1A  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1547  001B1E  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1548  001B22  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1549  001B26  0E04               	movlw	4
  1550  001B28  26DE               	addwf	postinc2,f,c
  1551  001B2A  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1552  001B2E  0E00               	movlw	0
  1553  001B30  22DD               	addwfc	postdec2,f,c
  1554  001B32  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1555  001B36  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1556  001B3A  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1557  001B3E  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1558  001B42  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1559  001B46  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1560  001B4A                     l3893:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1563  001B4A  C097  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1564  001B4E  C098  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1565  001B52  C09D  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1566  001B56  C09E  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1567  001B5A  C09F  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1568  001B5E  C0A0  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1569  001B62  C0A4  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1570  001B66  EC14  F004         	call	_efgtoa	;wreg free
  1571  001B6A  C055  F097         	movff	?_efgtoa,?_vfpfcnvrt
  1572  001B6E  C056  F098         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1573  001B72  EF93  F00E         	goto	l967
  1574  001B76                     l3897:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1578  001B76  0EA1               	movlw	low vfpfcnvrt@ct
  1579  001B78  6E01               	movwf	strncmp@_l^0,c
  1580  001B7A  0E00               	movlw	high vfpfcnvrt@ct
  1581  001B7C  6E02               	movwf	(strncmp@_l+1)^0,c
  1582  001B7E  0E23               	movlw	low STR_11
  1583  001B80  6E03               	movwf	strncmp@_r^0,c
  1584  001B82  0E08               	movlw	high STR_11
  1585  001B84  6E04               	movwf	(strncmp@_r+1)^0,c
  1586  001B86  0E00               	movlw	0
  1587  001B88  6E06               	movwf	(strncmp@n+1)^0,c
  1588  001B8A  0E02               	movlw	2
  1589  001B8C  6E05               	movwf	strncmp@n^0,c
  1590  001B8E  EC0A  F018         	call	_strncmp	;wreg free
  1591  001B92  5001               	movf	?_strncmp^0,w,c
  1592  001B94  1002               	iorwf	(?_strncmp+1)^0,w,c
  1593  001B96  A4D8               	btfss	status,2,c
  1594  001B98  EFD0  F00D         	goto	u4561
  1595  001B9C  EFD2  F00D         	goto	u4560
  1596  001BA0                     u4561:
  1597  001BA0  EF40  F00E         	goto	l3913
  1598  001BA4                     u4560:
  1599  001BA4                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1601  001BA4  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1602  001BA8  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1603  001BAC  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1604  001BB0  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1605  001BB4  0E01               	movlw	1
  1606  001BB6  265C               	addwf	??_vfpfcnvrt^0,f,c
  1607  001BB8  0E00               	movlw	0
  1608  001BBA  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1609  001BBC  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1610  001BC0  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1611  001BC4                     	if	0	;tblptru may be non-zero
  1612  001BC4                     	endif
  1613  001BC4                     	if	0	;tblptru may be non-zero
  1614  001BC4                     	endif
  1615  001BC4  0008               	tblrd		*
  1616  001BC6  CFF5 F0A4          	movff	tablat,vfpfcnvrt@c
  1617  001BCA  0EBF               	movlw	191
  1618  001BCC  6E5C               	movwf	??_vfpfcnvrt^0,c
  1619  001BCE  0EFF               	movlw	255
  1620  001BD0  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1621  001BD2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622  001BD6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623  001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  1624  001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  1625  001BE2                     	if	0	;tblptru may be non-zero
  1626  001BE2                     	endif
  1627  001BE2                     	if	0	;tblptru may be non-zero
  1628  001BE2                     	endif
  1629  001BE2  0008               	tblrd		*
  1630  001BE4  50F5               	movf	tablat,w,c
  1631  001BE6  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1632  001BE8  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1633  001BEA  505C               	movf	??_vfpfcnvrt^0,w,c
  1634  001BEC  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1635  001BEE  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1636  001BF0  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1637  001BF2  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1638  001BF4  E107               	bnz	u4571
  1639  001BF6  0E1A               	movlw	26
  1640  001BF8  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1641  001BFA  B0D8               	btfsc	status,0,c
  1642  001BFC  EF02  F00E         	goto	u4571
  1643  001C00  EF04  F00E         	goto	u4570
  1644  001C04                     u4571:
  1645  001C04  EF1E  F00E         	goto	l3907
  1646  001C08                     u4570:
  1647  001C08                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1649  001C08  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1650  001C0C  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1651  001C10  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1652  001C14  0E04               	movlw	4
  1653  001C16  26DE               	addwf	postinc2,f,c
  1654  001C18  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1655  001C1C  0E00               	movlw	0
  1656  001C1E  22DD               	addwfc	postdec2,f,c
  1657  001C20  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1658  001C24  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1659  001C28  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1660  001C2C  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1661  001C30  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1662  001C34  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1665  001C38  EF36  F00E         	goto	l972
  1666  001C3C                     l3907:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1669  001C3C  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1670  001C40  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1671  001C44  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1672  001C48  0E04               	movlw	4
  1673  001C4A  26DE               	addwf	postinc2,f,c
  1674  001C4C  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1675  001C50  0E00               	movlw	0
  1676  001C52  22DD               	addwfc	postdec2,f,c
  1677  001C54  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1678  001C58  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1679  001C5C  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1680  001C60  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1681  001C64  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1682  001C68  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1683  001C6C                     l972:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1686  001C6C  0E02               	movlw	2
  1687  001C6E  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688  001C72  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689  001C76  26DE               	addwf	postinc2,f,c
  1690  001C78  0E00               	movlw	0
  1691  001C7A  22DD               	addwfc	postdec2,f,c
  1692  001C7C  EFA5  F00D         	goto	l3893
  1693  001C80                     l3913:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1696  001C80  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1697  001C84  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1698  001C88  CFDE FFF6          	movff	postinc2,tblptrl
  1699  001C8C  CFDD FFF7          	movff	postdec2,tblptrh
  1700  001C90                     	if	0	;tblptru may be non-zero
  1701  001C90                     	endif
  1702  001C90                     	if	0	;tblptru may be non-zero
  1703  001C90                     	endif
  1704  001C90  0008               	tblrd		*
  1705  001C92  50F5               	movf	tablat,w,c
  1706  001C94  0A25               	xorlw	37
  1707  001C96  A4D8               	btfss	status,2,c
  1708  001C98  EF50  F00E         	goto	u4581
  1709  001C9C  EF52  F00E         	goto	u4580
  1710  001CA0                     u4581:
  1711  001CA0  EF6A  F00E         	goto	l3923
  1712  001CA4                     u4580:
  1713  001CA4                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1715  001CA4  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  001CA8  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  001CAC  2ADE               	incf	postinc2,f,c
  1718  001CAE  0E00               	movlw	0
  1719  001CB0  22DD               	addwfc	postdec2,f,c
  1720  001CB2                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1722  001CB2  0E00               	movlw	0
  1723  001CB4  6E02               	movwf	(fputc@c+1)^0,c
  1724  001CB6  0E25               	movlw	37
  1725  001CB8  6E01               	movwf	fputc@c^0,c
  1726  001CBA  C097  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1727  001CBE  C098  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1728  001CC2  EC75  F018         	call	_fputc	;wreg free
  1729  001CC6                     l3919:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1732  001CC6  0E00               	movlw	0
  1733  001CC8  0100               	movlb	0	; () banked
  1734  001CCA  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1735  001CCC  0E01               	movlw	1
  1736  001CCE  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  1737  001CD0  EF93  F00E         	goto	l967
  1738  001CD4                     l3923:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1741  001CD4  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742  001CD8  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743  001CDC  2ADE               	incf	postinc2,f,c
  1744  001CDE  0E00               	movlw	0
  1745  001CE0  22DD               	addwfc	postdec2,f,c
  1746  001CE2                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1748  001CE2  0E00               	movlw	0
  1749  001CE4  0100               	movlb	0	; () banked
  1750  001CE6  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1751  001CE8  0E00               	movlw	0
  1752  001CEA  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  1753  001CEC  EF93  F00E         	goto	l967
  1754  001CF0                     l3929:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1757  001CF0  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  001CF4  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  001CF8  CFDE FFF6          	movff	postinc2,tblptrl
  1760  001CFC  CFDD FFF7          	movff	postdec2,tblptrh
  1761  001D00                     	if	0	;tblptru may be non-zero
  1762  001D00                     	endif
  1763  001D00                     	if	0	;tblptru may be non-zero
  1764  001D00                     	endif
  1765  001D00  0008               	tblrd		*
  1766  001D02  50F5               	movf	tablat,w,c
  1767  001D04  6E01               	movwf	fputc@c^0,c
  1768  001D06  6A02               	clrf	(fputc@c+1)^0,c
  1769  001D08  C097  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1770  001D0C  C098  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1771  001D10  EC75  F018         	call	_fputc	;wreg free
  1772  001D14                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1774  001D14  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001D18  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  001D1C  2ADE               	incf	postinc2,f,c
  1777  001D1E  0E00               	movlw	0
  1778  001D20  22DD               	addwfc	postdec2,f,c
  1779  001D22  EF63  F00E         	goto	l3919
  1780  001D26                     l967:
  1781  001D26  0012               	return		;funcret
  1782  001D28                     __end_of_vfpfcnvrt:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _strncmp *****************
  1786 ;; Defined at:
  1787 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1790 ;;		 -> vfpfcnvrt@ct(3), 
  1791 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1792 ;;		 -> STR_13(3), 
  1793 ;;  n               2    4[COMRAM] unsigned int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1796 ;;		 -> STR_13(3), 
  1797 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1798 ;;		 -> vfpfcnvrt@ct(3), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[COMRAM] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1808 ;;      Params:         6       0       0       0       0       0       0       0       0
  1809 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1810 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1811 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1812 ;;Total ram usage:       11 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_vfpfcnvrt
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text4
  1822  003014                     __ptext4:
  1823                           	callstack 0
  1824  003014                     _strncmp:
  1825                           	callstack 27
  1826  003014  C001  F008         	movff	strncmp@_l,strncmp@l
  1827  003018  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1828  00301C  C003  F00A         	movff	strncmp@_r,strncmp@r
  1829  003020  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1830  003024  0605               	decf	strncmp@n^0,f,c
  1831  003026  A0D8               	btfss	status,0,c
  1832  003028  0606               	decf	(strncmp@n+1)^0,f,c
  1833  00302A  2805               	incf	strncmp@n^0,w,c
  1834  00302C  E106               	bnz	u4391
  1835  00302E  2806               	incf	(strncmp@n+1)^0,w,c
  1836  003030  A4D8               	btfss	status,2,c
  1837  003032  EF1D  F018         	goto	u4391
  1838  003036  EF1F  F018         	goto	u4390
  1839  00303A                     u4391:
  1840  00303A  EF2C  F018         	goto	l3799
  1841  00303E                     u4390:
  1842  00303E  0E00               	movlw	0
  1843  003040  6E02               	movwf	(?_strncmp+1)^0,c
  1844  003042  0E00               	movlw	0
  1845  003044  6E01               	movwf	?_strncmp^0,c
  1846  003046  EF74  F018         	goto	l1087
  1847  00304A                     l3797:
  1848  00304A  4A08               	infsnz	strncmp@l^0,f,c
  1849  00304C  2A09               	incf	(strncmp@l+1)^0,f,c
  1850  00304E  4A0A               	infsnz	strncmp@r^0,f,c
  1851  003050  2A0B               	incf	(strncmp@r+1)^0,f,c
  1852  003052  0605               	decf	strncmp@n^0,f,c
  1853  003054  A0D8               	btfss	status,0,c
  1854  003056  0606               	decf	(strncmp@n+1)^0,f,c
  1855  003058                     l3799:
  1856  003058  C008  FFD9         	movff	strncmp@l,fsr2l
  1857  00305C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1858  003060  50DF               	movf	indf2,w,c
  1859  003062  B4D8               	btfsc	status,2,c
  1860  003064  EF36  F018         	goto	u4401
  1861  003068  EF38  F018         	goto	u4400
  1862  00306C                     u4401:
  1863  00306C  EF63  F018         	goto	l3807
  1864  003070                     u4400:
  1865  003070  C00A  FFF6         	movff	strncmp@r,tblptrl
  1866  003074  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1867  003078                     	if	0	;tblptru may be non-zero
  1868  003078                     	endif
  1869  003078                     	if	0	;tblptru may be non-zero
  1870  003078                     	endif
  1871  003078  0008               	tblrd		*
  1872  00307A  50F5               	movf	tablat,w,c
  1873  00307C  0900               	iorlw	0
  1874  00307E  B4D8               	btfsc	status,2,c
  1875  003080  EF44  F018         	goto	u4411
  1876  003084  EF46  F018         	goto	u4410
  1877  003088                     u4411:
  1878  003088  EF63  F018         	goto	l3807
  1879  00308C                     u4410:
  1880  00308C  5005               	movf	strncmp@n^0,w,c
  1881  00308E  1006               	iorwf	(strncmp@n+1)^0,w,c
  1882  003090  B4D8               	btfsc	status,2,c
  1883  003092  EF4D  F018         	goto	u4421
  1884  003096  EF4F  F018         	goto	u4420
  1885  00309A                     u4421:
  1886  00309A  EF63  F018         	goto	l3807
  1887  00309E                     u4420:
  1888  00309E  C008  FFD9         	movff	strncmp@l,fsr2l
  1889  0030A2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1890  0030A6  50DF               	movf	indf2,w,c
  1891  0030A8  6E07               	movwf	??_strncmp^0,c
  1892  0030AA  C00A  FFF6         	movff	strncmp@r,tblptrl
  1893  0030AE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1894  0030B2                     	if	0	;tblptru may be non-zero
  1895  0030B2                     	endif
  1896  0030B2                     	if	0	;tblptru may be non-zero
  1897  0030B2                     	endif
  1898  0030B2  0008               	tblrd		*
  1899  0030B4  50F5               	movf	tablat,w,c
  1900  0030B6  1807               	xorwf	??_strncmp^0,w,c
  1901  0030B8  B4D8               	btfsc	status,2,c
  1902  0030BA  EF61  F018         	goto	u4431
  1903  0030BE  EF63  F018         	goto	u4430
  1904  0030C2                     u4431:
  1905  0030C2  EF25  F018         	goto	l3797
  1906  0030C6                     u4430:
  1907  0030C6                     l3807:
  1908  0030C6  C008  FFD9         	movff	strncmp@l,fsr2l
  1909  0030CA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1910  0030CE  50DF               	movf	indf2,w,c
  1911  0030D0  6E07               	movwf	??_strncmp^0,c
  1912  0030D2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1913  0030D6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1914  0030DA                     	if	0	;tblptru may be non-zero
  1915  0030DA                     	endif
  1916  0030DA                     	if	0	;tblptru may be non-zero
  1917  0030DA                     	endif
  1918  0030DA  0008               	tblrd		*
  1919  0030DC  50F5               	movf	tablat,w,c
  1920  0030DE  5C07               	subwf	??_strncmp^0,w,c
  1921  0030E0  6E01               	movwf	?_strncmp^0,c
  1922  0030E2  6A02               	clrf	(?_strncmp+1)^0,c
  1923  0030E4  A0D8               	btfss	status,0,c
  1924  0030E6  0602               	decf	(?_strncmp+1)^0,f,c
  1925  0030E8                     l1087:
  1926  0030E8  0012               	return		;funcret
  1927  0030EA                     __end_of_strncmp:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _efgtoa *****************
  1931 ;; Defined at:
  1932 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1935 ;;		 -> sprintf@f(11), 
  1936 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1937 ;;  c               1   90[COMRAM] unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  u               4   51[BANK0 ] unsigned char 
  1940 ;;  g               4   43[BANK0 ] unsigned char 
  1941 ;;  l               4   37[BANK0 ] unsigned char 
  1942 ;;  h               4   33[BANK0 ] unsigned char 
  1943 ;;  ou              4   19[BANK0 ] unsigned char 
  1944 ;;  n               2   49[BANK0 ] int 
  1945 ;;  e               2   47[BANK0 ] int 
  1946 ;;  i               2   41[BANK0 ] int 
  1947 ;;  w               2   29[BANK0 ] int 
  1948 ;;  p               2   27[BANK0 ] int 
  1949 ;;  sign            2   25[BANK0 ] int 
  1950 ;;  d               2   23[BANK0 ] int 
  1951 ;;  m               2   17[BANK0 ] int 
  1952 ;;  ne              2   15[BANK0 ] int 
  1953 ;;  pp              2   13[BANK0 ] int 
  1954 ;;  t               2   11[BANK0 ] int 
  1955 ;;  mode            1   32[BANK0 ] unsigned char 
  1956 ;;  nmode           1   31[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   84[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1966 ;;      Params:         7       0       0       0       0       0       0       0       0
  1967 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1968 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1969 ;;      Totals:         7      55       0       0       0       0       0       0       0
  1970 ;;Total ram usage:       62 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 4
  1973 ;; This function calls:
  1974 ;;		___awdiv
  1975 ;;		___awmod
  1976 ;;		___fladd
  1977 ;;		___fldiv
  1978 ;;		___fleq
  1979 ;;		___flge
  1980 ;;		___flmul
  1981 ;;		___flneg
  1982 ;;		___flsub
  1983 ;;		___fltol
  1984 ;;		___fpclassifyf
  1985 ;;		_floorf
  1986 ;;		_isupper
  1987 ;;		_pad
  1988 ;;		_strcpy
  1989 ;;		_tolower
  1990 ;; This function is called by:
  1991 ;;		_vfpfcnvrt
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text5
  1996  000828                     __ptext5:
  1997                           	callstack 0
  1998  000828                     _efgtoa:
  1999                           	callstack 23
  2000  000828                     
  2001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2002  000828  0E00               	movlw	0
  2003  00082A  0100               	movlb	0	; () banked
  2004  00082C  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  2005  00082E  0E00               	movlw	0
  2006  000830  6F79               	movwf	efgtoa@sign& (0+255),b
  2007  000832                     
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2010  000832  C057  F08B         	movff	efgtoa@f,efgtoa@g
  2011  000836  C058  F08C         	movff	efgtoa@f+1,efgtoa@g+1
  2012  00083A  C059  F08D         	movff	efgtoa@f+2,efgtoa@g+2
  2013  00083E  C05A  F08E         	movff	efgtoa@f+3,efgtoa@g+3
  2014  000842                     
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2017  000842  BF8E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2018  000844  EF28  F004         	goto	u3870
  2019  000848  EF26  F004         	goto	u3871
  2020  00084C                     u3871:
  2021  00084C  EF3E  F004         	goto	l3463
  2022  000850                     u3870:
  2023  000850                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2026  000850  0E00               	movlw	0
  2027  000852  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  2028  000854  0E01               	movlw	1
  2029  000856  6F79               	movwf	efgtoa@sign& (0+255),b
  2030  000858                     
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2033  000858  C08B  F001         	movff	efgtoa@g,___flneg@f1
  2034  00085C  C08C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2035  000860  C08D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2036  000864  C08E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2037  000868  EC0A  F01C         	call	___flneg	;wreg free
  2038  00086C  C001  F08B         	movff	?___flneg,efgtoa@g
  2039  000870  C002  F08C         	movff	?___flneg+1,efgtoa@g+1
  2040  000874  C003  F08D         	movff	?___flneg+2,efgtoa@g+2
  2041  000878  C004  F08E         	movff	?___flneg+3,efgtoa@g+3
  2042  00087C                     l3463:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2045  00087C  0E00               	movlw	0
  2046  00087E  0100               	movlb	0	; () banked
  2047  000880  6F92               	movwf	(efgtoa@n+1)& (0+255),b
  2048  000882  0E00               	movlw	0
  2049  000884  6F91               	movwf	efgtoa@n& (0+255),b
  2050  000886                     
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2053  000886  C0D7  F07D         	movff	_width,efgtoa@w
  2054  00088A  C0D8  F07E         	movff	_width+1,efgtoa@w+1
  2055  00088E                     
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2058  00088E  5179               	movf	efgtoa@sign& (0+255),w,b
  2059  000890  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2060  000892  A4D8               	btfss	status,2,c
  2061  000894  EF4E  F004         	goto	u3881
  2062  000898  EF50  F004         	goto	u3880
  2063  00089C                     u3881:
  2064  00089C  EF57  F004         	goto	l3471
  2065  0008A0                     u3880:
  2066  0008A0                     
  2067                           ; BSR set to: 0
  2068  0008A0  A5DB               	btfss	_flags& (0+255),2,b
  2069  0008A2  EF55  F004         	goto	u3891
  2070  0008A6  EF57  F004         	goto	u3890
  2071  0008AA                     u3891:
  2072  0008AA  EF71  F004         	goto	l3483
  2073  0008AE                     u3890:
  2074  0008AE                     l3471:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2078  0008AE  5179               	movf	efgtoa@sign& (0+255),w,b
  2079  0008B0  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2080  0008B2  A4D8               	btfss	status,2,c
  2081  0008B4  EF5E  F004         	goto	u3901
  2082  0008B8  EF60  F004         	goto	u3900
  2083  0008BC                     u3901:
  2084  0008BC  EF66  F004         	goto	l3475
  2085  0008C0                     u3900:
  2086  0008C0                     
  2087                           ; BSR set to: 0
  2088  0008C0  0E00               	movlw	0
  2089  0008C2  6F66               	movwf	(_efgtoa$1149+1)& (0+255),b
  2090  0008C4  0E2B               	movlw	43
  2091  0008C6  6F65               	movwf	_efgtoa$1149& (0+255),b
  2092  0008C8  EF6A  F004         	goto	l3477
  2093  0008CC                     l3475:
  2094                           
  2095                           ; BSR set to: 0
  2096  0008CC  0E00               	movlw	0
  2097  0008CE  6F66               	movwf	(_efgtoa$1149+1)& (0+255),b
  2098  0008D0  0E2D               	movlw	45
  2099  0008D2  6F65               	movwf	_efgtoa$1149& (0+255),b
  2100  0008D4                     l3477:
  2101                           
  2102                           ; BSR set to: 0
  2103  0008D4  C065  F100         	movff	_efgtoa$1149,_dbuf
  2104  0008D8                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2107  0008D8  4B91               	infsnz	efgtoa@n& (0+255),f,b
  2108  0008DA  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  2109  0008DC                     
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2112  0008DC  077D               	decf	efgtoa@w& (0+255),f,b
  2113  0008DE  A0D8               	btfss	status,0,c
  2114  0008E0  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  2115  0008E2                     l3483:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2119  0008E2  C08B  F001         	movff	efgtoa@g,___fpclassifyf@x
  2120  0008E6  C08C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2121  0008EA  C08D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2122  0008EE  C08E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2123  0008F2  EC13  F017         	call	___fpclassifyf	;wreg free
  2124  0008F6  0401               	decf	?___fpclassifyf^0,w,c
  2125  0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2126  0008FA  A4D8               	btfss	status,2,c
  2127  0008FC  EF82  F004         	goto	u3911
  2128  000900  EF84  F004         	goto	u3910
  2129  000904                     u3911:
  2130  000904  EFCE  F004         	goto	l3501
  2131  000908                     u3910:
  2132  000908  0EBF               	movlw	191
  2133  00090A  0100               	movlb	0	; () banked
  2134  00090C  6F60               	movwf	??_efgtoa& (0+255),b
  2135  00090E  0EFF               	movlw	255
  2136  000910  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2137  000912  505B               	movf	efgtoa@c^0,w,c
  2138  000914  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2139  000916  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2140  000918  5160               	movf	??_efgtoa& (0+255),w,b
  2141  00091A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2142  00091C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2143  00091E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2144  000920  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2145  000922  E107               	bnz	u3921
  2146  000924  0E1A               	movlw	26
  2147  000926  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2148  000928  B0D8               	btfsc	status,0,c
  2149  00092A  EF99  F004         	goto	u3921
  2150  00092E  EF9B  F004         	goto	u3920
  2151  000932                     u3921:
  2152  000932  EFA9  F004         	goto	l3493
  2153  000936                     u3920:
  2154  000936                     
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2157  000936  0E00               	movlw	low _dbuf
  2158  000938  2591               	addwf	efgtoa@n& (0+255),w,b
  2159  00093A  6E01               	movwf	strcpy@dest^0,c
  2160  00093C  0E01               	movlw	high _dbuf
  2161  00093E  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2162  000940  6E02               	movwf	(strcpy@dest+1)^0,c
  2163  000942  0E13               	movlw	low STR_3
  2164  000944  6E03               	movwf	strcpy@src^0,c
  2165  000946  0E08               	movlw	high STR_3
  2166  000948  6E04               	movwf	(strcpy@src+1)^0,c
  2167  00094A  ECDA  F01A         	call	_strcpy	;wreg free
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2170  00094E  EFB5  F004         	goto	l3495
  2171  000952                     l3493:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2175  000952  0E00               	movlw	low _dbuf
  2176  000954  2591               	addwf	efgtoa@n& (0+255),w,b
  2177  000956  6E01               	movwf	strcpy@dest^0,c
  2178  000958  0E01               	movlw	high _dbuf
  2179  00095A  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2180  00095C  6E02               	movwf	(strcpy@dest+1)^0,c
  2181  00095E  0E1B               	movlw	low STR_4
  2182  000960  6E03               	movwf	strcpy@src^0,c
  2183  000962  0E08               	movlw	high STR_4
  2184  000964  6E04               	movwf	(strcpy@src+1)^0,c
  2185  000966  ECDA  F01A         	call	_strcpy	;wreg free
  2186  00096A                     l3495:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2189  00096A  0100               	movlb	0	; () banked
  2190  00096C  0EFD               	movlw	253
  2191  00096E  277D               	addwf	efgtoa@w& (0+255),f,b
  2192  000970  0EFF               	movlw	255
  2193  000972  237E               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2194  000974                     l3497:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2197  000974  C055  F011         	movff	efgtoa@fp,pad@fp
  2198  000978  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2199  00097C  0E00               	movlw	low _dbuf
  2200  00097E  6E13               	movwf	pad@buf^0,c
  2201  000980  0E01               	movlw	high _dbuf
  2202  000982  6E14               	movwf	(pad@buf+1)^0,c
  2203  000984  C07D  F015         	movff	efgtoa@w,pad@p
  2204  000988  C07E  F016         	movff	efgtoa@w+1,pad@p+1
  2205  00098C  ECDA  F018         	call	_pad	;wreg free
  2206  000990  C011  F055         	movff	?_pad,?_efgtoa
  2207  000994  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2208  000998  EF18  F00A         	goto	l881
  2209  00099C                     l3501:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2212  00099C  C08B  F001         	movff	efgtoa@g,___fpclassifyf@x
  2213  0009A0  C08C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2214  0009A4  C08D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2215  0009A8  C08E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2216  0009AC  EC13  F017         	call	___fpclassifyf	;wreg free
  2217  0009B0  5001               	movf	?___fpclassifyf^0,w,c
  2218  0009B2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2219  0009B4  A4D8               	btfss	status,2,c
  2220  0009B6  EFDF  F004         	goto	u3931
  2221  0009BA  EFE1  F004         	goto	u3930
  2222  0009BE                     u3931:
  2223  0009BE  EF14  F005         	goto	l3519
  2224  0009C2                     u3930:
  2225  0009C2  0EBF               	movlw	191
  2226  0009C4  0100               	movlb	0	; () banked
  2227  0009C6  6F60               	movwf	??_efgtoa& (0+255),b
  2228  0009C8  0EFF               	movlw	255
  2229  0009CA  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2230  0009CC  505B               	movf	efgtoa@c^0,w,c
  2231  0009CE  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2232  0009D0  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2233  0009D2  5160               	movf	??_efgtoa& (0+255),w,b
  2234  0009D4  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2235  0009D6  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2236  0009D8  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2237  0009DA  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2238  0009DC  E107               	bnz	u3941
  2239  0009DE  0E1A               	movlw	26
  2240  0009E0  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2241  0009E2  B0D8               	btfsc	status,0,c
  2242  0009E4  EFF6  F004         	goto	u3941
  2243  0009E8  EFF8  F004         	goto	u3940
  2244  0009EC                     u3941:
  2245  0009EC  EF06  F005         	goto	l3511
  2246  0009F0                     u3940:
  2247  0009F0                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2250  0009F0  0E00               	movlw	low _dbuf
  2251  0009F2  2591               	addwf	efgtoa@n& (0+255),w,b
  2252  0009F4  6E01               	movwf	strcpy@dest^0,c
  2253  0009F6  0E01               	movlw	high _dbuf
  2254  0009F8  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2255  0009FA  6E02               	movwf	(strcpy@dest+1)^0,c
  2256  0009FC  0E17               	movlw	low STR_7
  2257  0009FE  6E03               	movwf	strcpy@src^0,c
  2258  000A00  0E08               	movlw	high STR_7
  2259  000A02  6E04               	movwf	(strcpy@src+1)^0,c
  2260  000A04  ECDA  F01A         	call	_strcpy	;wreg free
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2263  000A08  EFB5  F004         	goto	l3495
  2264  000A0C                     l3511:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2268  000A0C  0E00               	movlw	low _dbuf
  2269  000A0E  2591               	addwf	efgtoa@n& (0+255),w,b
  2270  000A10  6E01               	movwf	strcpy@dest^0,c
  2271  000A12  0E01               	movlw	high _dbuf
  2272  000A14  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2273  000A16  6E02               	movwf	(strcpy@dest+1)^0,c
  2274  000A18  0E1F               	movlw	low STR_8
  2275  000A1A  6E03               	movwf	strcpy@src^0,c
  2276  000A1C  0E08               	movlw	high STR_8
  2277  000A1E  6E04               	movwf	(strcpy@src+1)^0,c
  2278  000A20  ECDA  F01A         	call	_strcpy	;wreg free
  2279  000A24  EFB5  F004         	goto	l3495
  2280  000A28                     l3519:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2283  000A28  0E00               	movlw	0
  2284  000A2A  0100               	movlb	0	; () banked
  2285  000A2C  6F93               	movwf	efgtoa@u& (0+255),b
  2286  000A2E  0E00               	movlw	0
  2287  000A30  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  2288  000A32  0E80               	movlw	128
  2289  000A34  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  2290  000A36  0E3F               	movlw	63
  2291  000A38  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2294  000A3A  0E00               	movlw	0
  2295  000A3C  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2296  000A3E  0E00               	movlw	0
  2297  000A40  6F8F               	movwf	efgtoa@e& (0+255),b
  2298  000A42                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2301  000A42  C08B  F001         	movff	efgtoa@g,___fleq@ff1
  2302  000A46  C08C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2303  000A4A  C08D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2304  000A4E  C08E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2305  000A52  0E00               	movlw	0
  2306  000A54  6E05               	movwf	___fleq@ff2^0,c
  2307  000A56  0E00               	movlw	0
  2308  000A58  6E06               	movwf	(___fleq@ff2+1)^0,c
  2309  000A5A  0E00               	movlw	0
  2310  000A5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2311  000A5E  0E00               	movlw	0
  2312  000A60  6E08               	movwf	(___fleq@ff2+3)^0,c
  2313  000A62  EC54  F01A         	call	___fleq	;wreg free
  2314  000A66  B0D8               	btfsc	status,0,c
  2315  000A68  EF38  F005         	goto	u3951
  2316  000A6C  EF3A  F005         	goto	u3950
  2317  000A70                     u3951:
  2318  000A70  EFBD  F005         	goto	l3537
  2319  000A74                     u3950:
  2320  000A74  EF59  F005         	goto	l3529
  2321  000A78                     l3525:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2324  000A78  C093  F00F         	movff	efgtoa@u,___flmul@b
  2325  000A7C  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  2326  000A80  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  2327  000A84  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  2328  000A88  0E00               	movlw	0
  2329  000A8A  6E13               	movwf	___flmul@a^0,c
  2330  000A8C  0E00               	movlw	0
  2331  000A8E  6E14               	movwf	(___flmul@a+1)^0,c
  2332  000A90  0E20               	movlw	32
  2333  000A92  6E15               	movwf	(___flmul@a+2)^0,c
  2334  000A94  0E41               	movlw	65
  2335  000A96  6E16               	movwf	(___flmul@a+3)^0,c
  2336  000A98  EC94  F00E         	call	___flmul	;wreg free
  2337  000A9C  C00F  F093         	movff	?___flmul,efgtoa@u
  2338  000AA0  C010  F094         	movff	?___flmul+1,efgtoa@u+1
  2339  000AA4  C011  F095         	movff	?___flmul+2,efgtoa@u+2
  2340  000AA8  C012  F096         	movff	?___flmul+3,efgtoa@u+3
  2341  000AAC                     
  2342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2343  000AAC  0100               	movlb	0	; () banked
  2344  000AAE  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  2345  000AB0  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  2346  000AB2                     l3529:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2349  000AB2  C08B  F028         	movff	efgtoa@g,___flge@ff1
  2350  000AB6  C08C  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2351  000ABA  C08D  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2352  000ABE  C08E  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2353  000AC2  0E00               	movlw	0
  2354  000AC4  6E13               	movwf	___flmul@a^0,c
  2355  000AC6  0E00               	movlw	0
  2356  000AC8  6E14               	movwf	(___flmul@a+1)^0,c
  2357  000ACA  0E20               	movlw	32
  2358  000ACC  6E15               	movwf	(___flmul@a+2)^0,c
  2359  000ACE  0E41               	movlw	65
  2360  000AD0  6E16               	movwf	(___flmul@a+3)^0,c
  2361  000AD2  C093  F00F         	movff	efgtoa@u,___flmul@b
  2362  000AD6  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  2363  000ADA  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  2364  000ADE  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  2365  000AE2  EC94  F00E         	call	___flmul	;wreg free
  2366  000AE6  C00F  F02C         	movff	?___flmul,___flge@ff2
  2367  000AEA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2368  000AEE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2369  000AF2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2370  000AF6  EC10  F016         	call	___flge	;wreg free
  2371  000AFA  B0D8               	btfsc	status,0,c
  2372  000AFC  EF82  F005         	goto	u3961
  2373  000B00  EF84  F005         	goto	u3960
  2374  000B04                     u3961:
  2375  000B04  EF3C  F005         	goto	l3525
  2376  000B08                     u3960:
  2377  000B08  EFA4  F005         	goto	l3535
  2378  000B0C                     l3531:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2381  000B0C  C093  F028         	movff	efgtoa@u,___fldiv@b
  2382  000B10  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2383  000B14  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2384  000B18  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2385  000B1C  0E00               	movlw	0
  2386  000B1E  6E2C               	movwf	___fldiv@a^0,c
  2387  000B20  0E00               	movlw	0
  2388  000B22  6E2D               	movwf	(___fldiv@a+1)^0,c
  2389  000B24  0E20               	movlw	32
  2390  000B26  6E2E               	movwf	(___fldiv@a+2)^0,c
  2391  000B28  0E41               	movlw	65
  2392  000B2A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2393  000B2C  ECA9  F010         	call	___fldiv	;wreg free
  2394  000B30  C028  F093         	movff	?___fldiv,efgtoa@u
  2395  000B34  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  2396  000B38  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  2397  000B3C  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  2398  000B40                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2400  000B40  0100               	movlb	0	; () banked
  2401  000B42  078F               	decf	efgtoa@e& (0+255),f,b
  2402  000B44  A0D8               	btfss	status,0,c
  2403  000B46  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  2404  000B48                     l3535:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2407  000B48  C08B  F028         	movff	efgtoa@g,___flge@ff1
  2408  000B4C  C08C  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2409  000B50  C08D  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2410  000B54  C08E  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2411  000B58  C093  F02C         	movff	efgtoa@u,___flge@ff2
  2412  000B5C  C094  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2413  000B60  C095  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2414  000B64  C096  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2415  000B68  EC10  F016         	call	___flge	;wreg free
  2416  000B6C  A0D8               	btfss	status,0,c
  2417  000B6E  EFBB  F005         	goto	u3971
  2418  000B72  EFBD  F005         	goto	u3970
  2419  000B76                     u3971:
  2420  000B76  EF86  F005         	goto	l3531
  2421  000B7A                     u3970:
  2422  000B7A                     l3537:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2425  000B7A  C05B  F007         	movff	efgtoa@c,tolower@c
  2426  000B7E  6A08               	clrf	(tolower@c+1)^0,c
  2427  000B80  EC86  F01B         	call	_tolower	;wreg free
  2428  000B84  5007               	movf	?_tolower^0,w,c
  2429  000B86  0100               	movlb	0	; () banked
  2430  000B88  6F80               	movwf	efgtoa@mode& (0+255),b
  2431  000B8A                     
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2434  000B8A  C080  F07F         	movff	efgtoa@mode,efgtoa@nmode
  2435  000B8E                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2438  000B8E  0E67               	movlw	103
  2439  000B90  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2440  000B92  A4D8               	btfss	status,2,c
  2441  000B94  EFCE  F005         	goto	u3981
  2442  000B98  EFD0  F005         	goto	u3980
  2443  000B9C                     u3981:
  2444  000B9C  EFF6  F005         	goto	l3551
  2445  000BA0                     u3980:
  2446  000BA0                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2449  000BA0  51D9               	movf	_prec& (0+255),w,b
  2450  000BA2  11DA               	iorwf	(_prec+1)& (0+255),w,b
  2451  000BA4  A4D8               	btfss	status,2,c
  2452  000BA6  EFD7  F005         	goto	u3991
  2453  000BAA  EFD9  F005         	goto	u3990
  2454  000BAE                     u3991:
  2455  000BAE  EFDD  F005         	goto	l3547
  2456  000BB2                     u3990:
  2457  000BB2                     
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2460  000BB2  0E00               	movlw	0
  2461  000BB4  6FDA               	movwf	(_prec+1)& (0+255),b
  2462  000BB6  0E01               	movlw	1
  2463  000BB8  6FD9               	movwf	_prec& (0+255),b
  2464  000BBA                     l3547:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2468  000BBA  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  2469  000BBC  EFEA  F005         	goto	u4000
  2470  000BC0  51DA               	movf	(_prec+1)& (0+255),w,b
  2471  000BC2  E106               	bnz	u4001
  2472  000BC4  05D9               	decf	_prec& (0+255),w,b
  2473  000BC6  B0D8               	btfsc	status,0,c
  2474  000BC8  EFE8  F005         	goto	u4001
  2475  000BCC  EFEA  F005         	goto	u4000
  2476  000BD0                     u4001:
  2477  000BD0  EFF0  F005         	goto	l897
  2478  000BD4                     u4000:
  2479  000BD4                     l3549:
  2480                           
  2481                           ; BSR set to: 0
  2482  000BD4  0E00               	movlw	0
  2483  000BD6  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  2484  000BD8  0E06               	movlw	6
  2485  000BDA  6F7B               	movwf	efgtoa@p& (0+255),b
  2486  000BDC  EFFF  F005         	goto	l3557
  2487  000BE0                     l897:
  2488                           
  2489                           ; BSR set to: 0
  2490  000BE0  C0D9  F07B         	movff	_prec,efgtoa@p
  2491  000BE4  C0DA  F07C         	movff	_prec+1,efgtoa@p+1
  2492  000BE8  EFFF  F005         	goto	l3557
  2493  000BEC                     l3551:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2497  000BEC  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  2498  000BEE  EFFB  F005         	goto	u4011
  2499  000BF2  EFFD  F005         	goto	u4010
  2500  000BF6                     u4011:
  2501  000BF6  EFEA  F005         	goto	l3549
  2502  000BFA                     u4010:
  2503  000BFA  EFF0  F005         	goto	l897
  2504  000BFE                     l3557:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2508  000BFE  0E67               	movlw	103
  2509  000C00  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2510  000C02  A4D8               	btfss	status,2,c
  2511  000C04  EF06  F006         	goto	u4021
  2512  000C08  EF08  F006         	goto	u4020
  2513  000C0C                     u4021:
  2514  000C0C  EF37  F006         	goto	l3567
  2515  000C10                     u4020:
  2516  000C10                     
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2519  000C10  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  2520  000C12  EF16  F006         	goto	u4030
  2521  000C16  0EFC               	movlw	252
  2522  000C18  5D8F               	subwf	efgtoa@e& (0+255),w,b
  2523  000C1A  0EFF               	movlw	255
  2524  000C1C  5990               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2525  000C1E  A0D8               	btfss	status,0,c
  2526  000C20  EF14  F006         	goto	u4031
  2527  000C24  EF16  F006         	goto	u4030
  2528  000C28                     u4031:
  2529  000C28  EF35  F006         	goto	l3565
  2530  000C2C                     u4030:
  2531  000C2C                     
  2532                           ; BSR set to: 0
  2533  000C2C  0EFF               	movlw	255
  2534  000C2E  6F60               	movwf	??_efgtoa& (0+255),b
  2535  000C30  0EFF               	movlw	255
  2536  000C32  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2537  000C34  C07B  F062         	movff	efgtoa@p,??_efgtoa+2
  2538  000C38  C07C  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2539  000C3C  5160               	movf	??_efgtoa& (0+255),w,b
  2540  000C3E  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2541  000C40  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2542  000C42  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2543  000C44  518F               	movf	efgtoa@e& (0+255),w,b
  2544  000C46  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2545  000C48  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2546  000C4A  0A80               	xorlw	128
  2547  000C4C  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2548  000C4E  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  2549  000C50  0A80               	xorlw	128
  2550  000C52  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2551  000C54  A0D8               	btfss	status,0,c
  2552  000C56  EF2F  F006         	goto	u4041
  2553  000C5A  EF31  F006         	goto	u4040
  2554  000C5E                     u4041:
  2555  000C5E  EF35  F006         	goto	l3565
  2556  000C62                     u4040:
  2557  000C62                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2560  000C62  0E66               	movlw	102
  2561  000C64  6F7F               	movwf	efgtoa@nmode& (0+255),b
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2564  000C66  EF37  F006         	goto	l3567
  2565  000C6A                     l3565:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2569  000C6A  0E65               	movlw	101
  2570  000C6C  6F7F               	movwf	efgtoa@nmode& (0+255),b
  2571  000C6E                     l3567:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2575  000C6E  C07B  F071         	movff	efgtoa@p,efgtoa@m
  2576  000C72  C07C  F072         	movff	efgtoa@p+1,efgtoa@m+1
  2577  000C76                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2580  000C76  0E67               	movlw	103
  2581  000C78  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2582  000C7A  A4D8               	btfss	status,2,c
  2583  000C7C  EF42  F006         	goto	u4051
  2584  000C80  EF44  F006         	goto	u4050
  2585  000C84                     u4051:
  2586  000C84  EF54  F006         	goto	l3575
  2587  000C88                     u4050:
  2588  000C88                     
  2589                           ; BSR set to: 0
  2590  000C88  0E66               	movlw	102
  2591  000C8A  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2592  000C8C  A4D8               	btfss	status,2,c
  2593  000C8E  EF4B  F006         	goto	u4061
  2594  000C92  EF4D  F006         	goto	u4060
  2595  000C96                     u4061:
  2596  000C96  EF56  F006         	goto	l3577
  2597  000C9A                     u4060:
  2598  000C9A                     
  2599                           ; BSR set to: 0
  2600  000C9A  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2601  000C9C  EF54  F006         	goto	u4070
  2602  000CA0  EF52  F006         	goto	u4071
  2603  000CA4                     u4071:
  2604  000CA4  EF56  F006         	goto	l3577
  2605  000CA8                     u4070:
  2606  000CA8                     l3575:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2610  000CA8  4B71               	infsnz	efgtoa@m& (0+255),f,b
  2611  000CAA  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  2612  000CAC                     l3577:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2616  000CAC  0E66               	movlw	102
  2617  000CAE  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2618  000CB0  A4D8               	btfss	status,2,c
  2619  000CB2  EF5D  F006         	goto	u4081
  2620  000CB6  EF5F  F006         	goto	u4080
  2621  000CBA                     u4081:
  2622  000CBA  EF7F  F006         	goto	l3587
  2623  000CBE                     u4080:
  2624  000CBE                     
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2627  000CBE  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2628  000CC0  EF66  F006         	goto	u4090
  2629  000CC4  EF64  F006         	goto	u4091
  2630  000CC8                     u4091:
  2631  000CC8  EF72  F006         	goto	l3583
  2632  000CCC                     u4090:
  2633  000CCC                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2636  000CCC  0E00               	movlw	0
  2637  000CCE  6F93               	movwf	efgtoa@u& (0+255),b
  2638  000CD0  0E00               	movlw	0
  2639  000CD2  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  2640  000CD4  0E80               	movlw	128
  2641  000CD6  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  2642  000CD8  0E3F               	movlw	63
  2643  000CDA  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2646  000CDC  0E00               	movlw	0
  2647  000CDE  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2648  000CE0  0E00               	movlw	0
  2649  000CE2  6F8F               	movwf	efgtoa@e& (0+255),b
  2650  000CE4                     l3583:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2654  000CE4  0E67               	movlw	103
  2655  000CE6  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2656  000CE8  B4D8               	btfsc	status,2,c
  2657  000CEA  EF79  F006         	goto	u4101
  2658  000CEE  EF7B  F006         	goto	u4100
  2659  000CF2                     u4101:
  2660  000CF2  EF7F  F006         	goto	l3587
  2661  000CF6                     u4100:
  2662  000CF6                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2665  000CF6  518F               	movf	efgtoa@e& (0+255),w,b
  2666  000CF8  2771               	addwf	efgtoa@m& (0+255),f,b
  2667  000CFA  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  2668  000CFC  2372               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2669  000CFE                     l3587:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2673  000CFE  0E00               	movlw	0
  2674  000D00  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  2675  000D02  0E00               	movlw	0
  2676  000D04  6F89               	movwf	efgtoa@i& (0+255),b
  2677  000D06                     
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2680  000D06  C08B  F081         	movff	efgtoa@g,efgtoa@h
  2681  000D0A  C08C  F082         	movff	efgtoa@g+1,efgtoa@h+1
  2682  000D0E  C08D  F083         	movff	efgtoa@g+2,efgtoa@h+2
  2683  000D12  C08E  F084         	movff	efgtoa@g+3,efgtoa@h+3
  2684  000D16                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2687  000D16  C093  F073         	movff	efgtoa@u,efgtoa@ou
  2688  000D1A  C094  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2689  000D1E  C095  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2690  000D22  C096  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2693  000D26  EF10  F007         	goto	l3601
  2694  000D2A                     l3593:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2698  000D2A  C081  F028         	movff	efgtoa@h,___fldiv@b
  2699  000D2E  C082  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2700  000D32  C083  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2701  000D36  C084  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2702  000D3A  C093  F02C         	movff	efgtoa@u,___fldiv@a
  2703  000D3E  C094  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2704  000D42  C095  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2705  000D46  C096  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2706  000D4A  ECA9  F010         	call	___fldiv	;wreg free
  2707  000D4E  C028  F041         	movff	?___fldiv,floorf@x
  2708  000D52  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2709  000D56  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2710  000D5A  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2711  000D5E  EC76  F012         	call	_floorf	;wreg free
  2712  000D62  C041  F085         	movff	?_floorf,efgtoa@l
  2713  000D66  C042  F086         	movff	?_floorf+1,efgtoa@l+1
  2714  000D6A  C043  F087         	movff	?_floorf+2,efgtoa@l+2
  2715  000D6E  C044  F088         	movff	?_floorf+3,efgtoa@l+3
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2718  000D72  C085  F001         	movff	efgtoa@l,___fltol@f1
  2719  000D76  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2720  000D7A  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2721  000D7E  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2722  000D82  EC8D  F015         	call	___fltol	;wreg free
  2723  000D86  C001  F077         	movff	?___fltol,efgtoa@d
  2724  000D8A  C002  F078         	movff	?___fltol+1,efgtoa@d+1
  2725  000D8E                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2727  000D8E  C081  F028         	movff	efgtoa@h,___flsub@b
  2728  000D92  C082  F029         	movff	efgtoa@h+1,___flsub@b+1
  2729  000D96  C083  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2730  000D9A  C084  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2731  000D9E  C093  F013         	movff	efgtoa@u,___flmul@a
  2732  000DA2  C094  F014         	movff	efgtoa@u+1,___flmul@a+1
  2733  000DA6  C095  F015         	movff	efgtoa@u+2,___flmul@a+2
  2734  000DAA  C096  F016         	movff	efgtoa@u+3,___flmul@a+3
  2735  000DAE  C085  F00F         	movff	efgtoa@l,___flmul@b
  2736  000DB2  C086  F010         	movff	efgtoa@l+1,___flmul@b+1
  2737  000DB6  C087  F011         	movff	efgtoa@l+2,___flmul@b+2
  2738  000DBA  C088  F012         	movff	efgtoa@l+3,___flmul@b+3
  2739  000DBE  EC94  F00E         	call	___flmul	;wreg free
  2740  000DC2  C00F  F02C         	movff	?___flmul,___flsub@a
  2741  000DC6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2742  000DCA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2743  000DCE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2744  000DD2  ECA9  F01B         	call	___flsub	;wreg free
  2745  000DD6  C028  F081         	movff	?___flsub,efgtoa@h
  2746  000DDA  C029  F082         	movff	?___flsub+1,efgtoa@h+1
  2747  000DDE  C02A  F083         	movff	?___flsub+2,efgtoa@h+2
  2748  000DE2  C02B  F084         	movff	?___flsub+3,efgtoa@h+3
  2749  000DE6                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2751  000DE6  C093  F028         	movff	efgtoa@u,___fldiv@b
  2752  000DEA  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2753  000DEE  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2754  000DF2  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2755  000DF6  0E00               	movlw	0
  2756  000DF8  6E2C               	movwf	___fldiv@a^0,c
  2757  000DFA  0E00               	movlw	0
  2758  000DFC  6E2D               	movwf	(___fldiv@a+1)^0,c
  2759  000DFE  0E20               	movlw	32
  2760  000E00  6E2E               	movwf	(___fldiv@a+2)^0,c
  2761  000E02  0E41               	movlw	65
  2762  000E04  6E2F               	movwf	(___fldiv@a+3)^0,c
  2763  000E06  ECA9  F010         	call	___fldiv	;wreg free
  2764  000E0A  C028  F093         	movff	?___fldiv,efgtoa@u
  2765  000E0E  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  2766  000E12  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  2767  000E16  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  2768  000E1A                     
  2769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2770  000E1A  0100               	movlb	0	; () banked
  2771  000E1C  4B89               	infsnz	efgtoa@i& (0+255),f,b
  2772  000E1E  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  2773  000E20                     l3601:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2777  000E20  5171               	movf	efgtoa@m& (0+255),w,b
  2778  000E22  5D89               	subwf	efgtoa@i& (0+255),w,b
  2779  000E24  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  2780  000E26  0A80               	xorlw	128
  2781  000E28  6F60               	movwf	??_efgtoa& (0+255),b
  2782  000E2A  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  2783  000E2C  0A80               	xorlw	128
  2784  000E2E  5960               	subwfb	??_efgtoa& (0+255),w,b
  2785  000E30  A0D8               	btfss	status,0,c
  2786  000E32  EF1D  F007         	goto	u4111
  2787  000E36  EF1F  F007         	goto	u4110
  2788  000E3A                     u4111:
  2789  000E3A  EF95  F006         	goto	l3593
  2790  000E3E                     u4110:
  2791  000E3E                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2794  000E3E  C093  F00F         	movff	efgtoa@u,___flmul@b
  2795  000E42  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  2796  000E46  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  2797  000E4A  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  2798  000E4E  0E00               	movlw	0
  2799  000E50  6E13               	movwf	___flmul@a^0,c
  2800  000E52  0E00               	movlw	0
  2801  000E54  6E14               	movwf	(___flmul@a+1)^0,c
  2802  000E56  0EA0               	movlw	160
  2803  000E58  6E15               	movwf	(___flmul@a+2)^0,c
  2804  000E5A  0E40               	movlw	64
  2805  000E5C  6E16               	movwf	(___flmul@a+3)^0,c
  2806  000E5E  EC94  F00E         	call	___flmul	;wreg free
  2807  000E62  C00F  F085         	movff	?___flmul,efgtoa@l
  2808  000E66  C010  F086         	movff	?___flmul+1,efgtoa@l+1
  2809  000E6A  C011  F087         	movff	?___flmul+2,efgtoa@l+2
  2810  000E6E  C012  F088         	movff	?___flmul+3,efgtoa@l+3
  2811  000E72                     
  2812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2813  000E72  C081  F028         	movff	efgtoa@h,___flge@ff1
  2814  000E76  C082  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2815  000E7A  C083  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2816  000E7E  C084  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2817  000E82  C085  F02C         	movff	efgtoa@l,___flge@ff2
  2818  000E86  C086  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2819  000E8A  C087  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2820  000E8E  C088  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2821  000E92  EC10  F016         	call	___flge	;wreg free
  2822  000E96  B0D8               	btfsc	status,0,c
  2823  000E98  EF50  F007         	goto	u4121
  2824  000E9C  EF52  F007         	goto	u4120
  2825  000EA0                     u4121:
  2826  000EA0  EF5D  F007         	goto	l3609
  2827  000EA4                     u4120:
  2828  000EA4                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2830  000EA4  0E00               	movlw	0
  2831  000EA6  0100               	movlb	0	; () banked
  2832  000EA8  6F85               	movwf	efgtoa@l& (0+255),b
  2833  000EAA  0E00               	movlw	0
  2834  000EAC  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  2835  000EAE  0E00               	movlw	0
  2836  000EB0  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  2837  000EB2  0E00               	movlw	0
  2838  000EB4  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2841  000EB6  EF86  F007         	goto	l3615
  2842  000EBA                     l3609:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2845  000EBA  C081  F001         	movff	efgtoa@h,___fleq@ff1
  2846  000EBE  C082  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2847  000EC2  C083  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2848  000EC6  C084  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2849  000ECA  C085  F005         	movff	efgtoa@l,___fleq@ff2
  2850  000ECE  C086  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2851  000ED2  C087  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2852  000ED6  C088  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2853  000EDA  EC54  F01A         	call	___fleq	;wreg free
  2854  000EDE  A0D8               	btfss	status,0,c
  2855  000EE0  EF74  F007         	goto	u4131
  2856  000EE4  EF76  F007         	goto	u4130
  2857  000EE8                     u4131:
  2858  000EE8  EF86  F007         	goto	l3615
  2859  000EEC                     u4130:
  2860  000EEC  0100               	movlb	0	; () banked
  2861  000EEE  B177               	btfsc	efgtoa@d& (0+255),0,b
  2862  000EF0  EF7C  F007         	goto	u4141
  2863  000EF4  EF7E  F007         	goto	u4140
  2864  000EF8                     u4141:
  2865  000EF8  EF86  F007         	goto	l3615
  2866  000EFC                     u4140:
  2867  000EFC                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2870  000EFC  0E00               	movlw	0
  2871  000EFE  6F85               	movwf	efgtoa@l& (0+255),b
  2872  000F00  0E00               	movlw	0
  2873  000F02  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  2874  000F04  0E00               	movlw	0
  2875  000F06  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  2876  000F08  0E00               	movlw	0
  2877  000F0A  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  2878  000F0C                     l3615:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2881  000F0C  C08B  F001         	movff	efgtoa@g,___fladd@b
  2882  000F10  C08C  F002         	movff	efgtoa@g+1,___fladd@b+1
  2883  000F14  C08D  F003         	movff	efgtoa@g+2,___fladd@b+2
  2884  000F18  C08E  F004         	movff	efgtoa@g+3,___fladd@b+3
  2885  000F1C  C085  F005         	movff	efgtoa@l,___fladd@a
  2886  000F20  C086  F006         	movff	efgtoa@l+1,___fladd@a+1
  2887  000F24  C087  F007         	movff	efgtoa@l+2,___fladd@a+2
  2888  000F28  C088  F008         	movff	efgtoa@l+3,___fladd@a+3
  2889  000F2C  EC19  F00A         	call	___fladd	;wreg free
  2890  000F30  C001  F081         	movff	?___fladd,efgtoa@h
  2891  000F34  C002  F082         	movff	?___fladd+1,efgtoa@h+1
  2892  000F38  C003  F083         	movff	?___fladd+2,efgtoa@h+2
  2893  000F3C  C004  F084         	movff	?___fladd+3,efgtoa@h+3
  2894  000F40                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2896  000F40  C081  F028         	movff	efgtoa@h,___flge@ff1
  2897  000F44  C082  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2898  000F48  C083  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2899  000F4C  C084  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2900  000F50  0E00               	movlw	0
  2901  000F52  6E13               	movwf	___flmul@a^0,c
  2902  000F54  0E00               	movlw	0
  2903  000F56  6E14               	movwf	(___flmul@a+1)^0,c
  2904  000F58  0E20               	movlw	32
  2905  000F5A  6E15               	movwf	(___flmul@a+2)^0,c
  2906  000F5C  0E41               	movlw	65
  2907  000F5E  6E16               	movwf	(___flmul@a+3)^0,c
  2908  000F60  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2909  000F64  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2910  000F68  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2911  000F6C  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2912  000F70  EC94  F00E         	call	___flmul	;wreg free
  2913  000F74  C00F  F02C         	movff	?___flmul,___flge@ff2
  2914  000F78  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2915  000F7C  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2916  000F80  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2917  000F84  EC10  F016         	call	___flge	;wreg free
  2918  000F88  A0D8               	btfss	status,0,c
  2919  000F8A  EFC9  F007         	goto	u4151
  2920  000F8E  EFCB  F007         	goto	u4150
  2921  000F92                     u4151:
  2922  000F92  EFF4  F007         	goto	l3627
  2923  000F96                     u4150:
  2924  000F96                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  2926  000F96  0100               	movlb	0	; () banked
  2927  000F98  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  2928  000F9A  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  2929  000F9C                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  2932  000F9C  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2933  000FA0  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2934  000FA4  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2935  000FA8  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2936  000FAC  0E00               	movlw	0
  2937  000FAE  6E13               	movwf	___flmul@a^0,c
  2938  000FB0  0E00               	movlw	0
  2939  000FB2  6E14               	movwf	(___flmul@a+1)^0,c
  2940  000FB4  0E20               	movlw	32
  2941  000FB6  6E15               	movwf	(___flmul@a+2)^0,c
  2942  000FB8  0E41               	movlw	65
  2943  000FBA  6E16               	movwf	(___flmul@a+3)^0,c
  2944  000FBC  EC94  F00E         	call	___flmul	;wreg free
  2945  000FC0  C00F  F073         	movff	?___flmul,efgtoa@ou
  2946  000FC4  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2947  000FC8  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2948  000FCC  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2949  000FD0                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  2951  000FD0  0E66               	movlw	102
  2952  000FD2  0100               	movlb	0	; () banked
  2953  000FD4  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2954  000FD6  A4D8               	btfss	status,2,c
  2955  000FD8  EFF0  F007         	goto	u4161
  2956  000FDC  EFF2  F007         	goto	u4160
  2957  000FE0                     u4161:
  2958  000FE0  EFF4  F007         	goto	l3627
  2959  000FE4                     u4160:
  2960  000FE4                     
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  2963  000FE4  4B71               	infsnz	efgtoa@m& (0+255),f,b
  2964  000FE6  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  2965  000FE8                     l3627:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  2968  000FE8  C073  F093         	movff	efgtoa@ou,efgtoa@u
  2969  000FEC  C074  F094         	movff	efgtoa@ou+1,efgtoa@u+1
  2970  000FF0  C075  F095         	movff	efgtoa@ou+2,efgtoa@u+2
  2971  000FF4  C076  F096         	movff	efgtoa@ou+3,efgtoa@u+3
  2972  000FF8                     
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  2974  000FF8  0E65               	movlw	101
  2975  000FFA  0100               	movlb	0	; () banked
  2976  000FFC  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2977  000FFE  B4D8               	btfsc	status,2,c
  2978  001000  EF04  F008         	goto	u4171
  2979  001004  EF06  F008         	goto	u4170
  2980  001008                     u4171:
  2981  001008  EF0C  F008         	goto	l3633
  2982  00100C                     u4170:
  2983  00100C                     
  2984                           ; BSR set to: 0
  2985  00100C  C08F  F06F         	movff	efgtoa@e,efgtoa@ne
  2986  001010  C090  F070         	movff	efgtoa@e+1,efgtoa@ne+1
  2987  001014  EF10  F008         	goto	l925
  2988  001018                     l3633:
  2989                           
  2990                           ; BSR set to: 0
  2991  001018  0E00               	movlw	0
  2992  00101A  6F70               	movwf	(efgtoa@ne+1)& (0+255),b
  2993  00101C  0E00               	movlw	0
  2994  00101E  6F6F               	movwf	efgtoa@ne& (0+255),b
  2995  001020                     l925:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  2999  001020  0E00               	movlw	0
  3000  001022  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  3001  001024  0E00               	movlw	0
  3002  001026  6F6D               	movwf	efgtoa@pp& (0+255),b
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3005  001028  0E00               	movlw	0
  3006  00102A  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
  3007  00102C  0E00               	movlw	0
  3008  00102E  6F6B               	movwf	efgtoa@t& (0+255),b
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3011  001030  0E00               	movlw	0
  3012  001032  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3013  001034  0E00               	movlw	0
  3014  001036  6F89               	movwf	efgtoa@i& (0+255),b
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3017  001038  EF0B  F009         	goto	l3683
  3018  00103C                     l3635:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3022  00103C  C081  F028         	movff	efgtoa@h,___fldiv@b
  3023  001040  C082  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3024  001044  C083  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3025  001048  C084  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3026  00104C  C093  F02C         	movff	efgtoa@u,___fldiv@a
  3027  001050  C094  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3028  001054  C095  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3029  001058  C096  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3030  00105C  ECA9  F010         	call	___fldiv	;wreg free
  3031  001060  C028  F041         	movff	?___fldiv,floorf@x
  3032  001064  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3033  001068  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3034  00106C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3035  001070  EC76  F012         	call	_floorf	;wreg free
  3036  001074  C041  F085         	movff	?_floorf,efgtoa@l
  3037  001078  C042  F086         	movff	?_floorf+1,efgtoa@l+1
  3038  00107C  C043  F087         	movff	?_floorf+2,efgtoa@l+2
  3039  001080  C044  F088         	movff	?_floorf+3,efgtoa@l+3
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3042  001084  C085  F001         	movff	efgtoa@l,___fltol@f1
  3043  001088  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3044  00108C  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3045  001090  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3046  001094  EC8D  F015         	call	___fltol	;wreg free
  3047  001098  C001  F077         	movff	?___fltol,efgtoa@d
  3048  00109C  C002  F078         	movff	?___fltol+1,efgtoa@d+1
  3049  0010A0                     
  3050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3051  0010A0  0100               	movlb	0	; () banked
  3052  0010A2  B9DB               	btfsc	_flags& (0+255),4,b
  3053  0010A4  EF56  F008         	goto	u4181
  3054  0010A8  EF58  F008         	goto	u4180
  3055  0010AC                     u4181:
  3056  0010AC  EF75  F008         	goto	l3647
  3057  0010B0                     u4180:
  3058  0010B0                     
  3059                           ; BSR set to: 0
  3060  0010B0  5177               	movf	efgtoa@d& (0+255),w,b
  3061  0010B2  1178               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3062  0010B4  A4D8               	btfss	status,2,c
  3063  0010B6  EF5F  F008         	goto	u4191
  3064  0010BA  EF61  F008         	goto	u4190
  3065  0010BE                     u4191:
  3066  0010BE  EF75  F008         	goto	l3647
  3067  0010C2                     u4190:
  3068  0010C2                     
  3069                           ; BSR set to: 0
  3070  0010C2  0E67               	movlw	103
  3071  0010C4  1980               	xorwf	efgtoa@mode& (0+255),w,b
  3072  0010C6  A4D8               	btfss	status,2,c
  3073  0010C8  EF68  F008         	goto	u4201
  3074  0010CC  EF6A  F008         	goto	u4200
  3075  0010D0                     u4201:
  3076  0010D0  EF75  F008         	goto	l3647
  3077  0010D4                     u4200:
  3078  0010D4                     
  3079                           ; BSR set to: 0
  3080  0010D4  BF70               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3081  0010D6  EF71  F008         	goto	u4210
  3082  0010DA  EF6F  F008         	goto	u4211
  3083  0010DE                     u4211:
  3084  0010DE  EF75  F008         	goto	l3647
  3085  0010E2                     u4210:
  3086  0010E2                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3089  0010E2  4B6B               	infsnz	efgtoa@t& (0+255),f,b
  3090  0010E4  2B6C               	incf	(efgtoa@t+1)& (0+255),f,b
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3093  0010E6  EFBF  F008         	goto	l3675
  3094  0010EA                     l3647:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3098  0010EA  516D               	movf	efgtoa@pp& (0+255),w,b
  3099  0010EC  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3100  0010EE  A4D8               	btfss	status,2,c
  3101  0010F0  EF7C  F008         	goto	u4221
  3102  0010F4  EF7E  F008         	goto	u4220
  3103  0010F8                     u4221:
  3104  0010F8  EFA8  F008         	goto	l3667
  3105  0010FC                     u4220:
  3106  0010FC                     
  3107                           ; BSR set to: 0
  3108  0010FC  BF70               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3109  0010FE  EF85  F008         	goto	u4230
  3110  001102  EF83  F008         	goto	u4231
  3111  001106                     u4231:
  3112  001106  EFA8  F008         	goto	l3667
  3113  00110A                     u4230:
  3114  00110A                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3117  00110A  0E00               	movlw	low _dbuf
  3118  00110C  2591               	addwf	efgtoa@n& (0+255),w,b
  3119  00110E  6ED9               	movwf	fsr2l,c
  3120  001110  0E01               	movlw	high _dbuf
  3121  001112  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122  001114  6EDA               	movwf	fsr2h,c
  3123  001116  0E2E               	movlw	46
  3124  001118  6EDF               	movwf	indf2,c
  3125  00111A                     
  3126                           ; BSR set to: 0
  3127  00111A  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3128  00111C  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3129  00111E                     
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3132  00111E  077D               	decf	efgtoa@w& (0+255),f,b
  3133  001120  A0D8               	btfss	status,0,c
  3134  001122  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3135  001124                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3138  001124  0E00               	movlw	0
  3139  001126  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  3140  001128  0E01               	movlw	1
  3141  00112A  6F6D               	movwf	efgtoa@pp& (0+255),b
  3142  00112C  EFA8  F008         	goto	l3667
  3143  001130                     l3659:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3147  001130  0E00               	movlw	low _dbuf
  3148  001132  2591               	addwf	efgtoa@n& (0+255),w,b
  3149  001134  6ED9               	movwf	fsr2l,c
  3150  001136  0E01               	movlw	high _dbuf
  3151  001138  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3152  00113A  6EDA               	movwf	fsr2h,c
  3153  00113C  0E30               	movlw	48
  3154  00113E  6EDF               	movwf	indf2,c
  3155  001140                     
  3156                           ; BSR set to: 0
  3157  001140  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3158  001142  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3159  001144                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3162  001144  077D               	decf	efgtoa@w& (0+255),f,b
  3163  001146  A0D8               	btfss	status,0,c
  3164  001148  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3165  00114A                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3168  00114A  076B               	decf	efgtoa@t& (0+255),f,b
  3169  00114C  A0D8               	btfss	status,0,c
  3170  00114E  076C               	decf	(efgtoa@t+1)& (0+255),f,b
  3171  001150                     l3667:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3175  001150  516B               	movf	efgtoa@t& (0+255),w,b
  3176  001152  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3177  001154  A4D8               	btfss	status,2,c
  3178  001156  EFAF  F008         	goto	u4241
  3179  00115A  EFB1  F008         	goto	u4240
  3180  00115E                     u4241:
  3181  00115E  EF98  F008         	goto	l3659
  3182  001162                     u4240:
  3183  001162                     
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3186  001162  0E00               	movlw	low _dbuf
  3187  001164  2591               	addwf	efgtoa@n& (0+255),w,b
  3188  001166  6ED9               	movwf	fsr2l,c
  3189  001168  0E01               	movlw	high _dbuf
  3190  00116A  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3191  00116C  6EDA               	movwf	fsr2h,c
  3192  00116E  5177               	movf	efgtoa@d& (0+255),w,b
  3193  001170  0F30               	addlw	48
  3194  001172  6EDF               	movwf	indf2,c
  3195  001174                     
  3196                           ; BSR set to: 0
  3197  001174  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3198  001176  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3199  001178                     
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3202  001178  077D               	decf	efgtoa@w& (0+255),f,b
  3203  00117A  A0D8               	btfss	status,0,c
  3204  00117C  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3205  00117E                     l3675:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3209  00117E  C081  F028         	movff	efgtoa@h,___flsub@b
  3210  001182  C082  F029         	movff	efgtoa@h+1,___flsub@b+1
  3211  001186  C083  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3212  00118A  C084  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3213  00118E  C093  F013         	movff	efgtoa@u,___flmul@a
  3214  001192  C094  F014         	movff	efgtoa@u+1,___flmul@a+1
  3215  001196  C095  F015         	movff	efgtoa@u+2,___flmul@a+2
  3216  00119A  C096  F016         	movff	efgtoa@u+3,___flmul@a+3
  3217  00119E  C085  F00F         	movff	efgtoa@l,___flmul@b
  3218  0011A2  C086  F010         	movff	efgtoa@l+1,___flmul@b+1
  3219  0011A6  C087  F011         	movff	efgtoa@l+2,___flmul@b+2
  3220  0011AA  C088  F012         	movff	efgtoa@l+3,___flmul@b+3
  3221  0011AE  EC94  F00E         	call	___flmul	;wreg free
  3222  0011B2  C00F  F02C         	movff	?___flmul,___flsub@a
  3223  0011B6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3224  0011BA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3225  0011BE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3226  0011C2  ECA9  F01B         	call	___flsub	;wreg free
  3227  0011C6  C028  F081         	movff	?___flsub,efgtoa@h
  3228  0011CA  C029  F082         	movff	?___flsub+1,efgtoa@h+1
  3229  0011CE  C02A  F083         	movff	?___flsub+2,efgtoa@h+2
  3230  0011D2  C02B  F084         	movff	?___flsub+3,efgtoa@h+3
  3231  0011D6                     
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3233  0011D6  C093  F028         	movff	efgtoa@u,___fldiv@b
  3234  0011DA  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3235  0011DE  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3236  0011E2  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3237  0011E6  0E00               	movlw	0
  3238  0011E8  6E2C               	movwf	___fldiv@a^0,c
  3239  0011EA  0E00               	movlw	0
  3240  0011EC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3241  0011EE  0E20               	movlw	32
  3242  0011F0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3243  0011F2  0E41               	movlw	65
  3244  0011F4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3245  0011F6  ECA9  F010         	call	___fldiv	;wreg free
  3246  0011FA  C028  F093         	movff	?___fldiv,efgtoa@u
  3247  0011FE  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  3248  001202  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  3249  001206  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  3250  00120A                     
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3252  00120A  0100               	movlb	0	; () banked
  3253  00120C  076F               	decf	efgtoa@ne& (0+255),f,b
  3254  00120E  A0D8               	btfss	status,0,c
  3255  001210  0770               	decf	(efgtoa@ne+1)& (0+255),f,b
  3256  001212                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3259  001212  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3260  001214  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3261  001216                     l3683:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3265  001216  5171               	movf	efgtoa@m& (0+255),w,b
  3266  001218  5D89               	subwf	efgtoa@i& (0+255),w,b
  3267  00121A  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3268  00121C  0A80               	xorlw	128
  3269  00121E  6F60               	movwf	??_efgtoa& (0+255),b
  3270  001220  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  3271  001222  0A80               	xorlw	128
  3272  001224  5960               	subwfb	??_efgtoa& (0+255),w,b
  3273  001226  B0D8               	btfsc	status,0,c
  3274  001228  EF18  F009         	goto	u4251
  3275  00122C  EF1A  F009         	goto	u4250
  3276  001230                     u4251:
  3277  001230  EF28  F009         	goto	l3687
  3278  001234                     u4250:
  3279  001234                     
  3280                           ; BSR set to: 0
  3281  001234  BF92               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3282  001236  EF26  F009         	goto	u4261
  3283  00123A  5192               	movf	(efgtoa@n+1)& (0+255),w,b
  3284  00123C  E109               	bnz	u4260
  3285  00123E  0E4B               	movlw	75
  3286  001240  5D91               	subwf	efgtoa@n& (0+255),w,b
  3287  001242  A0D8               	btfss	status,0,c
  3288  001244  EF26  F009         	goto	u4261
  3289  001248  EF28  F009         	goto	u4260
  3290  00124C                     u4261:
  3291  00124C  EF1E  F008         	goto	l3635
  3292  001250                     u4260:
  3293  001250                     l3687:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3297  001250  516D               	movf	efgtoa@pp& (0+255),w,b
  3298  001252  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3299  001254  A4D8               	btfss	status,2,c
  3300  001256  EF2F  F009         	goto	u4271
  3301  00125A  EF31  F009         	goto	u4270
  3302  00125E                     u4271:
  3303  00125E  EF42  F009         	goto	l3695
  3304  001262                     u4270:
  3305  001262                     
  3306                           ; BSR set to: 0
  3307  001262  A9DB               	btfss	_flags& (0+255),4,b
  3308  001264  EF36  F009         	goto	u4281
  3309  001268  EF38  F009         	goto	u4280
  3310  00126C                     u4281:
  3311  00126C  EF42  F009         	goto	l3695
  3312  001270                     u4280:
  3313  001270                     
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3316  001270  0E00               	movlw	low _dbuf
  3317  001272  2591               	addwf	efgtoa@n& (0+255),w,b
  3318  001274  6ED9               	movwf	fsr2l,c
  3319  001276  0E01               	movlw	high _dbuf
  3320  001278  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3321  00127A  6EDA               	movwf	fsr2h,c
  3322  00127C  0E2E               	movlw	46
  3323  00127E  6EDF               	movwf	indf2,c
  3324  001280                     
  3325                           ; BSR set to: 0
  3326  001280  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3327  001282  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3328  001284                     l3695:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3332  001284  0E00               	movlw	low _dbuf
  3333  001286  2591               	addwf	efgtoa@n& (0+255),w,b
  3334  001288  6ED9               	movwf	fsr2l,c
  3335  00128A  0E01               	movlw	high _dbuf
  3336  00128C  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3337  00128E  6EDA               	movwf	fsr2h,c
  3338  001290  0E00               	movlw	0
  3339  001292  6EDF               	movwf	indf2,c
  3340  001294                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3343  001294  0E65               	movlw	101
  3344  001296  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  3345  001298  A4D8               	btfss	status,2,c
  3346  00129A  EF51  F009         	goto	u4291
  3347  00129E  EF53  F009         	goto	u4290
  3348  0012A2                     u4291:
  3349  0012A2  EFBA  F004         	goto	l3497
  3350  0012A6                     u4290:
  3351  0012A6                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3354  0012A6  0E00               	movlw	0
  3355  0012A8  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3356  0012AA  0E4F               	movlw	79
  3357  0012AC  6F89               	movwf	efgtoa@i& (0+255),b
  3358  0012AE                     
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3361  0012AE  0E00               	movlw	low _dbuf
  3362  0012B0  2589               	addwf	efgtoa@i& (0+255),w,b
  3363  0012B2  6ED9               	movwf	fsr2l,c
  3364  0012B4  0E01               	movlw	high _dbuf
  3365  0012B6  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3366  0012B8  6EDA               	movwf	fsr2h,c
  3367  0012BA  0E00               	movlw	0
  3368  0012BC  6EDF               	movwf	indf2,c
  3369  0012BE                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3372  0012BE  0E00               	movlw	0
  3373  0012C0  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  3374  0012C2  0E00               	movlw	0
  3375  0012C4  6F79               	movwf	efgtoa@sign& (0+255),b
  3376  0012C6                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3379  0012C6  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3380  0012C8  EF6A  F009         	goto	u4300
  3381  0012CC  EF68  F009         	goto	u4301
  3382  0012D0                     u4301:
  3383  0012D0  EF72  F009         	goto	l3711
  3384  0012D4                     u4300:
  3385  0012D4                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3388  0012D4  0E00               	movlw	0
  3389  0012D6  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  3390  0012D8  0E01               	movlw	1
  3391  0012DA  6F79               	movwf	efgtoa@sign& (0+255),b
  3392  0012DC                     
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3395  0012DC  6D8F               	negf	efgtoa@e& (0+255),b
  3396  0012DE  1F90               	comf	(efgtoa@e+1)& (0+255),f,b
  3397  0012E0  B0D8               	btfsc	status,0,c
  3398  0012E2  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3399  0012E4                     l3711:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3403  0012E4  0E00               	movlw	0
  3404  0012E6  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  3405  0012E8  0E02               	movlw	2
  3406  0012EA  6F7B               	movwf	efgtoa@p& (0+255),b
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3409  0012EC  EFA3  F009         	goto	l3723
  3410  0012F0                     l3713:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3414  0012F0  0789               	decf	efgtoa@i& (0+255),f,b
  3415  0012F2  A0D8               	btfss	status,0,c
  3416  0012F4  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3417  0012F6                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3420  0012F6  0E00               	movlw	low _dbuf
  3421  0012F8  2589               	addwf	efgtoa@i& (0+255),w,b
  3422  0012FA  6ED9               	movwf	fsr2l,c
  3423  0012FC  0E01               	movlw	high _dbuf
  3424  0012FE  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3425  001300  6EDA               	movwf	fsr2h,c
  3426  001302  C08F  F001         	movff	efgtoa@e,___awmod@dividend
  3427  001306  C090  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3428  00130A  0E00               	movlw	0
  3429  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3430  00130E  0E0A               	movlw	10
  3431  001310  6E03               	movwf	___awmod@divisor^0,c
  3432  001312  ECFC  F019         	call	___awmod	;wreg free
  3433  001316  5001               	movf	?___awmod^0,w,c
  3434  001318  0F30               	addlw	48
  3435  00131A  6EDF               	movwf	indf2,c
  3436  00131C                     
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3438  00131C  C08F  F001         	movff	efgtoa@e,___awdiv@dividend
  3439  001320  C090  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3440  001324  0E00               	movlw	0
  3441  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3442  001328  0E0A               	movlw	10
  3443  00132A  6E03               	movwf	___awdiv@divisor^0,c
  3444  00132C  EC3D  F019         	call	___awdiv	;wreg free
  3445  001330  C001  F08F         	movff	?___awdiv,efgtoa@e
  3446  001334  C002  F090         	movff	?___awdiv+1,efgtoa@e+1
  3447  001338                     
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3449  001338  0100               	movlb	0	; () banked
  3450  00133A  077B               	decf	efgtoa@p& (0+255),f,b
  3451  00133C  A0D8               	btfss	status,0,c
  3452  00133E  077C               	decf	(efgtoa@p+1)& (0+255),f,b
  3453  001340                     
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3456  001340  077D               	decf	efgtoa@w& (0+255),f,b
  3457  001342  A0D8               	btfss	status,0,c
  3458  001344  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3459  001346                     l3723:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3463  001346  518F               	movf	efgtoa@e& (0+255),w,b
  3464  001348  1190               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3465  00134A  A4D8               	btfss	status,2,c
  3466  00134C  EFAA  F009         	goto	u4311
  3467  001350  EFAC  F009         	goto	u4310
  3468  001354                     u4311:
  3469  001354  EF78  F009         	goto	l3713
  3470  001358                     u4310:
  3471  001358                     
  3472                           ; BSR set to: 0
  3473  001358  BF7C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3474  00135A  EFB9  F009         	goto	u4320
  3475  00135E  517C               	movf	(efgtoa@p+1)& (0+255),w,b
  3476  001360  E106               	bnz	u4321
  3477  001362  057B               	decf	efgtoa@p& (0+255),w,b
  3478  001364  B0D8               	btfsc	status,0,c
  3479  001366  EFB7  F009         	goto	u4321
  3480  00136A  EFB9  F009         	goto	u4320
  3481  00136E                     u4321:
  3482  00136E  EF78  F009         	goto	l3713
  3483  001372                     u4320:
  3484  001372                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3487  001372  0789               	decf	efgtoa@i& (0+255),f,b
  3488  001374  A0D8               	btfss	status,0,c
  3489  001376  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3490  001378                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3493  001378  5179               	movf	efgtoa@sign& (0+255),w,b
  3494  00137A  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3495  00137C  A4D8               	btfss	status,2,c
  3496  00137E  EFC3  F009         	goto	u4331
  3497  001382  EFC5  F009         	goto	u4330
  3498  001386                     u4331:
  3499  001386  EFCB  F009         	goto	l3733
  3500  00138A                     u4330:
  3501  00138A                     
  3502                           ; BSR set to: 0
  3503  00138A  0E00               	movlw	0
  3504  00138C  6F68               	movwf	(_efgtoa$1157+1)& (0+255),b
  3505  00138E  0E2B               	movlw	43
  3506  001390  6F67               	movwf	_efgtoa$1157& (0+255),b
  3507  001392  EFCF  F009         	goto	l3735
  3508  001396                     l3733:
  3509                           
  3510                           ; BSR set to: 0
  3511  001396  0E00               	movlw	0
  3512  001398  6F68               	movwf	(_efgtoa$1157+1)& (0+255),b
  3513  00139A  0E2D               	movlw	45
  3514  00139C  6F67               	movwf	_efgtoa$1157& (0+255),b
  3515  00139E                     l3735:
  3516                           
  3517                           ; BSR set to: 0
  3518  00139E  0E00               	movlw	low _dbuf
  3519  0013A0  2589               	addwf	efgtoa@i& (0+255),w,b
  3520  0013A2  6ED9               	movwf	fsr2l,c
  3521  0013A4  0E01               	movlw	high _dbuf
  3522  0013A6  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3523  0013A8  6EDA               	movwf	fsr2h,c
  3524  0013AA  C067  FFDF         	movff	_efgtoa$1157,indf2
  3525  0013AE                     
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3528  0013AE  077D               	decf	efgtoa@w& (0+255),f,b
  3529  0013B0  A0D8               	btfss	status,0,c
  3530  0013B2  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3531  0013B4                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3534  0013B4  0789               	decf	efgtoa@i& (0+255),f,b
  3535  0013B6  A0D8               	btfss	status,0,c
  3536  0013B8  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3537  0013BA                     
  3538                           ; BSR set to: 0
  3539  0013BA  0EBF               	movlw	191
  3540  0013BC  6F60               	movwf	??_efgtoa& (0+255),b
  3541  0013BE  0EFF               	movlw	255
  3542  0013C0  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3543  0013C2  505B               	movf	efgtoa@c^0,w,c
  3544  0013C4  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3545  0013C6  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3546  0013C8  5160               	movf	??_efgtoa& (0+255),w,b
  3547  0013CA  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3548  0013CC  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3549  0013CE  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3550  0013D0  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3551  0013D2  E109               	bnz	u4340
  3552  0013D4  0E1A               	movlw	26
  3553  0013D6  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3554  0013D8  A0D8               	btfss	status,0,c
  3555  0013DA  EFF1  F009         	goto	u4341
  3556  0013DE  EFF3  F009         	goto	u4340
  3557  0013E2                     u4341:
  3558  0013E2  EFF9  F009         	goto	l3747
  3559  0013E6                     u4340:
  3560  0013E6                     
  3561                           ; BSR set to: 0
  3562  0013E6  0E00               	movlw	0
  3563  0013E8  6F6A               	movwf	(_efgtoa$1158+1)& (0+255),b
  3564  0013EA  0E65               	movlw	101
  3565  0013EC  6F69               	movwf	_efgtoa$1158& (0+255),b
  3566  0013EE  EFFD  F009         	goto	l3749
  3567  0013F2                     l3747:
  3568                           
  3569                           ; BSR set to: 0
  3570  0013F2  0E00               	movlw	0
  3571  0013F4  6F6A               	movwf	(_efgtoa$1158+1)& (0+255),b
  3572  0013F6  0E45               	movlw	69
  3573  0013F8  6F69               	movwf	_efgtoa$1158& (0+255),b
  3574  0013FA                     l3749:
  3575                           
  3576                           ; BSR set to: 0
  3577  0013FA  0E00               	movlw	low _dbuf
  3578  0013FC  2589               	addwf	efgtoa@i& (0+255),w,b
  3579  0013FE  6ED9               	movwf	fsr2l,c
  3580  001400  0E01               	movlw	high _dbuf
  3581  001402  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3582  001404  6EDA               	movwf	fsr2h,c
  3583  001406  C069  FFDF         	movff	_efgtoa$1158,indf2
  3584  00140A                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3587  00140A  077D               	decf	efgtoa@w& (0+255),f,b
  3588  00140C  A0D8               	btfss	status,0,c
  3589  00140E  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3590  001410                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3593  001410  0E00               	movlw	low _dbuf
  3594  001412  2591               	addwf	efgtoa@n& (0+255),w,b
  3595  001414  6E01               	movwf	strcpy@dest^0,c
  3596  001416  0E01               	movlw	high _dbuf
  3597  001418  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3598  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  3599  00141C  0E00               	movlw	low _dbuf
  3600  00141E  2589               	addwf	efgtoa@i& (0+255),w,b
  3601  001420  6E03               	movwf	strcpy@src^0,c
  3602  001422  0E01               	movlw	high _dbuf
  3603  001424  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3604  001426  6E04               	movwf	(strcpy@src+1)^0,c
  3605  001428  ECDA  F01A         	call	_strcpy	;wreg free
  3606  00142C  EFBA  F004         	goto	l3497
  3607  001430                     l881:
  3608  001430  0012               	return		;funcret
  3609  001432                     __end_of_efgtoa:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _tolower *****************
  3613 ;; Defined at:
  3614 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  c               2    6[COMRAM] int 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2    6[COMRAM] int 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3628 ;;      Params:         2       0       0       0       0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3630 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3631 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3632 ;;Total ram usage:        6 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 1
  3635 ;; This function calls:
  3636 ;;		_isupper
  3637 ;; This function is called by:
  3638 ;;		_efgtoa
  3639 ;;		_vfpfcnvrt
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text6
  3644  00370C                     __ptext6:
  3645                           	callstack 0
  3646  00370C                     _tolower:
  3647                           	callstack 26
  3648  00370C  0EBF               	movlw	191
  3649  00370E  6E09               	movwf	??_tolower^0,c
  3650  003710  0EFF               	movlw	255
  3651  003712  6E0A               	movwf	(??_tolower+1)^0,c
  3652  003714  C007  F00B         	movff	tolower@c,??_tolower+2
  3653  003718  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3654  00371C  5009               	movf	??_tolower^0,w,c
  3655  00371E  260B               	addwf	(??_tolower+2)^0,f,c
  3656  003720  500A               	movf	(??_tolower+1)^0,w,c
  3657  003722  220C               	addwfc	(??_tolower+3)^0,f,c
  3658  003724  500C               	movf	(??_tolower+3)^0,w,c
  3659  003726  E107               	bnz	u3721
  3660  003728  0E1A               	movlw	26
  3661  00372A  5C0B               	subwf	(??_tolower+2)^0,w,c
  3662  00372C  B0D8               	btfsc	status,0,c
  3663  00372E  EF9B  F01B         	goto	u3721
  3664  003732  EF9D  F01B         	goto	u3720
  3665  003736                     u3721:
  3666  003736  EFA4  F01B         	goto	l1097
  3667  00373A                     u3720:
  3668  00373A  0E20               	movlw	32
  3669  00373C  1007               	iorwf	tolower@c^0,w,c
  3670  00373E  6E07               	movwf	?_tolower^0,c
  3671  003740  5008               	movf	(tolower@c+1)^0,w,c
  3672  003742  6E08               	movwf	(?_tolower+1)^0,c
  3673  003744  EFA8  F01B         	goto	l1100
  3674  003748                     l1097:
  3675  003748  C007  F007         	movff	tolower@c,?_tolower
  3676  00374C  C008  F008         	movff	tolower@c+1,?_tolower+1
  3677  003750                     l1100:
  3678  003750  0012               	return		;funcret
  3679  003752                     __end_of_tolower:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _isupper *****************
  3683 ;; Defined at:
  3684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  c               2    0[COMRAM] int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2    0[COMRAM] int 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         2       0       0       0       0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3700 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3701 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        6 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_efgtoa
  3708 ;;		_vfpfcnvrt
  3709 ;;		_tolower
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text7
  3714  0037DC                     __ptext7:
  3715                           	callstack 0
  3716  0037DC                     _isupper:
  3717                           	callstack 26
  3718  0037DC  0EBF               	movlw	191
  3719  0037DE  6E03               	movwf	??_isupper^0,c
  3720  0037E0  0EFF               	movlw	255
  3721  0037E2  6E04               	movwf	(??_isupper+1)^0,c
  3722  0037E4  C001  F005         	movff	isupper@c,??_isupper+2
  3723  0037E8  C002  F006         	movff	isupper@c+1,??_isupper+3
  3724  0037EC  5003               	movf	??_isupper^0,w,c
  3725  0037EE  2605               	addwf	(??_isupper+2)^0,f,c
  3726  0037F0  5004               	movf	(??_isupper+1)^0,w,c
  3727  0037F2  2206               	addwfc	(??_isupper+3)^0,f,c
  3728  0037F4  5006               	movf	(??_isupper+3)^0,w,c
  3729  0037F6  E10A               	bnz	u2830
  3730  0037F8  0E1A               	movlw	26
  3731  0037FA  5C05               	subwf	(??_isupper+2)^0,w,c
  3732  0037FC  A0D8               	btfss	status,0,c
  3733  0037FE  EF03  F01C         	goto	u2831
  3734  003802  EF06  F01C         	goto	u2830
  3735  003806                     u2831:
  3736  003806  0E01               	movlw	1
  3737  003808  EF07  F01C         	goto	u2840
  3738  00380C                     u2830:
  3739  00380C  0E00               	movlw	0
  3740  00380E                     u2840:
  3741  00380E  6E01               	movwf	?_isupper^0,c
  3742  003810  6A02               	clrf	(?_isupper+1)^0,c
  3743  003812  0012               	return		;funcret
  3744  003814                     __end_of_isupper:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _strcpy *****************
  3748 ;; Defined at:
  3749 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3752 ;;		 -> dbuf(80), 
  3753 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3754 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3755 ;;		 -> dbuf(80), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  d               2    8[COMRAM] PTR unsigned char 
  3758 ;;		 -> dbuf(80), 
  3759 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3760 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3761 ;;		 -> dbuf(80), 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2    0[COMRAM] PTR unsigned char 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3771 ;;      Params:         4       0       0       0       0       0       0       0       0
  3772 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3773 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3774 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3775 ;;Total ram usage:       10 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_efgtoa
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text8
  3785  0035B4                     __ptext8:
  3786                           	callstack 0
  3787  0035B4                     _strcpy:
  3788                           	callstack 26
  3789  0035B4  C003  F007         	movff	strcpy@src,strcpy@s
  3790  0035B8  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3791  0035BC  C001  F009         	movff	strcpy@dest,strcpy@d
  3792  0035C0  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3793  0035C4                     l3391:
  3794  0035C4  5007               	movf	strcpy@s^0,w,c
  3795  0035C6  6E05               	movwf	??_strcpy^0,c
  3796  0035C8  5008               	movf	(strcpy@s+1)^0,w,c
  3797  0035CA  6E06               	movwf	(??_strcpy+1)^0,c
  3798  0035CC  4A07               	infsnz	strcpy@s^0,f,c
  3799  0035CE  2A08               	incf	(strcpy@s+1)^0,f,c
  3800  0035D0  C005  FFF6         	movff	??_strcpy,tblptrl
  3801  0035D4  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3802  0035D8  6AF8               	clrf	tblptru,c
  3803  0035DA  C009  FFD9         	movff	strcpy@d,fsr2l
  3804  0035DE  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3805  0035E2  4A09               	infsnz	strcpy@d^0,f,c
  3806  0035E4  2A0A               	incf	(strcpy@d+1)^0,f,c
  3807  0035E6  0E07               	movlw	(high __ramtop+-1)
  3808  0035E8  64F7               	cpfsgt	tblptrh,c
  3809  0035EA  D003               	bra	u3707
  3810  0035EC  0008               	tblrd		*
  3811  0035EE  50F5               	movf	tablat,w,c
  3812  0035F0  D005               	bra	u3700
  3813  0035F2                     u3707:
  3814  0035F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3815  0035F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3816  0035FA  50E7               	movf	indf1,w,c
  3817  0035FC                     u3700:
  3818  0035FC  6EDF               	movwf	indf2,c
  3819  0035FE  50DF               	movf	indf2,w,c
  3820  003600  A4D8               	btfss	status,2,c
  3821  003602  EF05  F01B         	goto	u3711
  3822  003606  EF07  F01B         	goto	u3710
  3823  00360A                     u3711:
  3824  00360A  EFE2  F01A         	goto	l3391
  3825  00360E                     u3710:
  3826  00360E  0012               	return		;funcret
  3827  003610                     __end_of_strcpy:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _pad *****************
  3831 ;; Defined at:
  3832 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3835 ;;		 -> sprintf@f(11), 
  3836 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3837 ;;		 -> dbuf(80), 
  3838 ;;  p               2   20[COMRAM] int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  w               2   25[COMRAM] int 
  3841 ;;  i               2   23[COMRAM] int 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2   16[COMRAM] int 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         6       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3854 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:       11 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 3
  3858 ;; This function calls:
  3859 ;;		_fputc
  3860 ;;		_fputs
  3861 ;;		_strlen
  3862 ;; This function is called by:
  3863 ;;		_efgtoa
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text9
  3868  0031B4                     __ptext9:
  3869                           	callstack 0
  3870  0031B4                     _pad:
  3871                           	callstack 23
  3872  0031B4                     
  3873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3874  0031B4  0100               	movlb	0	; () banked
  3875  0031B6  A1DB               	btfss	_flags& (0+255),0,b
  3876  0031B8  EFE0  F018         	goto	u3591
  3877  0031BC  EFE2  F018         	goto	u3590
  3878  0031C0                     u3591:
  3879  0031C0  EFEC  F018         	goto	l3349
  3880  0031C4                     u3590:
  3881  0031C4                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3884  0031C4  C013  F00A         	movff	pad@buf,fputs@s
  3885  0031C8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3886  0031CC  C011  F00C         	movff	pad@fp,fputs@fp
  3887  0031D0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3888  0031D4  ECCC  F01B         	call	_fputs	;wreg free
  3889  0031D8                     l3349:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3892  0031D8  BE16               	btfsc	(pad@p+1)^0,7,c
  3893  0031DA  EFF1  F018         	goto	u3601
  3894  0031DE  EFF3  F018         	goto	u3600
  3895  0031E2                     u3601:
  3896  0031E2  EFF9  F018         	goto	l3353
  3897  0031E6                     u3600:
  3898  0031E6  C015  F01A         	movff	pad@p,pad@w
  3899  0031EA  C016  F01B         	movff	pad@p+1,pad@w+1
  3900  0031EE  EFFD  F018         	goto	l860
  3901  0031F2                     l3353:
  3902  0031F2  0E00               	movlw	0
  3903  0031F4  6E1B               	movwf	(pad@w+1)^0,c
  3904  0031F6  0E00               	movlw	0
  3905  0031F8  6E1A               	movwf	pad@w^0,c
  3906  0031FA                     l860:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3909  0031FA  0E00               	movlw	0
  3910  0031FC  6E19               	movwf	(pad@i+1)^0,c
  3911  0031FE  0E00               	movlw	0
  3912  003200  6E18               	movwf	pad@i^0,c
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3915  003202  EF0F  F019         	goto	l3359
  3916  003206                     l3355:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3919  003206  0E00               	movlw	0
  3920  003208  6E02               	movwf	(fputc@c+1)^0,c
  3921  00320A  0E20               	movlw	32
  3922  00320C  6E01               	movwf	fputc@c^0,c
  3923  00320E  C011  F003         	movff	pad@fp,fputc@fp
  3924  003212  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3925  003216  EC75  F018         	call	_fputc	;wreg free
  3926  00321A                     
  3927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3928  00321A  4A18               	infsnz	pad@i^0,f,c
  3929  00321C  2A19               	incf	(pad@i+1)^0,f,c
  3930  00321E                     l3359:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3933  00321E  501A               	movf	pad@w^0,w,c
  3934  003220  5C18               	subwf	pad@i^0,w,c
  3935  003222  5019               	movf	(pad@i+1)^0,w,c
  3936  003224  0A80               	xorlw	128
  3937  003226  6E17               	movwf	??_pad^0,c
  3938  003228  501B               	movf	(pad@w+1)^0,w,c
  3939  00322A  0A80               	xorlw	128
  3940  00322C  5817               	subwfb	??_pad^0,w,c
  3941  00322E  A0D8               	btfss	status,0,c
  3942  003230  EF1C  F019         	goto	u3611
  3943  003234  EF1E  F019         	goto	u3610
  3944  003238                     u3611:
  3945  003238  EF03  F019         	goto	l3355
  3946  00323C                     u3610:
  3947  00323C                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3949  00323C  0100               	movlb	0	; () banked
  3950  00323E  B1DB               	btfsc	_flags& (0+255),0,b
  3951  003240  EF24  F019         	goto	u3621
  3952  003244  EF26  F019         	goto	u3620
  3953  003248                     u3621:
  3954  003248  EF30  F019         	goto	l3363
  3955  00324C                     u3620:
  3956  00324C                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3959  00324C  C013  F00A         	movff	pad@buf,fputs@s
  3960  003250  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3961  003254  C011  F00C         	movff	pad@fp,fputs@fp
  3962  003258  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3963  00325C  ECCC  F01B         	call	_fputs	;wreg free
  3964  003260                     l3363:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3967  003260  C013  F001         	movff	pad@buf,strlen@s
  3968  003264  C014  F002         	movff	pad@buf+1,strlen@s+1
  3969  003268  EC42  F01C         	call	_strlen	;wreg free
  3970  00326C  501A               	movf	pad@w^0,w,c
  3971  00326E  2401               	addwf	?_strlen^0,w,c
  3972  003270  6E11               	movwf	?_pad^0,c
  3973  003272  501B               	movf	(pad@w+1)^0,w,c
  3974  003274  2002               	addwfc	(?_strlen+1)^0,w,c
  3975  003276  6E12               	movwf	(?_pad+1)^0,c
  3976  003278  0012               	return		;funcret
  3977  00327A                     __end_of_pad:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _strlen *****************
  3981 ;; Defined at:
  3982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3985 ;;		 -> dbuf(80), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3988 ;;		 -> dbuf(80), 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    0[COMRAM] unsigned int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3998 ;;      Params:         2       0       0       0       0       0       0       0       0
  3999 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4001 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4002 ;;Total ram usage:        4 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_pad
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text10
  4012  003884                     __ptext10:
  4013                           	callstack 0
  4014  003884                     _strlen:
  4015                           	callstack 25
  4016  003884  C001  F003         	movff	strlen@s,strlen@a
  4017  003888  C002  F004         	movff	strlen@s+1,strlen@a+1
  4018  00388C  EF4A  F01C         	goto	l2861
  4019  003890                     l2859:
  4020  003890  4A01               	infsnz	strlen@s^0,f,c
  4021  003892  2A02               	incf	(strlen@s+1)^0,f,c
  4022  003894                     l2861:
  4023  003894  C001  FFD9         	movff	strlen@s,fsr2l
  4024  003898  C002  FFDA         	movff	strlen@s+1,fsr2h
  4025  00389C  50DF               	movf	indf2,w,c
  4026  00389E  A4D8               	btfss	status,2,c
  4027  0038A0  EF54  F01C         	goto	u2821
  4028  0038A4  EF56  F01C         	goto	u2820
  4029  0038A8                     u2821:
  4030  0038A8  EF48  F01C         	goto	l2859
  4031  0038AC                     u2820:
  4032  0038AC  5003               	movf	strlen@a^0,w,c
  4033  0038AE  5C01               	subwf	strlen@s^0,w,c
  4034  0038B0  6E01               	movwf	?_strlen^0,c
  4035  0038B2  5004               	movf	(strlen@a+1)^0,w,c
  4036  0038B4  5802               	subwfb	(strlen@s+1)^0,w,c
  4037  0038B6  6E02               	movwf	(?_strlen+1)^0,c
  4038  0038B8  0012               	return		;funcret
  4039  0038BA                     __end_of_strlen:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function _fputs *****************
  4043 ;; Defined at:
  4044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4047 ;;		 -> dbuf(80), 
  4048 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4049 ;;		 -> sprintf@f(11), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  i               2   14[COMRAM] int 
  4052 ;;  c               1   13[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2    9[COMRAM] int 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         4       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        7 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 2
  4069 ;; This function calls:
  4070 ;;		_fputc
  4071 ;; This function is called by:
  4072 ;;		_pad
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text11
  4077  003798                     __ptext11:
  4078                           	callstack 0
  4079  003798                     _fputs:
  4080                           	callstack 23
  4081  003798  0E00               	movlw	0
  4082  00379A  6E10               	movwf	(fputs@i+1)^0,c
  4083  00379C  0E00               	movlw	0
  4084  00379E  6E0F               	movwf	fputs@i^0,c
  4085  0037A0  EFDD  F01B         	goto	l2855
  4086  0037A4                     l2851:
  4087  0037A4  C00E  F001         	movff	fputs@c,fputc@c
  4088  0037A8  6A02               	clrf	(fputc@c+1)^0,c
  4089  0037AA  C00C  F003         	movff	fputs@fp,fputc@fp
  4090  0037AE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4091  0037B2  EC75  F018         	call	_fputc	;wreg free
  4092  0037B6  4A0F               	infsnz	fputs@i^0,f,c
  4093  0037B8  2A10               	incf	(fputs@i+1)^0,f,c
  4094  0037BA                     l2855:
  4095  0037BA  500F               	movf	fputs@i^0,w,c
  4096  0037BC  240A               	addwf	fputs@s^0,w,c
  4097  0037BE  6ED9               	movwf	fsr2l,c
  4098  0037C0  5010               	movf	(fputs@i+1)^0,w,c
  4099  0037C2  200B               	addwfc	(fputs@s+1)^0,w,c
  4100  0037C4  6EDA               	movwf	fsr2h,c
  4101  0037C6  50DF               	movf	indf2,w,c
  4102  0037C8  6E0E               	movwf	fputs@c^0,c
  4103  0037CA  500E               	movf	fputs@c^0,w,c
  4104  0037CC  A4D8               	btfss	status,2,c
  4105  0037CE  EFEB  F01B         	goto	u2811
  4106  0037D2  EFED  F01B         	goto	u2810
  4107  0037D6                     u2811:
  4108  0037D6  EFD2  F01B         	goto	l2851
  4109  0037DA                     u2810:
  4110  0037DA  0012               	return		;funcret
  4111  0037DC                     __end_of_fputs:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _fputc *****************
  4115 ;; Defined at:
  4116 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  c               2    0[COMRAM] int 
  4119 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4120 ;;		 -> sprintf@f(11), 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2    0[COMRAM] int 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4132 ;;      Params:         4       0       0       0       0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4134 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4135 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4136 ;;Total ram usage:        9 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; Hardware stack levels required when called: 1
  4139 ;; This function calls:
  4140 ;;		_putch
  4141 ;; This function is called by:
  4142 ;;		_pad
  4143 ;;		_vfpfcnvrt
  4144 ;;		_fputs
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text12
  4149  0030EA                     __ptext12:
  4150                           	callstack 0
  4151  0030EA                     _fputc:
  4152                           	callstack 26
  4153  0030EA  5003               	movf	fputc@fp^0,w,c
  4154  0030EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  4155  0030EE  B4D8               	btfsc	status,2,c
  4156  0030F0  EF7C  F018         	goto	u2381
  4157  0030F4  EF7E  F018         	goto	u2380
  4158  0030F8                     u2381:
  4159  0030F8  EF87  F018         	goto	l2637
  4160  0030FC                     u2380:
  4161  0030FC  5003               	movf	fputc@fp^0,w,c
  4162  0030FE  1004               	iorwf	(fputc@fp+1)^0,w,c
  4163  003100  A4D8               	btfss	status,2,c
  4164  003102  EF85  F018         	goto	u2391
  4165  003106  EF87  F018         	goto	u2390
  4166  00310A                     u2391:
  4167  00310A  EF8C  F018         	goto	l2639
  4168  00310E                     u2390:
  4169  00310E                     l2637:
  4170  00310E  5001               	movf	fputc@c^0,w,c
  4171  003110  ECF1  F01C         	call	_putch
  4172  003114  EFD9  F018         	goto	l1060
  4173  003118                     l2639:
  4174  003118  EE20 F009          	lfsr	2,9
  4175  00311C  5003               	movf	fputc@fp^0,w,c
  4176  00311E  26D9               	addwf	fsr2l,f,c
  4177  003120  5004               	movf	(fputc@fp+1)^0,w,c
  4178  003122  22DA               	addwfc	fsr2h,f,c
  4179  003124  50DE               	movf	postinc2,w,c
  4180  003126  10DE               	iorwf	postinc2,w,c
  4181  003128  B4D8               	btfsc	status,2,c
  4182  00312A  EF99  F018         	goto	u2401
  4183  00312E  EF9B  F018         	goto	u2400
  4184  003132                     u2401:
  4185  003132  EFB6  F018         	goto	l2643
  4186  003136                     u2400:
  4187  003136  EE20 F009          	lfsr	2,9
  4188  00313A  5003               	movf	fputc@fp^0,w,c
  4189  00313C  26D9               	addwf	fsr2l,f,c
  4190  00313E  5004               	movf	(fputc@fp+1)^0,w,c
  4191  003140  22DA               	addwfc	fsr2h,f,c
  4192  003142  EE10 F003          	lfsr	1,3
  4193  003146  5003               	movf	fputc@fp^0,w,c
  4194  003148  26E1               	addwf	fsr1l,f,c
  4195  00314A  5004               	movf	(fputc@fp+1)^0,w,c
  4196  00314C  22E2               	addwfc	fsr1h,f,c
  4197  00314E  50DE               	movf	postinc2,w,c
  4198  003150  5CE6               	subwf	postinc1,w,c
  4199  003152  50E6               	movf	postinc1,w,c
  4200  003154  0A80               	xorlw	128
  4201  003156  6E09               	movwf	(??_fputc+4)^0,c
  4202  003158  50DE               	movf	postinc2,w,c
  4203  00315A  0A80               	xorlw	128
  4204  00315C  5809               	subwfb	(??_fputc+4)^0,w,c
  4205  00315E  B0D8               	btfsc	status,0,c
  4206  003160  EFB4  F018         	goto	u2411
  4207  003164  EFB6  F018         	goto	u2410
  4208  003168                     u2411:
  4209  003168  EFD9  F018         	goto	l1060
  4210  00316C                     u2410:
  4211  00316C                     l2643:
  4212  00316C  EE20 F003          	lfsr	2,3
  4213  003170  5003               	movf	fputc@fp^0,w,c
  4214  003172  26D9               	addwf	fsr2l,f,c
  4215  003174  5004               	movf	(fputc@fp+1)^0,w,c
  4216  003176  22DA               	addwfc	fsr2h,f,c
  4217  003178  CFDE F005          	movff	postinc2,??_fputc
  4218  00317C  CFDD F006          	movff	postdec2,??_fputc+1
  4219  003180  C003  FFD9         	movff	fputc@fp,fsr2l
  4220  003184  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4221  003188  CFDE F007          	movff	postinc2,??_fputc+2
  4222  00318C  CFDD F008          	movff	postdec2,??_fputc+3
  4223  003190  5005               	movf	??_fputc^0,w,c
  4224  003192  2407               	addwf	(??_fputc+2)^0,w,c
  4225  003194  6ED9               	movwf	fsr2l,c
  4226  003196  5006               	movf	(??_fputc+1)^0,w,c
  4227  003198  2008               	addwfc	(??_fputc+3)^0,w,c
  4228  00319A  6EDA               	movwf	fsr2h,c
  4229  00319C  C001  FFDF         	movff	fputc@c,indf2
  4230  0031A0  EE20 F003          	lfsr	2,3
  4231  0031A4  5003               	movf	fputc@fp^0,w,c
  4232  0031A6  26D9               	addwf	fsr2l,f,c
  4233  0031A8  5004               	movf	(fputc@fp+1)^0,w,c
  4234  0031AA  22DA               	addwfc	fsr2h,f,c
  4235  0031AC  2ADE               	incf	postinc2,f,c
  4236  0031AE  0E00               	movlw	0
  4237  0031B0  22DD               	addwfc	postdec2,f,c
  4238  0031B2                     l1060:
  4239  0031B2  0012               	return		;funcret
  4240  0031B4                     __end_of_fputc:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _putch *****************
  4244 ;; Defined at:
  4245 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  c               1    wreg     unsigned char 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  c               1    0[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_fputc
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text13
  4273  0039E2                     __ptext13:
  4274                           	callstack 0
  4275  0039E2                     _putch:
  4276                           	callstack 26
  4277  0039E2  0012               	return		;funcret
  4278  0039E4                     __end_of_putch:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _floorf *****************
  4282 ;; Defined at:
  4283 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  x               4   64[COMRAM] float 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  u               4   80[COMRAM] struct .
  4288 ;;  m               4   74[COMRAM] unsigned long 
  4289 ;;  e               2   78[COMRAM] int 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  4   64[COMRAM] float 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4299 ;;      Params:         4       0       0       0       0       0       0       0       0
  4300 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4301 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4302 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4303 ;;Total ram usage:       20 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_efgtoa
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text14
  4313  0024EC                     __ptext14:
  4314                           	callstack 0
  4315  0024EC                     _floorf:
  4316                           	callstack 26
  4317  0024EC  C0C9  F051         	movff	floorf@F526,floorf@u
  4318  0024F0  C0CA  F052         	movff	floorf@F526+1,floorf@u+1
  4319  0024F4  C0CB  F053         	movff	floorf@F526+2,floorf@u+2
  4320  0024F8  C0CC  F054         	movff	floorf@F526+3,floorf@u+3
  4321  0024FC  C041  F051         	movff	floorf@x,floorf@u
  4322  002500  C042  F052         	movff	floorf@x+1,floorf@u+1
  4323  002504  C043  F053         	movff	floorf@x+2,floorf@u+2
  4324  002508  C044  F054         	movff	floorf@x+3,floorf@u+3
  4325  00250C  0E81               	movlw	129
  4326  00250E  6E45               	movwf	??_floorf^0,c
  4327  002510  0EFF               	movlw	255
  4328  002512  6E46               	movwf	(??_floorf+1)^0,c
  4329  002514  C051  F047         	movff	floorf@u,??_floorf+2
  4330  002518  C052  F048         	movff	floorf@u+1,??_floorf+3
  4331  00251C  C053  F049         	movff	floorf@u+2,??_floorf+4
  4332  002520  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4333  002524  0E18               	movlw	24
  4334  002526  EF9A  F012         	goto	u3730
  4335  00252A                     u3735:
  4336  00252A  90D8               	bcf	status,0,c
  4337  00252C  324A               	rrcf	(??_floorf+5)^0,f,c
  4338  00252E  3249               	rrcf	(??_floorf+4)^0,f,c
  4339  002530  3248               	rrcf	(??_floorf+3)^0,f,c
  4340  002532  3247               	rrcf	(??_floorf+2)^0,f,c
  4341  002534                     u3730:
  4342  002534  2EE8               	decfsz	wreg,f,c
  4343  002536  EF95  F012         	goto	u3735
  4344  00253A  5047               	movf	(??_floorf+2)^0,w,c
  4345  00253C  2445               	addwf	??_floorf^0,w,c
  4346  00253E  6E4F               	movwf	floorf@e^0,c
  4347  002540  0E00               	movlw	0
  4348  002542  2046               	addwfc	(??_floorf+1)^0,w,c
  4349  002544  6E50               	movwf	(floorf@e+1)^0,c
  4350  002546  BE50               	btfsc	(floorf@e+1)^0,7,c
  4351  002548  EFAF  F012         	goto	u3741
  4352  00254C  5050               	movf	(floorf@e+1)^0,w,c
  4353  00254E  E109               	bnz	u3740
  4354  002550  0E17               	movlw	23
  4355  002552  5C4F               	subwf	floorf@e^0,w,c
  4356  002554  A0D8               	btfss	status,0,c
  4357  002556  EFAF  F012         	goto	u3741
  4358  00255A  EFB1  F012         	goto	u3740
  4359  00255E                     u3741:
  4360  00255E  EFBB  F012         	goto	l3409
  4361  002562                     u3740:
  4362  002562                     l3407:
  4363  002562  C041  F041         	movff	floorf@x,?_floorf
  4364  002566  C042  F042         	movff	floorf@x+1,?_floorf+1
  4365  00256A  C043  F043         	movff	floorf@x+2,?_floorf+2
  4366  00256E  C044  F044         	movff	floorf@x+3,?_floorf+3
  4367  002572  EF7E  F013         	goto	l1021
  4368  002576                     l3409:
  4369  002576  BE50               	btfsc	(floorf@e+1)^0,7,c
  4370  002578  EFC0  F012         	goto	u3751
  4371  00257C  EFC2  F012         	goto	u3750
  4372  002580                     u3751:
  4373  002580  EF32  F013         	goto	l3419
  4374  002584                     u3750:
  4375  002584  C04F  F045         	movff	floorf@e,??_floorf
  4376  002588  0EFF               	movlw	255
  4377  00258A  6E46               	movwf	(??_floorf+1)^0,c
  4378  00258C  0EFF               	movlw	255
  4379  00258E  6E47               	movwf	(??_floorf+2)^0,c
  4380  002590  0E7F               	movlw	127
  4381  002592  6E48               	movwf	(??_floorf+3)^0,c
  4382  002594  0E00               	movlw	0
  4383  002596  6E49               	movwf	(??_floorf+4)^0,c
  4384  002598                     u3765:
  4385  002598  6645               	tstfsz	??_floorf^0,c
  4386  00259A  EFD1  F012         	goto	u3766
  4387  00259E  EFD9  F012         	goto	u3767
  4388  0025A2                     u3766:
  4389  0025A2  3449               	rlcf	(??_floorf+4)^0,w,c
  4390  0025A4  3249               	rrcf	(??_floorf+4)^0,f,c
  4391  0025A6  3248               	rrcf	(??_floorf+3)^0,f,c
  4392  0025A8  3247               	rrcf	(??_floorf+2)^0,f,c
  4393  0025AA  3246               	rrcf	(??_floorf+1)^0,f,c
  4394  0025AC  2E45               	decfsz	??_floorf^0,f,c
  4395  0025AE  EFCC  F012         	goto	u3765
  4396  0025B2                     u3767:
  4397  0025B2  C046  F04B         	movff	??_floorf+1,floorf@m
  4398  0025B6  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4399  0025BA  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4400  0025BE  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4401  0025C2  504B               	movf	floorf@m^0,w,c
  4402  0025C4  1451               	andwf	floorf@u^0,w,c
  4403  0025C6  6E45               	movwf	??_floorf^0,c
  4404  0025C8  504C               	movf	(floorf@m+1)^0,w,c
  4405  0025CA  1452               	andwf	(floorf@u+1)^0,w,c
  4406  0025CC  6E46               	movwf	(??_floorf+1)^0,c
  4407  0025CE  504D               	movf	(floorf@m+2)^0,w,c
  4408  0025D0  1453               	andwf	(floorf@u+2)^0,w,c
  4409  0025D2  6E47               	movwf	(??_floorf+2)^0,c
  4410  0025D4  504E               	movf	(floorf@m+3)^0,w,c
  4411  0025D6  1454               	andwf	(floorf@u+3)^0,w,c
  4412  0025D8  6E48               	movwf	(??_floorf+3)^0,c
  4413  0025DA  5045               	movf	??_floorf^0,w,c
  4414  0025DC  1046               	iorwf	(??_floorf+1)^0,w,c
  4415  0025DE  1047               	iorwf	(??_floorf+2)^0,w,c
  4416  0025E0  1048               	iorwf	(??_floorf+3)^0,w,c
  4417  0025E2  A4D8               	btfss	status,2,c
  4418  0025E4  EFF6  F012         	goto	u3771
  4419  0025E8  EFF8  F012         	goto	u3770
  4420  0025EC                     u3771:
  4421  0025EC  EFFA  F012         	goto	l3415
  4422  0025F0                     u3770:
  4423  0025F0  EFB1  F012         	goto	l3407
  4424  0025F4                     l3415:
  4425  0025F4  C051  F045         	movff	floorf@u,??_floorf
  4426  0025F8  C052  F046         	movff	floorf@u+1,??_floorf+1
  4427  0025FC  C053  F047         	movff	floorf@u+2,??_floorf+2
  4428  002600  C054  F048         	movff	floorf@u+3,??_floorf+3
  4429  002604  0E20               	movlw	32
  4430  002606  EF0A  F013         	goto	u3780
  4431  00260A                     u3785:
  4432  00260A  90D8               	bcf	status,0,c
  4433  00260C  3248               	rrcf	(??_floorf+3)^0,f,c
  4434  00260E  3247               	rrcf	(??_floorf+2)^0,f,c
  4435  002610  3246               	rrcf	(??_floorf+1)^0,f,c
  4436  002612  3245               	rrcf	??_floorf^0,f,c
  4437  002614                     u3780:
  4438  002614  2EE8               	decfsz	wreg,f,c
  4439  002616  EF05  F013         	goto	u3785
  4440  00261A  5045               	movf	??_floorf^0,w,c
  4441  00261C  1046               	iorwf	(??_floorf+1)^0,w,c
  4442  00261E  1047               	iorwf	(??_floorf+2)^0,w,c
  4443  002620  1048               	iorwf	(??_floorf+3)^0,w,c
  4444  002622  B4D8               	btfsc	status,2,c
  4445  002624  EF16  F013         	goto	u3791
  4446  002628  EF18  F013         	goto	u3790
  4447  00262C                     u3791:
  4448  00262C  EF20  F013         	goto	l1024
  4449  002630                     u3790:
  4450  002630  504B               	movf	floorf@m^0,w,c
  4451  002632  2651               	addwf	floorf@u^0,f,c
  4452  002634  504C               	movf	(floorf@m+1)^0,w,c
  4453  002636  2252               	addwfc	(floorf@u+1)^0,f,c
  4454  002638  504D               	movf	(floorf@m+2)^0,w,c
  4455  00263A  2253               	addwfc	(floorf@u+2)^0,f,c
  4456  00263C  504E               	movf	(floorf@m+3)^0,w,c
  4457  00263E  2254               	addwfc	(floorf@u+3)^0,f,c
  4458  002640                     l1024:
  4459  002640  1C4B               	comf	floorf@m^0,w,c
  4460  002642  6E45               	movwf	??_floorf^0,c
  4461  002644  1C4C               	comf	(floorf@m+1)^0,w,c
  4462  002646  6E46               	movwf	(??_floorf+1)^0,c
  4463  002648  1C4D               	comf	(floorf@m+2)^0,w,c
  4464  00264A  6E47               	movwf	(??_floorf+2)^0,c
  4465  00264C  1C4E               	comf	(floorf@m+3)^0,w,c
  4466  00264E  6E48               	movwf	(??_floorf+3)^0,c
  4467  002650  5045               	movf	??_floorf^0,w,c
  4468  002652  1651               	andwf	floorf@u^0,f,c
  4469  002654  5046               	movf	(??_floorf+1)^0,w,c
  4470  002656  1652               	andwf	(floorf@u+1)^0,f,c
  4471  002658  5047               	movf	(??_floorf+2)^0,w,c
  4472  00265A  1653               	andwf	(floorf@u+2)^0,f,c
  4473  00265C  5048               	movf	(??_floorf+3)^0,w,c
  4474  00265E  1654               	andwf	(floorf@u+3)^0,f,c
  4475  002660  EF76  F013         	goto	l3427
  4476  002664                     l3419:
  4477  002664  C051  F045         	movff	floorf@u,??_floorf
  4478  002668  C052  F046         	movff	floorf@u+1,??_floorf+1
  4479  00266C  C053  F047         	movff	floorf@u+2,??_floorf+2
  4480  002670  C054  F048         	movff	floorf@u+3,??_floorf+3
  4481  002674  0E20               	movlw	32
  4482  002676  EF42  F013         	goto	u3800
  4483  00267A                     u3805:
  4484  00267A  90D8               	bcf	status,0,c
  4485  00267C  3248               	rrcf	(??_floorf+3)^0,f,c
  4486  00267E  3247               	rrcf	(??_floorf+2)^0,f,c
  4487  002680  3246               	rrcf	(??_floorf+1)^0,f,c
  4488  002682  3245               	rrcf	??_floorf^0,f,c
  4489  002684                     u3800:
  4490  002684  2EE8               	decfsz	wreg,f,c
  4491  002686  EF3D  F013         	goto	u3805
  4492  00268A  5045               	movf	??_floorf^0,w,c
  4493  00268C  1046               	iorwf	(??_floorf+1)^0,w,c
  4494  00268E  1047               	iorwf	(??_floorf+2)^0,w,c
  4495  002690  1048               	iorwf	(??_floorf+3)^0,w,c
  4496  002692  A4D8               	btfss	status,2,c
  4497  002694  EF4E  F013         	goto	u3811
  4498  002698  EF50  F013         	goto	u3810
  4499  00269C                     u3811:
  4500  00269C  EF5A  F013         	goto	l3423
  4501  0026A0                     u3810:
  4502  0026A0  0E00               	movlw	0
  4503  0026A2  6E51               	movwf	floorf@u^0,c
  4504  0026A4  0E00               	movlw	0
  4505  0026A6  6E52               	movwf	(floorf@u+1)^0,c
  4506  0026A8  0E00               	movlw	0
  4507  0026AA  6E53               	movwf	(floorf@u+2)^0,c
  4508  0026AC  0E00               	movlw	0
  4509  0026AE  6E54               	movwf	(floorf@u+3)^0,c
  4510  0026B0  EF76  F013         	goto	l3427
  4511  0026B4                     l3423:
  4512  0026B4  90D8               	bcf	status,0,c
  4513  0026B6  3451               	rlcf	floorf@u^0,w,c
  4514  0026B8  6E45               	movwf	??_floorf^0,c
  4515  0026BA  3452               	rlcf	(floorf@u+1)^0,w,c
  4516  0026BC  6E46               	movwf	(??_floorf+1)^0,c
  4517  0026BE  3453               	rlcf	(floorf@u+2)^0,w,c
  4518  0026C0  6E47               	movwf	(??_floorf+2)^0,c
  4519  0026C2  3454               	rlcf	(floorf@u+3)^0,w,c
  4520  0026C4  6E48               	movwf	(??_floorf+3)^0,c
  4521  0026C6  5045               	movf	??_floorf^0,w,c
  4522  0026C8  1046               	iorwf	(??_floorf+1)^0,w,c
  4523  0026CA  1047               	iorwf	(??_floorf+2)^0,w,c
  4524  0026CC  1048               	iorwf	(??_floorf+3)^0,w,c
  4525  0026CE  B4D8               	btfsc	status,2,c
  4526  0026D0  EF6C  F013         	goto	u3821
  4527  0026D4  EF6E  F013         	goto	u3820
  4528  0026D8                     u3821:
  4529  0026D8  EF76  F013         	goto	l3427
  4530  0026DC                     u3820:
  4531  0026DC  0E00               	movlw	0
  4532  0026DE  6E51               	movwf	floorf@u^0,c
  4533  0026E0  0E00               	movlw	0
  4534  0026E2  6E52               	movwf	(floorf@u+1)^0,c
  4535  0026E4  0E80               	movlw	128
  4536  0026E6  6E53               	movwf	(floorf@u+2)^0,c
  4537  0026E8  0EBF               	movlw	191
  4538  0026EA  6E54               	movwf	(floorf@u+3)^0,c
  4539  0026EC                     l3427:
  4540  0026EC  C051  F041         	movff	floorf@u,?_floorf
  4541  0026F0  C052  F042         	movff	floorf@u+1,?_floorf+1
  4542  0026F4  C053  F043         	movff	floorf@u+2,?_floorf+2
  4543  0026F8  C054  F044         	movff	floorf@u+3,?_floorf+3
  4544  0026FC                     l1021:
  4545  0026FC  0012               	return		;funcret
  4546  0026FE                     __end_of_floorf:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function ___fpclassifyf *****************
  4550 ;; Defined at:
  4551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  x               4    0[COMRAM] float 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  u               4   10[COMRAM] struct .
  4556 ;;  e               2    8[COMRAM] int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2    0[COMRAM] int 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4566 ;;      Params:         4       0       0       0       0       0       0       0       0
  4567 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4568 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4569 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4570 ;;Total ram usage:       14 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_efgtoa
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text15
  4580  002E26                     __ptext15:
  4581                           	callstack 0
  4582  002E26                     ___fpclassifyf:
  4583                           	callstack 26
  4584  002E26  C0CD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4585  002E2A  C0CE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4586  002E2E  C0CF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4587  002E32  C0D0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4588  002E36  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4589  002E3A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4590  002E3E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4591  002E42  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4592  002E46  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4593  002E4A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4594  002E4E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4595  002E52  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4596  002E56  0E18               	movlw	24
  4597  002E58  EF33  F017         	goto	u3630
  4598  002E5C                     u3635:
  4599  002E5C  90D8               	bcf	status,0,c
  4600  002E5E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4601  002E60  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4602  002E62  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4603  002E64  3205               	rrcf	??___fpclassifyf^0,f,c
  4604  002E66                     u3630:
  4605  002E66  2EE8               	decfsz	wreg,f,c
  4606  002E68  EF2E  F017         	goto	u3635
  4607  002E6C  5005               	movf	??___fpclassifyf^0,w,c
  4608  002E6E  6E09               	movwf	___fpclassifyf@e^0,c
  4609  002E70  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4610  002E72  5009               	movf	___fpclassifyf@e^0,w,c
  4611  002E74  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4612  002E76  A4D8               	btfss	status,2,c
  4613  002E78  EF40  F017         	goto	u3641
  4614  002E7C  EF42  F017         	goto	u3640
  4615  002E80                     u3641:
  4616  002E80  EF62  F017         	goto	l3379
  4617  002E84                     u3640:
  4618  002E84  90D8               	bcf	status,0,c
  4619  002E86  340B               	rlcf	___fpclassifyf@u^0,w,c
  4620  002E88  6E05               	movwf	??___fpclassifyf^0,c
  4621  002E8A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4622  002E8C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4623  002E8E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4624  002E90  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4625  002E92  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4626  002E94  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4627  002E96  5005               	movf	??___fpclassifyf^0,w,c
  4628  002E98  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4629  002E9A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4630  002E9C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4631  002E9E  A4D8               	btfss	status,2,c
  4632  002EA0  EF54  F017         	goto	u3651
  4633  002EA4  EF56  F017         	goto	u3650
  4634  002EA8                     u3651:
  4635  002EA8  EF5C  F017         	goto	l3375
  4636  002EAC                     u3650:
  4637  002EAC  0E00               	movlw	0
  4638  002EAE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4639  002EB0  0E02               	movlw	2
  4640  002EB2  6E01               	movwf	?___fpclassifyf^0,c
  4641  002EB4  EF91  F017         	goto	l989
  4642  002EB8                     l3375:
  4643  002EB8  0E00               	movlw	0
  4644  002EBA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4645  002EBC  0E03               	movlw	3
  4646  002EBE  6E01               	movwf	?___fpclassifyf^0,c
  4647  002EC0  EF91  F017         	goto	l989
  4648  002EC4                     l3379:
  4649  002EC4  2809               	incf	___fpclassifyf@e^0,w,c
  4650  002EC6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4651  002EC8  A4D8               	btfss	status,2,c
  4652  002ECA  EF69  F017         	goto	u3661
  4653  002ECE  EF6B  F017         	goto	u3660
  4654  002ED2                     u3661:
  4655  002ED2  EF8D  F017         	goto	l3385
  4656  002ED6                     u3660:
  4657  002ED6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4658  002EDA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4659  002EDE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4660  002EE2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4661  002EE6  0E09               	movlw	9
  4662  002EE8                     u3675:
  4663  002EE8  90D8               	bcf	status,0,c
  4664  002EEA  3605               	rlcf	??___fpclassifyf^0,f,c
  4665  002EEC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4666  002EEE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4667  002EF0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4668  002EF2  2EE8               	decfsz	wreg,f,c
  4669  002EF4  EF74  F017         	goto	u3675
  4670  002EF8  5005               	movf	??___fpclassifyf^0,w,c
  4671  002EFA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4672  002EFC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4673  002EFE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4674  002F00  B4D8               	btfsc	status,2,c
  4675  002F02  EF85  F017         	goto	u3681
  4676  002F06  EF88  F017         	goto	u3680
  4677  002F0A                     u3681:
  4678  002F0A  0E01               	movlw	1
  4679  002F0C  EF89  F017         	goto	u3690
  4680  002F10                     u3680:
  4681  002F10  0E00               	movlw	0
  4682  002F12                     u3690:
  4683  002F12  6E01               	movwf	?___fpclassifyf^0,c
  4684  002F14  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4685  002F16  EF91  F017         	goto	l989
  4686  002F1A                     l3385:
  4687  002F1A  0E00               	movlw	0
  4688  002F1C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4689  002F1E  0E04               	movlw	4
  4690  002F20  6E01               	movwf	?___fpclassifyf^0,c
  4691  002F22                     l989:
  4692  002F22  0012               	return		;funcret
  4693  002F24                     __end_of___fpclassifyf:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function ___fltol *****************
  4697 ;; Defined at:
  4698 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  f1              4    0[COMRAM] int 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  exp1            1    9[COMRAM] unsigned char 
  4703 ;;  sign1           1    8[COMRAM] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  4    0[COMRAM] long 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         4       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4716 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:       10 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_efgtoa
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text16
  4727  002B1A                     __ptext16:
  4728                           	callstack 0
  4729  002B1A                     ___fltol:
  4730                           	callstack 26
  4731  002B1A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4732  002B1C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4733  002B1E  6E0A               	movwf	___fltol@exp1^0,c
  4734  002B20  500A               	movf	___fltol@exp1^0,w,c
  4735  002B22  A4D8               	btfss	status,2,c
  4736  002B24  EF96  F015         	goto	u3521
  4737  002B28  EF98  F015         	goto	u3520
  4738  002B2C                     u3521:
  4739  002B2C  EFA2  F015         	goto	l3307
  4740  002B30                     u3520:
  4741  002B30                     l3303:
  4742  002B30  0E00               	movlw	0
  4743  002B32  6E01               	movwf	?___fltol^0,c
  4744  002B34  0E00               	movlw	0
  4745  002B36  6E02               	movwf	(?___fltol+1)^0,c
  4746  002B38  0E00               	movlw	0
  4747  002B3A  6E03               	movwf	(?___fltol+2)^0,c
  4748  002B3C  0E00               	movlw	0
  4749  002B3E  6E04               	movwf	(?___fltol+3)^0,c
  4750  002B40  EF0F  F016         	goto	l438
  4751  002B44                     l3307:
  4752  002B44  C001  F005         	movff	___fltol@f1,??___fltol
  4753  002B48  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4754  002B4C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4755  002B50  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4756  002B54  0E20               	movlw	32
  4757  002B56  EFB2  F015         	goto	u3530
  4758  002B5A                     u3535:
  4759  002B5A  90D8               	bcf	status,0,c
  4760  002B5C  3208               	rrcf	(??___fltol+3)^0,f,c
  4761  002B5E  3207               	rrcf	(??___fltol+2)^0,f,c
  4762  002B60  3206               	rrcf	(??___fltol+1)^0,f,c
  4763  002B62  3205               	rrcf	??___fltol^0,f,c
  4764  002B64                     u3530:
  4765  002B64  2EE8               	decfsz	wreg,f,c
  4766  002B66  EFAD  F015         	goto	u3535
  4767  002B6A  5005               	movf	??___fltol^0,w,c
  4768  002B6C  6E09               	movwf	___fltol@sign1^0,c
  4769  002B6E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4770  002B70  0EFF               	movlw	255
  4771  002B72  1601               	andwf	___fltol@f1^0,f,c
  4772  002B74  0EFF               	movlw	255
  4773  002B76  1602               	andwf	(___fltol@f1+1)^0,f,c
  4774  002B78  0EFF               	movlw	255
  4775  002B7A  1603               	andwf	(___fltol@f1+2)^0,f,c
  4776  002B7C  0E00               	movlw	0
  4777  002B7E  1604               	andwf	(___fltol@f1+3)^0,f,c
  4778  002B80  0E96               	movlw	150
  4779  002B82  5E0A               	subwf	___fltol@exp1^0,f,c
  4780  002B84  BE0A               	btfsc	___fltol@exp1^0,7,c
  4781  002B86  EFC9  F015         	goto	u3540
  4782  002B8A  EFC7  F015         	goto	u3541
  4783  002B8E                     u3541:
  4784  002B8E  EFDF  F015         	goto	l3327
  4785  002B92                     u3540:
  4786  002B92  500A               	movf	___fltol@exp1^0,w,c
  4787  002B94  0A80               	xorlw	128
  4788  002B96  0F97               	addlw	151
  4789  002B98  B0D8               	btfsc	status,0,c
  4790  002B9A  EFD1  F015         	goto	u3551
  4791  002B9E  EFD3  F015         	goto	u3550
  4792  002BA2                     u3551:
  4793  002BA2  EFD5  F015         	goto	l3323
  4794  002BA6                     u3550:
  4795  002BA6  EF98  F015         	goto	l3303
  4796  002BAA                     l3323:
  4797  002BAA  90D8               	bcf	status,0,c
  4798  002BAC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4799  002BAE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4800  002BB0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4801  002BB2  3201               	rrcf	___fltol@f1^0,f,c
  4802  002BB4  3E0A               	incfsz	___fltol@exp1^0,f,c
  4803  002BB6  EFD5  F015         	goto	l3323
  4804  002BBA  EFF7  F015         	goto	l3337
  4805  002BBE                     l3327:
  4806  002BBE  0E1F               	movlw	31
  4807  002BC0  640A               	cpfsgt	___fltol@exp1^0,c
  4808  002BC2  EFE5  F015         	goto	u3561
  4809  002BC6  EFE7  F015         	goto	u3560
  4810  002BCA                     u3561:
  4811  002BCA  EFEF  F015         	goto	l3335
  4812  002BCE                     u3560:
  4813  002BCE  EF98  F015         	goto	l3303
  4814  002BD2                     l3333:
  4815  002BD2  90D8               	bcf	status,0,c
  4816  002BD4  3601               	rlcf	___fltol@f1^0,f,c
  4817  002BD6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4818  002BD8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4819  002BDA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4820  002BDC  060A               	decf	___fltol@exp1^0,f,c
  4821  002BDE                     l3335:
  4822  002BDE  500A               	movf	___fltol@exp1^0,w,c
  4823  002BE0  A4D8               	btfss	status,2,c
  4824  002BE2  EFF5  F015         	goto	u3571
  4825  002BE6  EFF7  F015         	goto	u3570
  4826  002BEA                     u3571:
  4827  002BEA  EFE9  F015         	goto	l3333
  4828  002BEE                     u3570:
  4829  002BEE                     l3337:
  4830  002BEE  5009               	movf	___fltol@sign1^0,w,c
  4831  002BF0  B4D8               	btfsc	status,2,c
  4832  002BF2  EFFD  F015         	goto	u3581
  4833  002BF6  EFFF  F015         	goto	u3580
  4834  002BFA                     u3581:
  4835  002BFA  EF07  F016         	goto	l3341
  4836  002BFE                     u3580:
  4837  002BFE  1E04               	comf	(___fltol@f1+3)^0,f,c
  4838  002C00  1E03               	comf	(___fltol@f1+2)^0,f,c
  4839  002C02  1E02               	comf	(___fltol@f1+1)^0,f,c
  4840  002C04  6C01               	negf	___fltol@f1^0,c
  4841  002C06  0E00               	movlw	0
  4842  002C08  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4843  002C0A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4844  002C0C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4845  002C0E                     l3341:
  4846  002C0E  C001  F001         	movff	___fltol@f1,?___fltol
  4847  002C12  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4848  002C16  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4849  002C1A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4850  002C1E                     l438:
  4851  002C1E  0012               	return		;funcret
  4852  002C20                     __end_of___fltol:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function ___flsub *****************
  4856 ;; Defined at:
  4857 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  b               4   39[COMRAM] long 
  4860 ;;  a               4   43[COMRAM] long 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  4   39[COMRAM] long 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4872 ;;      Params:         8       0       0       0       0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4875 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4876 ;;Total ram usage:        8 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 1
  4879 ;; This function calls:
  4880 ;;		___fladd
  4881 ;; This function is called by:
  4882 ;;		_efgtoa
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text17
  4887  003752                     __ptext17:
  4888                           	callstack 0
  4889  003752                     ___flsub:
  4890                           	callstack 25
  4891  003752  0E00               	movlw	0
  4892  003754  1A2C               	xorwf	___flsub@a^0,f,c
  4893  003756  0E00               	movlw	0
  4894  003758  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4895  00375A  0E00               	movlw	0
  4896  00375C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4897  00375E  0E80               	movlw	128
  4898  003760  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4899  003762  C028  F001         	movff	___flsub@b,___fladd@b
  4900  003766  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4901  00376A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4902  00376E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4903  003772  C02C  F005         	movff	___flsub@a,___fladd@a
  4904  003776  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4905  00377A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4906  00377E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4907  003782  EC19  F00A         	call	___fladd	;wreg free
  4908  003786  C001  F028         	movff	?___fladd,?___flsub
  4909  00378A  C002  F029         	movff	?___fladd+1,?___flsub+1
  4910  00378E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4911  003792  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4912  003796  0012               	return		;funcret
  4913  003798                     __end_of___flsub:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function ___fladd *****************
  4917 ;; Defined at:
  4918 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  b               4    0[COMRAM] long 
  4921 ;;  a               4    4[COMRAM] long 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  grs             1   15[COMRAM] unsigned char 
  4924 ;;  bexp            1   14[COMRAM] unsigned char 
  4925 ;;  aexp            1   13[COMRAM] unsigned char 
  4926 ;;  signs           1   12[COMRAM] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  4    0[COMRAM] unsigned char 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4936 ;;      Params:         8       0       0       0       0       0       0       0       0
  4937 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4938 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4939 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4940 ;;Total ram usage:       16 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		___flsub
  4946 ;;		_efgtoa
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text18
  4951  001432                     __ptext18:
  4952                           	callstack 0
  4953  001432                     ___fladd:
  4954                           	callstack 25
  4955  001432  5004               	movf	(___fladd@b+3)^0,w,c
  4956  001434  0B80               	andlw	128
  4957  001436  6E0D               	movwf	___fladd@signs^0,c
  4958  001438  5004               	movf	(___fladd@b+3)^0,w,c
  4959  00143A  2404               	addwf	(___fladd@b+3)^0,w,c
  4960  00143C  6E0F               	movwf	___fladd@bexp^0,c
  4961  00143E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4962  001440  EF24  F00A         	goto	u2421
  4963  001444  EF26  F00A         	goto	u2420
  4964  001448                     u2421:
  4965  001448  EF27  F00A         	goto	l2653
  4966  00144C                     u2420:
  4967  00144C  800F               	bsf	___fladd@bexp^0,0,c
  4968  00144E                     l2653:
  4969  00144E  500F               	movf	___fladd@bexp^0,w,c
  4970  001450  B4D8               	btfsc	status,2,c
  4971  001452  EF2D  F00A         	goto	u2431
  4972  001456  EF2F  F00A         	goto	u2430
  4973  00145A                     u2431:
  4974  00145A  EF44  F00A         	goto	l2663
  4975  00145E                     u2430:
  4976  00145E  280F               	incf	___fladd@bexp^0,w,c
  4977  001460  A4D8               	btfss	status,2,c
  4978  001462  EF35  F00A         	goto	u2441
  4979  001466  EF37  F00A         	goto	u2440
  4980  00146A                     u2441:
  4981  00146A  EF3F  F00A         	goto	l2659
  4982  00146E                     u2440:
  4983  00146E  0E00               	movlw	0
  4984  001470  6E01               	movwf	___fladd@b^0,c
  4985  001472  0E00               	movlw	0
  4986  001474  6E02               	movwf	(___fladd@b+1)^0,c
  4987  001476  0E00               	movlw	0
  4988  001478  6E03               	movwf	(___fladd@b+2)^0,c
  4989  00147A  0E00               	movlw	0
  4990  00147C  6E04               	movwf	(___fladd@b+3)^0,c
  4991  00147E                     l2659:
  4992  00147E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4993  001480  0E00               	movlw	0
  4994  001482  6E04               	movwf	(___fladd@b+3)^0,c
  4995  001484  EF4C  F00A         	goto	l2665
  4996  001488                     l2663:
  4997  001488  0E00               	movlw	0
  4998  00148A  6E01               	movwf	___fladd@b^0,c
  4999  00148C  0E00               	movlw	0
  5000  00148E  6E02               	movwf	(___fladd@b+1)^0,c
  5001  001490  0E00               	movlw	0
  5002  001492  6E03               	movwf	(___fladd@b+2)^0,c
  5003  001494  0E00               	movlw	0
  5004  001496  6E04               	movwf	(___fladd@b+3)^0,c
  5005  001498                     l2665:
  5006  001498  5008               	movf	(___fladd@a+3)^0,w,c
  5007  00149A  0B80               	andlw	128
  5008  00149C  6E0E               	movwf	___fladd@aexp^0,c
  5009  00149E  500D               	movf	___fladd@signs^0,w,c
  5010  0014A0  180E               	xorwf	___fladd@aexp^0,w,c
  5011  0014A2  B4D8               	btfsc	status,2,c
  5012  0014A4  EF56  F00A         	goto	u2451
  5013  0014A8  EF58  F00A         	goto	u2450
  5014  0014AC                     u2451:
  5015  0014AC  EF59  F00A         	goto	l2671
  5016  0014B0                     u2450:
  5017  0014B0  8C0D               	bsf	___fladd@signs^0,6,c
  5018  0014B2                     l2671:
  5019  0014B2  5008               	movf	(___fladd@a+3)^0,w,c
  5020  0014B4  2408               	addwf	(___fladd@a+3)^0,w,c
  5021  0014B6  6E0E               	movwf	___fladd@aexp^0,c
  5022  0014B8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5023  0014BA  EF61  F00A         	goto	u2461
  5024  0014BE  EF63  F00A         	goto	u2460
  5025  0014C2                     u2461:
  5026  0014C2  EF64  F00A         	goto	l2677
  5027  0014C6                     u2460:
  5028  0014C6  800E               	bsf	___fladd@aexp^0,0,c
  5029  0014C8                     l2677:
  5030  0014C8  500E               	movf	___fladd@aexp^0,w,c
  5031  0014CA  B4D8               	btfsc	status,2,c
  5032  0014CC  EF6A  F00A         	goto	u2471
  5033  0014D0  EF6C  F00A         	goto	u2470
  5034  0014D4                     u2471:
  5035  0014D4  EF81  F00A         	goto	l2687
  5036  0014D8                     u2470:
  5037  0014D8  280E               	incf	___fladd@aexp^0,w,c
  5038  0014DA  A4D8               	btfss	status,2,c
  5039  0014DC  EF72  F00A         	goto	u2481
  5040  0014E0  EF74  F00A         	goto	u2480
  5041  0014E4                     u2481:
  5042  0014E4  EF7C  F00A         	goto	l2683
  5043  0014E8                     u2480:
  5044  0014E8  0E00               	movlw	0
  5045  0014EA  6E05               	movwf	___fladd@a^0,c
  5046  0014EC  0E00               	movlw	0
  5047  0014EE  6E06               	movwf	(___fladd@a+1)^0,c
  5048  0014F0  0E00               	movlw	0
  5049  0014F2  6E07               	movwf	(___fladd@a+2)^0,c
  5050  0014F4  0E00               	movlw	0
  5051  0014F6  6E08               	movwf	(___fladd@a+3)^0,c
  5052  0014F8                     l2683:
  5053  0014F8  8E07               	bsf	(___fladd@a+2)^0,7,c
  5054  0014FA  0E00               	movlw	0
  5055  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  5056  0014FE  EF89  F00A         	goto	l2689
  5057  001502                     l2687:
  5058  001502  0E00               	movlw	0
  5059  001504  6E05               	movwf	___fladd@a^0,c
  5060  001506  0E00               	movlw	0
  5061  001508  6E06               	movwf	(___fladd@a+1)^0,c
  5062  00150A  0E00               	movlw	0
  5063  00150C  6E07               	movwf	(___fladd@a+2)^0,c
  5064  00150E  0E00               	movlw	0
  5065  001510  6E08               	movwf	(___fladd@a+3)^0,c
  5066  001512                     l2689:
  5067  001512  500F               	movf	___fladd@bexp^0,w,c
  5068  001514  5C0E               	subwf	___fladd@aexp^0,w,c
  5069  001516  B0D8               	btfsc	status,0,c
  5070  001518  EF90  F00A         	goto	u2491
  5071  00151C  EF92  F00A         	goto	u2490
  5072  001520                     u2491:
  5073  001520  EFB9  F00A         	goto	l2725
  5074  001524                     u2490:
  5075  001524  AC0D               	btfss	___fladd@signs^0,6,c
  5076  001526  EF97  F00A         	goto	u2501
  5077  00152A  EF99  F00A         	goto	u2500
  5078  00152E                     u2501:
  5079  00152E  EF9B  F00A         	goto	l2695
  5080  001532                     u2500:
  5081  001532  0E80               	movlw	128
  5082  001534  1A0D               	xorwf	___fladd@signs^0,f,c
  5083  001536                     l2695:
  5084  001536  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5085  00153A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5086  00153E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5087  001542  C001  F010         	movff	___fladd@b,___fladd@grs
  5088  001546  C005  F001         	movff	___fladd@a,___fladd@b
  5089  00154A  C010  F005         	movff	___fladd@grs,___fladd@a
  5090  00154E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5091  001552  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5092  001556  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5093  00155A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5094  00155E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5095  001562  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5096  001566  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5097  00156A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5098  00156E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5099  001572                     l2725:
  5100  001572  0E00               	movlw	0
  5101  001574  6E10               	movwf	___fladd@grs^0,c
  5102  001576  500F               	movf	___fladd@bexp^0,w,c
  5103  001578  C00E  F009         	movff	___fladd@aexp,??___fladd
  5104  00157C  6A0A               	clrf	(??___fladd+1)^0,c
  5105  00157E  5E09               	subwf	??___fladd^0,f,c
  5106  001580  0E00               	movlw	0
  5107  001582  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5108  001584  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5109  001586  EFCE  F00A         	goto	u2511
  5110  00158A  500A               	movf	(??___fladd+1)^0,w,c
  5111  00158C  E109               	bnz	u2510
  5112  00158E  0E1A               	movlw	26
  5113  001590  5C09               	subwf	??___fladd^0,w,c
  5114  001592  A0D8               	btfss	status,0,c
  5115  001594  EFCE  F00A         	goto	u2511
  5116  001598  EFD0  F00A         	goto	u2510
  5117  00159C                     u2511:
  5118  00159C  EF07  F00B         	goto	l670
  5119  0015A0                     u2510:
  5120  0015A0  5001               	movf	___fladd@b^0,w,c
  5121  0015A2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5122  0015A4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5123  0015A6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5124  0015A8  A4D8               	btfss	status,2,c
  5125  0015AA  EFD9  F00A         	goto	u2521
  5126  0015AE  EFDC  F00A         	goto	u2520
  5127  0015B2                     u2521:
  5128  0015B2  0E01               	movlw	1
  5129  0015B4  EFDD  F00A         	goto	u2530
  5130  0015B8                     u2520:
  5131  0015B8  0E00               	movlw	0
  5132  0015BA                     u2530:
  5133  0015BA  6E10               	movwf	___fladd@grs^0,c
  5134  0015BC  0E00               	movlw	0
  5135  0015BE  6E01               	movwf	___fladd@b^0,c
  5136  0015C0  0E00               	movlw	0
  5137  0015C2  6E02               	movwf	(___fladd@b+1)^0,c
  5138  0015C4  0E00               	movlw	0
  5139  0015C6  6E03               	movwf	(___fladd@b+2)^0,c
  5140  0015C8  0E00               	movlw	0
  5141  0015CA  6E04               	movwf	(___fladd@b+3)^0,c
  5142  0015CC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5143  0015D0  EF10  F00B         	goto	l669
  5144  0015D4                     l671:
  5145  0015D4  A010               	btfss	___fladd@grs^0,0,c
  5146  0015D6  EFEF  F00A         	goto	u2541
  5147  0015DA  EFF1  F00A         	goto	u2540
  5148  0015DE                     u2541:
  5149  0015DE  EFF7  F00A         	goto	l2737
  5150  0015E2                     u2540:
  5151  0015E2  90D8               	bcf	status,0,c
  5152  0015E4  3010               	rrcf	___fladd@grs^0,w,c
  5153  0015E6  0901               	iorlw	1
  5154  0015E8  6E10               	movwf	___fladd@grs^0,c
  5155  0015EA  EFF9  F00A         	goto	l2739
  5156  0015EE                     l2737:
  5157  0015EE  90D8               	bcf	status,0,c
  5158  0015F0  3210               	rrcf	___fladd@grs^0,f,c
  5159  0015F2                     l2739:
  5160  0015F2  A001               	btfss	___fladd@b^0,0,c
  5161  0015F4  EFFE  F00A         	goto	u2551
  5162  0015F8  EF00  F00B         	goto	u2550
  5163  0015FC                     u2551:
  5164  0015FC  EF01  F00B         	goto	l2743
  5165  001600                     u2550:
  5166  001600  8E10               	bsf	___fladd@grs^0,7,c
  5167  001602                     l2743:
  5168  001602  3404               	rlcf	(___fladd@b+3)^0,w,c
  5169  001604  3204               	rrcf	(___fladd@b+3)^0,f,c
  5170  001606  3203               	rrcf	(___fladd@b+2)^0,f,c
  5171  001608  3202               	rrcf	(___fladd@b+1)^0,f,c
  5172  00160A  3201               	rrcf	___fladd@b^0,f,c
  5173  00160C  2A0F               	incf	___fladd@bexp^0,f,c
  5174  00160E                     l670:
  5175  00160E  500E               	movf	___fladd@aexp^0,w,c
  5176  001610  5C0F               	subwf	___fladd@bexp^0,w,c
  5177  001612  A0D8               	btfss	status,0,c
  5178  001614  EF0E  F00B         	goto	u2561
  5179  001618  EF10  F00B         	goto	u2560
  5180  00161C                     u2561:
  5181  00161C  EFEA  F00A         	goto	l671
  5182  001620                     u2560:
  5183  001620                     l669:
  5184  001620  BC0D               	btfsc	___fladd@signs^0,6,c
  5185  001622  EF15  F00B         	goto	u2571
  5186  001626  EF17  F00B         	goto	u2570
  5187  00162A                     u2571:
  5188  00162A  EF57  F00B         	goto	l2771
  5189  00162E                     u2570:
  5190  00162E  500F               	movf	___fladd@bexp^0,w,c
  5191  001630  A4D8               	btfss	status,2,c
  5192  001632  EF1D  F00B         	goto	u2581
  5193  001636  EF1F  F00B         	goto	u2580
  5194  00163A                     u2581:
  5195  00163A  EF29  F00B         	goto	l2753
  5196  00163E                     u2580:
  5197  00163E  0E00               	movlw	0
  5198  001640  6E01               	movwf	?___fladd^0,c
  5199  001642  0E00               	movlw	0
  5200  001644  6E02               	movwf	(?___fladd+1)^0,c
  5201  001646  0E00               	movlw	0
  5202  001648  6E03               	movwf	(?___fladd+2)^0,c
  5203  00164A  0E00               	movlw	0
  5204  00164C  6E04               	movwf	(?___fladd+3)^0,c
  5205  00164E  EF78  F00C         	goto	l678
  5206  001652                     l2753:
  5207  001652  5005               	movf	___fladd@a^0,w,c
  5208  001654  2601               	addwf	___fladd@b^0,f,c
  5209  001656  5006               	movf	(___fladd@a+1)^0,w,c
  5210  001658  2202               	addwfc	(___fladd@b+1)^0,f,c
  5211  00165A  5007               	movf	(___fladd@a+2)^0,w,c
  5212  00165C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5213  00165E  5008               	movf	(___fladd@a+3)^0,w,c
  5214  001660  2204               	addwfc	(___fladd@b+3)^0,f,c
  5215  001662  A004               	btfss	(___fladd@b+3)^0,0,c
  5216  001664  EF36  F00B         	goto	u2591
  5217  001668  EF38  F00B         	goto	u2590
  5218  00166C                     u2591:
  5219  00166C  EFE4  F00B         	goto	l2807
  5220  001670                     u2590:
  5221  001670  A010               	btfss	___fladd@grs^0,0,c
  5222  001672  EF3D  F00B         	goto	u2601
  5223  001676  EF3F  F00B         	goto	u2600
  5224  00167A                     u2601:
  5225  00167A  EF45  F00B         	goto	l2761
  5226  00167E                     u2600:
  5227  00167E  90D8               	bcf	status,0,c
  5228  001680  3010               	rrcf	___fladd@grs^0,w,c
  5229  001682  0901               	iorlw	1
  5230  001684  6E10               	movwf	___fladd@grs^0,c
  5231  001686  EF47  F00B         	goto	l2763
  5232  00168A                     l2761:
  5233  00168A  90D8               	bcf	status,0,c
  5234  00168C  3210               	rrcf	___fladd@grs^0,f,c
  5235  00168E                     l2763:
  5236  00168E  A001               	btfss	___fladd@b^0,0,c
  5237  001690  EF4C  F00B         	goto	u2611
  5238  001694  EF4E  F00B         	goto	u2610
  5239  001698                     u2611:
  5240  001698  EF4F  F00B         	goto	l2767
  5241  00169C                     u2610:
  5242  00169C  8E10               	bsf	___fladd@grs^0,7,c
  5243  00169E                     l2767:
  5244  00169E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5245  0016A0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5246  0016A2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5247  0016A4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5248  0016A6  3201               	rrcf	___fladd@b^0,f,c
  5249  0016A8  2A0F               	incf	___fladd@bexp^0,f,c
  5250  0016AA  EFE4  F00B         	goto	l2807
  5251  0016AE                     l2771:
  5252  0016AE  5005               	movf	___fladd@a^0,w,c
  5253  0016B0  5C01               	subwf	___fladd@b^0,w,c
  5254  0016B2  5006               	movf	(___fladd@a+1)^0,w,c
  5255  0016B4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5256  0016B6  5007               	movf	(___fladd@a+2)^0,w,c
  5257  0016B8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5258  0016BA  5004               	movf	(___fladd@b+3)^0,w,c
  5259  0016BC  0A80               	xorlw	128
  5260  0016BE  6E09               	movwf	??___fladd^0,c
  5261  0016C0  5008               	movf	(___fladd@a+3)^0,w,c
  5262  0016C2  0A80               	xorlw	128
  5263  0016C4  5809               	subwfb	??___fladd^0,w,c
  5264  0016C6  B0D8               	btfsc	status,0,c
  5265  0016C8  EF68  F00B         	goto	u2621
  5266  0016CC  EF6A  F00B         	goto	u2620
  5267  0016D0                     u2621:
  5268  0016D0  EF95  F00B         	goto	l2781
  5269  0016D4                     u2620:
  5270  0016D4  5001               	movf	___fladd@b^0,w,c
  5271  0016D6  5C05               	subwf	___fladd@a^0,w,c
  5272  0016D8  6E09               	movwf	??___fladd^0,c
  5273  0016DA  5002               	movf	(___fladd@b+1)^0,w,c
  5274  0016DC  5806               	subwfb	(___fladd@a+1)^0,w,c
  5275  0016DE  6E0A               	movwf	(??___fladd+1)^0,c
  5276  0016E0  5003               	movf	(___fladd@b+2)^0,w,c
  5277  0016E2  5807               	subwfb	(___fladd@a+2)^0,w,c
  5278  0016E4  6E0B               	movwf	(??___fladd+2)^0,c
  5279  0016E6  5004               	movf	(___fladd@b+3)^0,w,c
  5280  0016E8  5808               	subwfb	(___fladd@a+3)^0,w,c
  5281  0016EA  6E0C               	movwf	(??___fladd+3)^0,c
  5282  0016EC  0EFF               	movlw	255
  5283  0016EE  2409               	addwf	??___fladd^0,w,c
  5284  0016F0  6E01               	movwf	___fladd@b^0,c
  5285  0016F2  0EFF               	movlw	255
  5286  0016F4  200A               	addwfc	(??___fladd+1)^0,w,c
  5287  0016F6  6E02               	movwf	(___fladd@b+1)^0,c
  5288  0016F8  0EFF               	movlw	255
  5289  0016FA  200B               	addwfc	(??___fladd+2)^0,w,c
  5290  0016FC  6E03               	movwf	(___fladd@b+2)^0,c
  5291  0016FE  0EFF               	movlw	255
  5292  001700  200C               	addwfc	(??___fladd+3)^0,w,c
  5293  001702  6E04               	movwf	(___fladd@b+3)^0,c
  5294  001704  0E80               	movlw	128
  5295  001706  1A0D               	xorwf	___fladd@signs^0,f,c
  5296  001708  6C10               	negf	___fladd@grs^0,c
  5297  00170A  5010               	movf	___fladd@grs^0,w,c
  5298  00170C  A4D8               	btfss	status,2,c
  5299  00170E  EF8B  F00B         	goto	u2631
  5300  001712  EF8D  F00B         	goto	u2630
  5301  001716                     u2631:
  5302  001716  EF9D  F00B         	goto	l686
  5303  00171A                     u2630:
  5304  00171A  0E01               	movlw	1
  5305  00171C  2601               	addwf	___fladd@b^0,f,c
  5306  00171E  0E00               	movlw	0
  5307  001720  2202               	addwfc	(___fladd@b+1)^0,f,c
  5308  001722  2203               	addwfc	(___fladd@b+2)^0,f,c
  5309  001724  2204               	addwfc	(___fladd@b+3)^0,f,c
  5310  001726  EF9D  F00B         	goto	l686
  5311  00172A                     l2781:
  5312  00172A  5005               	movf	___fladd@a^0,w,c
  5313  00172C  5E01               	subwf	___fladd@b^0,f,c
  5314  00172E  5006               	movf	(___fladd@a+1)^0,w,c
  5315  001730  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5316  001732  5007               	movf	(___fladd@a+2)^0,w,c
  5317  001734  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5318  001736  5008               	movf	(___fladd@a+3)^0,w,c
  5319  001738  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5320  00173A                     l686:
  5321  00173A  5001               	movf	___fladd@b^0,w,c
  5322  00173C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5323  00173E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5324  001740  1004               	iorwf	(___fladd@b+3)^0,w,c
  5325  001742  A4D8               	btfss	status,2,c
  5326  001744  EFA6  F00B         	goto	u2641
  5327  001748  EFA8  F00B         	goto	u2640
  5328  00174C                     u2641:
  5329  00174C  EFDD  F00B         	goto	l2805
  5330  001750                     u2640:
  5331  001750  5010               	movf	___fladd@grs^0,w,c
  5332  001752  A4D8               	btfss	status,2,c
  5333  001754  EFAE  F00B         	goto	u2651
  5334  001758  EFB0  F00B         	goto	u2650
  5335  00175C                     u2651:
  5336  00175C  EFDD  F00B         	goto	l2805
  5337  001760                     u2650:
  5338  001760  0E00               	movlw	0
  5339  001762  6E01               	movwf	?___fladd^0,c
  5340  001764  0E00               	movlw	0
  5341  001766  6E02               	movwf	(?___fladd+1)^0,c
  5342  001768  0E00               	movlw	0
  5343  00176A  6E03               	movwf	(?___fladd+2)^0,c
  5344  00176C  0E00               	movlw	0
  5345  00176E  6E04               	movwf	(?___fladd+3)^0,c
  5346  001770  EF78  F00C         	goto	l678
  5347  001774                     l2789:
  5348  001774  90D8               	bcf	status,0,c
  5349  001776  3601               	rlcf	___fladd@b^0,f,c
  5350  001778  3602               	rlcf	(___fladd@b+1)^0,f,c
  5351  00177A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5352  00177C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5353  00177E  AE10               	btfss	___fladd@grs^0,7,c
  5354  001780  EFC4  F00B         	goto	u2661
  5355  001784  EFC6  F00B         	goto	u2660
  5356  001788                     u2661:
  5357  001788  EFC7  F00B         	goto	l2795
  5358  00178C                     u2660:
  5359  00178C  8001               	bsf	___fladd@b^0,0,c
  5360  00178E                     l2795:
  5361  00178E  A010               	btfss	___fladd@grs^0,0,c
  5362  001790  EFCC  F00B         	goto	u2671
  5363  001794  EFCE  F00B         	goto	u2670
  5364  001798                     u2671:
  5365  001798  EFD2  F00B         	goto	l2799
  5366  00179C                     u2670:
  5367  00179C  80D8               	bsf	status,0,c
  5368  00179E  3610               	rlcf	___fladd@grs^0,f,c
  5369  0017A0  EFD4  F00B         	goto	l2801
  5370  0017A4                     l2799:
  5371  0017A4  90D8               	bcf	status,0,c
  5372  0017A6  3610               	rlcf	___fladd@grs^0,f,c
  5373  0017A8                     l2801:
  5374  0017A8  500F               	movf	___fladd@bexp^0,w,c
  5375  0017AA  B4D8               	btfsc	status,2,c
  5376  0017AC  EFDA  F00B         	goto	u2681
  5377  0017B0  EFDC  F00B         	goto	u2680
  5378  0017B4                     u2681:
  5379  0017B4  EFDD  F00B         	goto	l2805
  5380  0017B8                     u2680:
  5381  0017B8  060F               	decf	___fladd@bexp^0,f,c
  5382  0017BA                     l2805:
  5383  0017BA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5384  0017BC  EFE2  F00B         	goto	u2691
  5385  0017C0  EFE4  F00B         	goto	u2690
  5386  0017C4                     u2691:
  5387  0017C4  EFBA  F00B         	goto	l2789
  5388  0017C8                     u2690:
  5389  0017C8                     l2807:
  5390  0017C8  0E00               	movlw	0
  5391  0017CA  6E0E               	movwf	___fladd@aexp^0,c
  5392  0017CC  AE10               	btfss	___fladd@grs^0,7,c
  5393  0017CE  EFEB  F00B         	goto	u2701
  5394  0017D2  EFED  F00B         	goto	u2700
  5395  0017D6                     u2701:
  5396  0017D6  EF05  F00C         	goto	l695
  5397  0017DA                     u2700:
  5398  0017DA  C010  F009         	movff	___fladd@grs,??___fladd
  5399  0017DE  0E7F               	movlw	127
  5400  0017E0  1609               	andwf	??___fladd^0,f,c
  5401  0017E2  B4D8               	btfsc	status,2,c
  5402  0017E4  EFF6  F00B         	goto	u2711
  5403  0017E8  EFF8  F00B         	goto	u2710
  5404  0017EC                     u2711:
  5405  0017EC  EFFC  F00B         	goto	l696
  5406  0017F0                     u2710:
  5407  0017F0                     l2813:
  5408  0017F0  0E01               	movlw	1
  5409  0017F2  6E0E               	movwf	___fladd@aexp^0,c
  5410  0017F4  EF05  F00C         	goto	l695
  5411  0017F8                     l696:
  5412  0017F8  A001               	btfss	___fladd@b^0,0,c
  5413  0017FA  EF01  F00C         	goto	u2721
  5414  0017FE  EF03  F00C         	goto	u2720
  5415  001802                     u2721:
  5416  001802  EF05  F00C         	goto	l695
  5417  001806                     u2720:
  5418  001806  EFF8  F00B         	goto	l2813
  5419  00180A                     l695:
  5420  00180A  500E               	movf	___fladd@aexp^0,w,c
  5421  00180C  B4D8               	btfsc	status,2,c
  5422  00180E  EF0B  F00C         	goto	u2731
  5423  001812  EF0D  F00C         	goto	u2730
  5424  001816                     u2731:
  5425  001816  EF38  F00C         	goto	l2825
  5426  00181A                     u2730:
  5427  00181A  0E01               	movlw	1
  5428  00181C  2601               	addwf	___fladd@b^0,f,c
  5429  00181E  0E00               	movlw	0
  5430  001820  2202               	addwfc	(___fladd@b+1)^0,f,c
  5431  001822  2203               	addwfc	(___fladd@b+2)^0,f,c
  5432  001824  2204               	addwfc	(___fladd@b+3)^0,f,c
  5433  001826  A004               	btfss	(___fladd@b+3)^0,0,c
  5434  001828  EF18  F00C         	goto	u2741
  5435  00182C  EF1A  F00C         	goto	u2740
  5436  001830                     u2741:
  5437  001830  EF38  F00C         	goto	l2825
  5438  001834                     u2740:
  5439  001834  C001  F009         	movff	___fladd@b,??___fladd
  5440  001838  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5441  00183C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5442  001840  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5443  001844  340C               	rlcf	(??___fladd+3)^0,w,c
  5444  001846  320C               	rrcf	(??___fladd+3)^0,f,c
  5445  001848  320B               	rrcf	(??___fladd+2)^0,f,c
  5446  00184A  320A               	rrcf	(??___fladd+1)^0,f,c
  5447  00184C  3209               	rrcf	??___fladd^0,f,c
  5448  00184E  C009  F001         	movff	??___fladd,___fladd@b
  5449  001852  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5450  001856  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5451  00185A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5452  00185E  280F               	incf	___fladd@bexp^0,w,c
  5453  001860  B4D8               	btfsc	status,2,c
  5454  001862  EF35  F00C         	goto	u2751
  5455  001866  EF37  F00C         	goto	u2750
  5456  00186A                     u2751:
  5457  00186A  EF38  F00C         	goto	l2825
  5458  00186E                     u2750:
  5459  00186E  2A0F               	incf	___fladd@bexp^0,f,c
  5460  001870                     l2825:
  5461  001870  280F               	incf	___fladd@bexp^0,w,c
  5462  001872  B4D8               	btfsc	status,2,c
  5463  001874  EF3E  F00C         	goto	u2761
  5464  001878  EF40  F00C         	goto	u2760
  5465  00187C                     u2761:
  5466  00187C  EF48  F00C         	goto	l2829
  5467  001880                     u2760:
  5468  001880  500F               	movf	___fladd@bexp^0,w,c
  5469  001882  A4D8               	btfss	status,2,c
  5470  001884  EF46  F00C         	goto	u2771
  5471  001888  EF48  F00C         	goto	u2770
  5472  00188C                     u2771:
  5473  00188C  EF5A  F00C         	goto	l2833
  5474  001890                     u2770:
  5475  001890                     l2829:
  5476  001890  0E00               	movlw	0
  5477  001892  6E01               	movwf	___fladd@b^0,c
  5478  001894  0E00               	movlw	0
  5479  001896  6E02               	movwf	(___fladd@b+1)^0,c
  5480  001898  0E00               	movlw	0
  5481  00189A  6E03               	movwf	(___fladd@b+2)^0,c
  5482  00189C  0E00               	movlw	0
  5483  00189E  6E04               	movwf	(___fladd@b+3)^0,c
  5484  0018A0  500F               	movf	___fladd@bexp^0,w,c
  5485  0018A2  A4D8               	btfss	status,2,c
  5486  0018A4  EF56  F00C         	goto	u2781
  5487  0018A8  EF58  F00C         	goto	u2780
  5488  0018AC                     u2781:
  5489  0018AC  EF5A  F00C         	goto	l2833
  5490  0018B0                     u2780:
  5491  0018B0  0E00               	movlw	0
  5492  0018B2  6E0D               	movwf	___fladd@signs^0,c
  5493  0018B4                     l2833:
  5494  0018B4  A00F               	btfss	___fladd@bexp^0,0,c
  5495  0018B6  EF5F  F00C         	goto	u2791
  5496  0018BA  EF61  F00C         	goto	u2790
  5497  0018BE                     u2791:
  5498  0018BE  EF64  F00C         	goto	l2837
  5499  0018C2                     u2790:
  5500  0018C2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5501  0018C4  EF65  F00C         	goto	l2839
  5502  0018C8                     l2837:
  5503  0018C8  9E03               	bcf	(___fladd@b+2)^0,7,c
  5504  0018CA                     l2839:
  5505  0018CA  90D8               	bcf	status,0,c
  5506  0018CC  300F               	rrcf	___fladd@bexp^0,w,c
  5507  0018CE  6E04               	movwf	(___fladd@b+3)^0,c
  5508  0018D0  AE0D               	btfss	___fladd@signs^0,7,c
  5509  0018D2  EF6D  F00C         	goto	u2801
  5510  0018D6  EF6F  F00C         	goto	u2800
  5511  0018DA                     u2801:
  5512  0018DA  EF70  F00C         	goto	l2845
  5513  0018DE                     u2800:
  5514  0018DE  8E04               	bsf	(___fladd@b+3)^0,7,c
  5515  0018E0                     l2845:
  5516  0018E0  C001  F001         	movff	___fladd@b,?___fladd
  5517  0018E4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5518  0018E8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5519  0018EC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5520  0018F0                     l678:
  5521  0018F0  0012               	return		;funcret
  5522  0018F2                     __end_of___fladd:
  5523                           	callstack 0
  5524                           
  5525 ;; *************** function ___flneg *****************
  5526 ;; Defined at:
  5527 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  f1              4    0[COMRAM] unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4    0[COMRAM] unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         4       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        4 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_efgtoa
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text19
  5555  003814                     __ptext19:
  5556                           	callstack 0
  5557  003814                     ___flneg:
  5558                           	callstack 26
  5559  003814  5001               	movf	___flneg@f1^0,w,c
  5560  003816  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5561  003818  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5562  00381A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5563  00381C  B4D8               	btfsc	status,2,c
  5564  00381E  EF13  F01C         	goto	u3511
  5565  003822  EF15  F01C         	goto	u3510
  5566  003826                     u3511:
  5567  003826  EF1D  F01C         	goto	l3297
  5568  00382A                     u3510:
  5569  00382A  0E00               	movlw	0
  5570  00382C  1A01               	xorwf	___flneg@f1^0,f,c
  5571  00382E  0E00               	movlw	0
  5572  003830  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5573  003832  0E00               	movlw	0
  5574  003834  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5575  003836  0E80               	movlw	128
  5576  003838  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5577  00383A                     l3297:
  5578  00383A  C001  F001         	movff	___flneg@f1,?___flneg
  5579  00383E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5580  003842  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5581  003846  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5582  00384A  0012               	return		;funcret
  5583  00384C                     __end_of___flneg:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function ___flmul *****************
  5587 ;; Defined at:
  5588 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  b               4   14[COMRAM] unsigned char 
  5591 ;;  a               4   18[COMRAM] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  prod            4   33[COMRAM] struct .
  5594 ;;  grs             4   27[COMRAM] unsigned long 
  5595 ;;  temp            2   37[COMRAM] struct .
  5596 ;;  bexp            1   32[COMRAM] unsigned char 
  5597 ;;  aexp            1   31[COMRAM] unsigned char 
  5598 ;;  sign            1   26[COMRAM] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  4   14[COMRAM] unsigned char 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, prodl, prodh
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5608 ;;      Params:         8       0       0       0       0       0       0       0       0
  5609 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5610 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5611 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5612 ;;Total ram usage:       25 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_main
  5618 ;;		_efgtoa
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text20
  5623  001D28                     __ptext20:
  5624                           	callstack 0
  5625  001D28                     ___flmul:
  5626                           	callstack 26
  5627  001D28  5012               	movf	(___flmul@b+3)^0,w,c
  5628  001D2A  0B80               	andlw	128
  5629  001D2C  6E1B               	movwf	___flmul@sign^0,c
  5630  001D2E  5012               	movf	(___flmul@b+3)^0,w,c
  5631  001D30  2412               	addwf	(___flmul@b+3)^0,w,c
  5632  001D32  6E21               	movwf	___flmul@bexp^0,c
  5633  001D34  AE11               	btfss	(___flmul@b+2)^0,7,c
  5634  001D36  EF9F  F00E         	goto	u3121
  5635  001D3A  EFA1  F00E         	goto	u3120
  5636  001D3E                     u3121:
  5637  001D3E  EFA2  F00E         	goto	l3045
  5638  001D42                     u3120:
  5639  001D42  8021               	bsf	___flmul@bexp^0,0,c
  5640  001D44                     l3045:
  5641  001D44  5021               	movf	___flmul@bexp^0,w,c
  5642  001D46  B4D8               	btfsc	status,2,c
  5643  001D48  EFA8  F00E         	goto	u3131
  5644  001D4C  EFAA  F00E         	goto	u3130
  5645  001D50                     u3131:
  5646  001D50  EFBD  F00E         	goto	l3053
  5647  001D54                     u3130:
  5648  001D54  2821               	incf	___flmul@bexp^0,w,c
  5649  001D56  A4D8               	btfss	status,2,c
  5650  001D58  EFB0  F00E         	goto	u3141
  5651  001D5C  EFB2  F00E         	goto	u3140
  5652  001D60                     u3141:
  5653  001D60  EFBA  F00E         	goto	l3051
  5654  001D64                     u3140:
  5655  001D64  0E00               	movlw	0
  5656  001D66  6E0F               	movwf	___flmul@b^0,c
  5657  001D68  0E00               	movlw	0
  5658  001D6A  6E10               	movwf	(___flmul@b+1)^0,c
  5659  001D6C  0E00               	movlw	0
  5660  001D6E  6E11               	movwf	(___flmul@b+2)^0,c
  5661  001D70  0E00               	movlw	0
  5662  001D72  6E12               	movwf	(___flmul@b+3)^0,c
  5663  001D74                     l3051:
  5664  001D74  8E11               	bsf	(___flmul@b+2)^0,7,c
  5665  001D76  EFC5  F00E         	goto	l3055
  5666  001D7A                     l3053:
  5667  001D7A  0E00               	movlw	0
  5668  001D7C  6E0F               	movwf	___flmul@b^0,c
  5669  001D7E  0E00               	movlw	0
  5670  001D80  6E10               	movwf	(___flmul@b+1)^0,c
  5671  001D82  0E00               	movlw	0
  5672  001D84  6E11               	movwf	(___flmul@b+2)^0,c
  5673  001D86  0E00               	movlw	0
  5674  001D88  6E12               	movwf	(___flmul@b+3)^0,c
  5675  001D8A                     l3055:
  5676  001D8A  5016               	movf	(___flmul@a+3)^0,w,c
  5677  001D8C  0B80               	andlw	128
  5678  001D8E  1A1B               	xorwf	___flmul@sign^0,f,c
  5679  001D90  5016               	movf	(___flmul@a+3)^0,w,c
  5680  001D92  2416               	addwf	(___flmul@a+3)^0,w,c
  5681  001D94  6E20               	movwf	___flmul@aexp^0,c
  5682  001D96  AE15               	btfss	(___flmul@a+2)^0,7,c
  5683  001D98  EFD0  F00E         	goto	u3151
  5684  001D9C  EFD2  F00E         	goto	u3150
  5685  001DA0                     u3151:
  5686  001DA0  EFD3  F00E         	goto	l3063
  5687  001DA4                     u3150:
  5688  001DA4  8020               	bsf	___flmul@aexp^0,0,c
  5689  001DA6                     l3063:
  5690  001DA6  5020               	movf	___flmul@aexp^0,w,c
  5691  001DA8  B4D8               	btfsc	status,2,c
  5692  001DAA  EFD9  F00E         	goto	u3161
  5693  001DAE  EFDB  F00E         	goto	u3160
  5694  001DB2                     u3161:
  5695  001DB2  EFEE  F00E         	goto	l3071
  5696  001DB6                     u3160:
  5697  001DB6  2820               	incf	___flmul@aexp^0,w,c
  5698  001DB8  A4D8               	btfss	status,2,c
  5699  001DBA  EFE1  F00E         	goto	u3171
  5700  001DBE  EFE3  F00E         	goto	u3170
  5701  001DC2                     u3171:
  5702  001DC2  EFEB  F00E         	goto	l3069
  5703  001DC6                     u3170:
  5704  001DC6  0E00               	movlw	0
  5705  001DC8  6E13               	movwf	___flmul@a^0,c
  5706  001DCA  0E00               	movlw	0
  5707  001DCC  6E14               	movwf	(___flmul@a+1)^0,c
  5708  001DCE  0E00               	movlw	0
  5709  001DD0  6E15               	movwf	(___flmul@a+2)^0,c
  5710  001DD2  0E00               	movlw	0
  5711  001DD4  6E16               	movwf	(___flmul@a+3)^0,c
  5712  001DD6                     l3069:
  5713  001DD6  8E15               	bsf	(___flmul@a+2)^0,7,c
  5714  001DD8  EFF6  F00E         	goto	l755
  5715  001DDC                     l3071:
  5716  001DDC  0E00               	movlw	0
  5717  001DDE  6E13               	movwf	___flmul@a^0,c
  5718  001DE0  0E00               	movlw	0
  5719  001DE2  6E14               	movwf	(___flmul@a+1)^0,c
  5720  001DE4  0E00               	movlw	0
  5721  001DE6  6E15               	movwf	(___flmul@a+2)^0,c
  5722  001DE8  0E00               	movlw	0
  5723  001DEA  6E16               	movwf	(___flmul@a+3)^0,c
  5724  001DEC                     l755:
  5725  001DEC  5020               	movf	___flmul@aexp^0,w,c
  5726  001DEE  B4D8               	btfsc	status,2,c
  5727  001DF0  EFFC  F00E         	goto	u3181
  5728  001DF4  EFFE  F00E         	goto	u3180
  5729  001DF8                     u3181:
  5730  001DF8  EF06  F00F         	goto	l3075
  5731  001DFC                     u3180:
  5732  001DFC  5021               	movf	___flmul@bexp^0,w,c
  5733  001DFE  A4D8               	btfss	status,2,c
  5734  001E00  EF04  F00F         	goto	u3191
  5735  001E04  EF06  F00F         	goto	u3190
  5736  001E08                     u3191:
  5737  001E08  EF10  F00F         	goto	l3079
  5738  001E0C                     u3190:
  5739  001E0C                     l3075:
  5740  001E0C  0E00               	movlw	0
  5741  001E0E  6E0F               	movwf	?___flmul^0,c
  5742  001E10  0E00               	movlw	0
  5743  001E12  6E10               	movwf	(?___flmul+1)^0,c
  5744  001E14  0E00               	movlw	0
  5745  001E16  6E11               	movwf	(?___flmul+2)^0,c
  5746  001E18  0E00               	movlw	0
  5747  001E1A  6E12               	movwf	(?___flmul+3)^0,c
  5748  001E1C  EFA8  F010         	goto	l759
  5749  001E20                     l3079:
  5750  001E20  5015               	movf	(___flmul@a+2)^0,w,c
  5751  001E22  020F               	mulwf	___flmul@b^0,c
  5752  001E24  CFF3 F026          	movff	prodl,___flmul@temp
  5753  001E28  CFF4 F027          	movff	prodh,___flmul@temp+1
  5754  001E2C  5026               	movf	___flmul@temp^0,w,c
  5755  001E2E  6E1C               	movwf	___flmul@grs^0,c
  5756  001E30  6A1D               	clrf	(___flmul@grs+1)^0,c
  5757  001E32  6A1E               	clrf	(___flmul@grs+2)^0,c
  5758  001E34  6A1F               	clrf	(___flmul@grs+3)^0,c
  5759  001E36  5027               	movf	(___flmul@temp+1)^0,w,c
  5760  001E38  6E22               	movwf	___flmul@prod^0,c
  5761  001E3A  6A23               	clrf	(___flmul@prod+1)^0,c
  5762  001E3C  6A24               	clrf	(___flmul@prod+2)^0,c
  5763  001E3E  6A25               	clrf	(___flmul@prod+3)^0,c
  5764  001E40  5014               	movf	(___flmul@a+1)^0,w,c
  5765  001E42  0210               	mulwf	(___flmul@b+1)^0,c
  5766  001E44  CFF3 F026          	movff	prodl,___flmul@temp
  5767  001E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  5768  001E4C  5026               	movf	___flmul@temp^0,w,c
  5769  001E4E  261C               	addwf	___flmul@grs^0,f,c
  5770  001E50  0E00               	movlw	0
  5771  001E52  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5772  001E54  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5773  001E56  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5774  001E58  5027               	movf	(___flmul@temp+1)^0,w,c
  5775  001E5A  2622               	addwf	___flmul@prod^0,f,c
  5776  001E5C  0E00               	movlw	0
  5777  001E5E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5778  001E60  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5779  001E62  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5780  001E64  5013               	movf	___flmul@a^0,w,c
  5781  001E66  0211               	mulwf	(___flmul@b+2)^0,c
  5782  001E68  CFF3 F026          	movff	prodl,___flmul@temp
  5783  001E6C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5784  001E70  5026               	movf	___flmul@temp^0,w,c
  5785  001E72  261C               	addwf	___flmul@grs^0,f,c
  5786  001E74  0E00               	movlw	0
  5787  001E76  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5788  001E78  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5789  001E7A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5790  001E7C  5027               	movf	(___flmul@temp+1)^0,w,c
  5791  001E7E  2622               	addwf	___flmul@prod^0,f,c
  5792  001E80  0E00               	movlw	0
  5793  001E82  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5794  001E84  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5795  001E86  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5796  001E88  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5797  001E8C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5798  001E90  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5799  001E94  6A1C               	clrf	___flmul@grs^0,c
  5800  001E96  5013               	movf	___flmul@a^0,w,c
  5801  001E98  0210               	mulwf	(___flmul@b+1)^0,c
  5802  001E9A  CFF3 F026          	movff	prodl,___flmul@temp
  5803  001E9E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5804  001EA2  5026               	movf	___flmul@temp^0,w,c
  5805  001EA4  261C               	addwf	___flmul@grs^0,f,c
  5806  001EA6  5027               	movf	(___flmul@temp+1)^0,w,c
  5807  001EA8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5808  001EAA  0E00               	movlw	0
  5809  001EAC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5810  001EAE  0E00               	movlw	0
  5811  001EB0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5812  001EB2  5014               	movf	(___flmul@a+1)^0,w,c
  5813  001EB4  020F               	mulwf	___flmul@b^0,c
  5814  001EB6  CFF3 F026          	movff	prodl,___flmul@temp
  5815  001EBA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5816  001EBE  5026               	movf	___flmul@temp^0,w,c
  5817  001EC0  261C               	addwf	___flmul@grs^0,f,c
  5818  001EC2  5027               	movf	(___flmul@temp+1)^0,w,c
  5819  001EC4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5820  001EC6  0E00               	movlw	0
  5821  001EC8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5822  001ECA  0E00               	movlw	0
  5823  001ECC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5824  001ECE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5825  001ED2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5826  001ED6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5827  001EDA  6A1C               	clrf	___flmul@grs^0,c
  5828  001EDC  5013               	movf	___flmul@a^0,w,c
  5829  001EDE  020F               	mulwf	___flmul@b^0,c
  5830  001EE0  CFF3 F026          	movff	prodl,___flmul@temp
  5831  001EE4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5832  001EE8  5026               	movf	___flmul@temp^0,w,c
  5833  001EEA  261C               	addwf	___flmul@grs^0,f,c
  5834  001EEC  5027               	movf	(___flmul@temp+1)^0,w,c
  5835  001EEE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5836  001EF0  0E00               	movlw	0
  5837  001EF2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5838  001EF4  0E00               	movlw	0
  5839  001EF6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5840  001EF8  5015               	movf	(___flmul@a+2)^0,w,c
  5841  001EFA  0210               	mulwf	(___flmul@b+1)^0,c
  5842  001EFC  CFF3 F026          	movff	prodl,___flmul@temp
  5843  001F00  CFF4 F027          	movff	prodh,___flmul@temp+1
  5844  001F04  5026               	movf	___flmul@temp^0,w,c
  5845  001F06  2622               	addwf	___flmul@prod^0,f,c
  5846  001F08  5027               	movf	(___flmul@temp+1)^0,w,c
  5847  001F0A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5848  001F0C  0E00               	movlw	0
  5849  001F0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5850  001F10  0E00               	movlw	0
  5851  001F12  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5852  001F14  5014               	movf	(___flmul@a+1)^0,w,c
  5853  001F16  0211               	mulwf	(___flmul@b+2)^0,c
  5854  001F18  CFF3 F026          	movff	prodl,___flmul@temp
  5855  001F1C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5856  001F20  5026               	movf	___flmul@temp^0,w,c
  5857  001F22  2622               	addwf	___flmul@prod^0,f,c
  5858  001F24  5027               	movf	(___flmul@temp+1)^0,w,c
  5859  001F26  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5860  001F28  0E00               	movlw	0
  5861  001F2A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5862  001F2C  0E00               	movlw	0
  5863  001F2E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5864  001F30  5015               	movf	(___flmul@a+2)^0,w,c
  5865  001F32  0211               	mulwf	(___flmul@b+2)^0,c
  5866  001F34  CFF3 F026          	movff	prodl,___flmul@temp
  5867  001F38  CFF4 F027          	movff	prodh,___flmul@temp+1
  5868  001F3C  5026               	movf	___flmul@temp^0,w,c
  5869  001F3E  6E17               	movwf	??___flmul^0,c
  5870  001F40  5027               	movf	(___flmul@temp+1)^0,w,c
  5871  001F42  6E18               	movwf	(??___flmul+1)^0,c
  5872  001F44  6A19               	clrf	(??___flmul+2)^0,c
  5873  001F46  6A1A               	clrf	(??___flmul+3)^0,c
  5874  001F48  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5875  001F4C  C018  F019         	movff	??___flmul+1,??___flmul+2
  5876  001F50  C017  F018         	movff	??___flmul,??___flmul+1
  5877  001F54  6A17               	clrf	??___flmul^0,c
  5878  001F56  5017               	movf	??___flmul^0,w,c
  5879  001F58  2622               	addwf	___flmul@prod^0,f,c
  5880  001F5A  5018               	movf	(??___flmul+1)^0,w,c
  5881  001F5C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5882  001F5E  5019               	movf	(??___flmul+2)^0,w,c
  5883  001F60  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5884  001F62  501A               	movf	(??___flmul+3)^0,w,c
  5885  001F64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5886  001F66  C01C  F017         	movff	___flmul@grs,??___flmul
  5887  001F6A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5888  001F6E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5889  001F72  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5890  001F76  0E19               	movlw	25
  5891  001F78  EFC3  F00F         	goto	u3200
  5892  001F7C                     u3205:
  5893  001F7C  90D8               	bcf	status,0,c
  5894  001F7E  321A               	rrcf	(??___flmul+3)^0,f,c
  5895  001F80  3219               	rrcf	(??___flmul+2)^0,f,c
  5896  001F82  3218               	rrcf	(??___flmul+1)^0,f,c
  5897  001F84  3217               	rrcf	??___flmul^0,f,c
  5898  001F86                     u3200:
  5899  001F86  2EE8               	decfsz	wreg,f,c
  5900  001F88  EFBE  F00F         	goto	u3205
  5901  001F8C  5017               	movf	??___flmul^0,w,c
  5902  001F8E  2622               	addwf	___flmul@prod^0,f,c
  5903  001F90  5018               	movf	(??___flmul+1)^0,w,c
  5904  001F92  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5905  001F94  5019               	movf	(??___flmul+2)^0,w,c
  5906  001F96  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5907  001F98  501A               	movf	(??___flmul+3)^0,w,c
  5908  001F9A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5909  001F9C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5910  001FA0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5911  001FA4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5912  001FA8  6A1C               	clrf	___flmul@grs^0,c
  5913  001FAA  5020               	movf	___flmul@aexp^0,w,c
  5914  001FAC  C021  F017         	movff	___flmul@bexp,??___flmul
  5915  001FB0  6A18               	clrf	(??___flmul+1)^0,c
  5916  001FB2  2617               	addwf	??___flmul^0,f,c
  5917  001FB4  0E00               	movlw	0
  5918  001FB6  2218               	addwfc	(??___flmul+1)^0,f,c
  5919  001FB8  0E82               	movlw	130
  5920  001FBA  2417               	addwf	??___flmul^0,w,c
  5921  001FBC  6E26               	movwf	___flmul@temp^0,c
  5922  001FBE  0EFF               	movlw	255
  5923  001FC0  2018               	addwfc	(??___flmul+1)^0,w,c
  5924  001FC2  6E27               	movwf	(___flmul@temp+1)^0,c
  5925  001FC4  EFF9  F00F         	goto	l3127
  5926  001FC8                     l3121:
  5927  001FC8  90D8               	bcf	status,0,c
  5928  001FCA  3622               	rlcf	___flmul@prod^0,f,c
  5929  001FCC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5930  001FCE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5931  001FD0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5932  001FD2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5933  001FD4  EFEE  F00F         	goto	u3211
  5934  001FD8  EFF0  F00F         	goto	u3210
  5935  001FDC                     u3211:
  5936  001FDC  EFF1  F00F         	goto	l762
  5937  001FE0                     u3210:
  5938  001FE0  8022               	bsf	___flmul@prod^0,0,c
  5939  001FE2                     l762:
  5940  001FE2  90D8               	bcf	status,0,c
  5941  001FE4  361C               	rlcf	___flmul@grs^0,f,c
  5942  001FE6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5943  001FE8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5944  001FEA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5945  001FEC  0626               	decf	___flmul@temp^0,f,c
  5946  001FEE  A0D8               	btfss	status,0,c
  5947  001FF0  0627               	decf	(___flmul@temp+1)^0,f,c
  5948  001FF2                     l3127:
  5949  001FF2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5950  001FF4  EFFE  F00F         	goto	u3221
  5951  001FF8  EF00  F010         	goto	u3220
  5952  001FFC                     u3221:
  5953  001FFC  EFE4  F00F         	goto	l3121
  5954  002000                     u3220:
  5955  002000  0E00               	movlw	0
  5956  002002  6E20               	movwf	___flmul@aexp^0,c
  5957  002004  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5958  002006  EF07  F010         	goto	u3231
  5959  00200A  EF09  F010         	goto	u3230
  5960  00200E                     u3231:
  5961  00200E  EF2D  F010         	goto	l764
  5962  002012                     u3230:
  5963  002012  0EFF               	movlw	255
  5964  002014  141C               	andwf	___flmul@grs^0,w,c
  5965  002016  6E17               	movwf	??___flmul^0,c
  5966  002018  0EFF               	movlw	255
  5967  00201A  141D               	andwf	(___flmul@grs+1)^0,w,c
  5968  00201C  6E18               	movwf	(??___flmul+1)^0,c
  5969  00201E  0EFF               	movlw	255
  5970  002020  141E               	andwf	(___flmul@grs+2)^0,w,c
  5971  002022  6E19               	movwf	(??___flmul+2)^0,c
  5972  002024  0E7F               	movlw	127
  5973  002026  141F               	andwf	(___flmul@grs+3)^0,w,c
  5974  002028  6E1A               	movwf	(??___flmul+3)^0,c
  5975  00202A  5017               	movf	??___flmul^0,w,c
  5976  00202C  1018               	iorwf	(??___flmul+1)^0,w,c
  5977  00202E  1019               	iorwf	(??___flmul+2)^0,w,c
  5978  002030  101A               	iorwf	(??___flmul+3)^0,w,c
  5979  002032  B4D8               	btfsc	status,2,c
  5980  002034  EF1E  F010         	goto	u3241
  5981  002038  EF20  F010         	goto	u3240
  5982  00203C                     u3241:
  5983  00203C  EF24  F010         	goto	l765
  5984  002040                     u3240:
  5985  002040                     l3135:
  5986  002040  0E01               	movlw	1
  5987  002042  6E20               	movwf	___flmul@aexp^0,c
  5988  002044  EF2D  F010         	goto	l764
  5989  002048                     l765:
  5990  002048  A022               	btfss	___flmul@prod^0,0,c
  5991  00204A  EF29  F010         	goto	u3251
  5992  00204E  EF2B  F010         	goto	u3250
  5993  002052                     u3251:
  5994  002052  EF2D  F010         	goto	l764
  5995  002056                     u3250:
  5996  002056  EF20  F010         	goto	l3135
  5997  00205A                     l764:
  5998  00205A  5020               	movf	___flmul@aexp^0,w,c
  5999  00205C  B4D8               	btfsc	status,2,c
  6000  00205E  EF33  F010         	goto	u3261
  6001  002062  EF35  F010         	goto	u3260
  6002  002066                     u3261:
  6003  002066  EF59  F010         	goto	l3147
  6004  00206A                     u3260:
  6005  00206A  0E01               	movlw	1
  6006  00206C  2622               	addwf	___flmul@prod^0,f,c
  6007  00206E  0E00               	movlw	0
  6008  002070  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6009  002072  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6010  002074  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6011  002076  A025               	btfss	(___flmul@prod+3)^0,0,c
  6012  002078  EF40  F010         	goto	u3271
  6013  00207C  EF42  F010         	goto	u3270
  6014  002080                     u3271:
  6015  002080  EF59  F010         	goto	l3147
  6016  002084                     u3270:
  6017  002084  C022  F017         	movff	___flmul@prod,??___flmul
  6018  002088  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6019  00208C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6020  002090  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6021  002094  341A               	rlcf	(??___flmul+3)^0,w,c
  6022  002096  321A               	rrcf	(??___flmul+3)^0,f,c
  6023  002098  3219               	rrcf	(??___flmul+2)^0,f,c
  6024  00209A  3218               	rrcf	(??___flmul+1)^0,f,c
  6025  00209C  3217               	rrcf	??___flmul^0,f,c
  6026  00209E  C017  F022         	movff	??___flmul,___flmul@prod
  6027  0020A2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6028  0020A6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6029  0020AA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6030  0020AE  4A26               	infsnz	___flmul@temp^0,f,c
  6031  0020B0  2A27               	incf	(___flmul@temp+1)^0,f,c
  6032  0020B2                     l3147:
  6033  0020B2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6034  0020B4  EF64  F010         	goto	u3281
  6035  0020B8  5027               	movf	(___flmul@temp+1)^0,w,c
  6036  0020BA  E108               	bnz	u3280
  6037  0020BC  2826               	incf	___flmul@temp^0,w,c
  6038  0020BE  A0D8               	btfss	status,0,c
  6039  0020C0  EF64  F010         	goto	u3281
  6040  0020C4  EF66  F010         	goto	u3280
  6041  0020C8                     u3281:
  6042  0020C8  EF70  F010         	goto	l3151
  6043  0020CC                     u3280:
  6044  0020CC  0E00               	movlw	0
  6045  0020CE  6E22               	movwf	___flmul@prod^0,c
  6046  0020D0  0E00               	movlw	0
  6047  0020D2  6E23               	movwf	(___flmul@prod+1)^0,c
  6048  0020D4  0E80               	movlw	128
  6049  0020D6  6E24               	movwf	(___flmul@prod+2)^0,c
  6050  0020D8  0E7F               	movlw	127
  6051  0020DA  6E25               	movwf	(___flmul@prod+3)^0,c
  6052  0020DC  EF9E  F010         	goto	l3163
  6053  0020E0                     l3151:
  6054  0020E0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6055  0020E2  EF7D  F010         	goto	u3290
  6056  0020E6  5027               	movf	(___flmul@temp+1)^0,w,c
  6057  0020E8  E106               	bnz	u3291
  6058  0020EA  0426               	decf	___flmul@temp^0,w,c
  6059  0020EC  B0D8               	btfsc	status,0,c
  6060  0020EE  EF7B  F010         	goto	u3291
  6061  0020F2  EF7D  F010         	goto	u3290
  6062  0020F6                     u3291:
  6063  0020F6  EF89  F010         	goto	l772
  6064  0020FA                     u3290:
  6065  0020FA  0E00               	movlw	0
  6066  0020FC  6E22               	movwf	___flmul@prod^0,c
  6067  0020FE  0E00               	movlw	0
  6068  002100  6E23               	movwf	(___flmul@prod+1)^0,c
  6069  002102  0E00               	movlw	0
  6070  002104  6E24               	movwf	(___flmul@prod+2)^0,c
  6071  002106  0E00               	movlw	0
  6072  002108  6E25               	movwf	(___flmul@prod+3)^0,c
  6073  00210A  0E00               	movlw	0
  6074  00210C  6E1B               	movwf	___flmul@sign^0,c
  6075  00210E  EF9E  F010         	goto	l3163
  6076  002112                     l772:
  6077  002112  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6078  002116  0EFF               	movlw	255
  6079  002118  1622               	andwf	___flmul@prod^0,f,c
  6080  00211A  0EFF               	movlw	255
  6081  00211C  1623               	andwf	(___flmul@prod+1)^0,f,c
  6082  00211E  0E7F               	movlw	127
  6083  002120  1624               	andwf	(___flmul@prod+2)^0,f,c
  6084  002122  0E00               	movlw	0
  6085  002124  1625               	andwf	(___flmul@prod+3)^0,f,c
  6086  002126  A021               	btfss	___flmul@bexp^0,0,c
  6087  002128  EF98  F010         	goto	u3301
  6088  00212C  EF9A  F010         	goto	u3300
  6089  002130                     u3301:
  6090  002130  EF9B  F010         	goto	l3161
  6091  002134                     u3300:
  6092  002134  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6093  002136                     l3161:
  6094  002136  90D8               	bcf	status,0,c
  6095  002138  3021               	rrcf	___flmul@bexp^0,w,c
  6096  00213A  6E25               	movwf	(___flmul@prod+3)^0,c
  6097  00213C                     l3163:
  6098  00213C  501B               	movf	___flmul@sign^0,w,c
  6099  00213E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6100  002140  C022  F00F         	movff	___flmul@prod,?___flmul
  6101  002144  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6102  002148  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6103  00214C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6104  002150                     l759:
  6105  002150  0012               	return		;funcret
  6106  002152                     __end_of___flmul:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function ___flge *****************
  6110 ;; Defined at:
  6111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  ff1             4   39[COMRAM] unsigned char 
  6114 ;;  ff2             4   43[COMRAM] unsigned char 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;		None               void
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6126 ;;      Params:         8       0       0       0       0       0       0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6128 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6129 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6130 ;;Total ram usage:       12 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_efgtoa
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text21
  6140  002C20                     __ptext21:
  6141                           	callstack 0
  6142  002C20                     ___flge:
  6143                           	callstack 26
  6144  002C20  0E00               	movlw	0
  6145  002C22  1428               	andwf	___flge@ff1^0,w,c
  6146  002C24  6E30               	movwf	??___flge^0,c
  6147  002C26  0E00               	movlw	0
  6148  002C28  1429               	andwf	(___flge@ff1+1)^0,w,c
  6149  002C2A  6E31               	movwf	(??___flge+1)^0,c
  6150  002C2C  0E80               	movlw	128
  6151  002C2E  142A               	andwf	(___flge@ff1+2)^0,w,c
  6152  002C30  6E32               	movwf	(??___flge+2)^0,c
  6153  002C32  0E7F               	movlw	127
  6154  002C34  142B               	andwf	(___flge@ff1+3)^0,w,c
  6155  002C36  6E33               	movwf	(??___flge+3)^0,c
  6156  002C38  5030               	movf	??___flge^0,w,c
  6157  002C3A  1031               	iorwf	(??___flge+1)^0,w,c
  6158  002C3C  1032               	iorwf	(??___flge+2)^0,w,c
  6159  002C3E  1033               	iorwf	(??___flge+3)^0,w,c
  6160  002C40  A4D8               	btfss	status,2,c
  6161  002C42  EF25  F016         	goto	u3461
  6162  002C46  EF27  F016         	goto	u3460
  6163  002C4A                     u3461:
  6164  002C4A  EF2F  F016         	goto	l3275
  6165  002C4E                     u3460:
  6166  002C4E  0E00               	movlw	0
  6167  002C50  6E28               	movwf	___flge@ff1^0,c
  6168  002C52  0E00               	movlw	0
  6169  002C54  6E29               	movwf	(___flge@ff1+1)^0,c
  6170  002C56  0E00               	movlw	0
  6171  002C58  6E2A               	movwf	(___flge@ff1+2)^0,c
  6172  002C5A  0E00               	movlw	0
  6173  002C5C  6E2B               	movwf	(___flge@ff1+3)^0,c
  6174  002C5E                     l3275:
  6175  002C5E  0E00               	movlw	0
  6176  002C60  142C               	andwf	___flge@ff2^0,w,c
  6177  002C62  6E30               	movwf	??___flge^0,c
  6178  002C64  0E00               	movlw	0
  6179  002C66  142D               	andwf	(___flge@ff2+1)^0,w,c
  6180  002C68  6E31               	movwf	(??___flge+1)^0,c
  6181  002C6A  0E80               	movlw	128
  6182  002C6C  142E               	andwf	(___flge@ff2+2)^0,w,c
  6183  002C6E  6E32               	movwf	(??___flge+2)^0,c
  6184  002C70  0E7F               	movlw	127
  6185  002C72  142F               	andwf	(___flge@ff2+3)^0,w,c
  6186  002C74  6E33               	movwf	(??___flge+3)^0,c
  6187  002C76  5030               	movf	??___flge^0,w,c
  6188  002C78  1031               	iorwf	(??___flge+1)^0,w,c
  6189  002C7A  1032               	iorwf	(??___flge+2)^0,w,c
  6190  002C7C  1033               	iorwf	(??___flge+3)^0,w,c
  6191  002C7E  A4D8               	btfss	status,2,c
  6192  002C80  EF44  F016         	goto	u3471
  6193  002C84  EF46  F016         	goto	u3470
  6194  002C88                     u3471:
  6195  002C88  EF4E  F016         	goto	l3279
  6196  002C8C                     u3470:
  6197  002C8C  0E00               	movlw	0
  6198  002C8E  6E2C               	movwf	___flge@ff2^0,c
  6199  002C90  0E00               	movlw	0
  6200  002C92  6E2D               	movwf	(___flge@ff2+1)^0,c
  6201  002C94  0E00               	movlw	0
  6202  002C96  6E2E               	movwf	(___flge@ff2+2)^0,c
  6203  002C98  0E00               	movlw	0
  6204  002C9A  6E2F               	movwf	(___flge@ff2+3)^0,c
  6205  002C9C                     l3279:
  6206  002C9C  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6207  002C9E  EF53  F016         	goto	u3481
  6208  002CA2  EF55  F016         	goto	u3480
  6209  002CA6                     u3481:
  6210  002CA6  EF5E  F016         	goto	l3283
  6211  002CAA                     u3480:
  6212  002CAA  6C28               	negf	___flge@ff1^0,c
  6213  002CAC  1E29               	comf	(___flge@ff1+1)^0,f,c
  6214  002CAE  B0D8               	btfsc	status,0,c
  6215  002CB0  2A29               	incf	(___flge@ff1+1)^0,f,c
  6216  002CB2  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6217  002CB4  B0D8               	btfsc	status,0,c
  6218  002CB6  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6219  002CB8  0E80               	movlw	128
  6220  002CBA  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6221  002CBC                     l3283:
  6222  002CBC  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6223  002CBE  EF63  F016         	goto	u3491
  6224  002CC2  EF65  F016         	goto	u3490
  6225  002CC6                     u3491:
  6226  002CC6  EF6E  F016         	goto	l406
  6227  002CCA                     u3490:
  6228  002CCA  6C2C               	negf	___flge@ff2^0,c
  6229  002CCC  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6230  002CCE  B0D8               	btfsc	status,0,c
  6231  002CD0  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6232  002CD2  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6233  002CD4  B0D8               	btfsc	status,0,c
  6234  002CD6  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6235  002CD8  0E80               	movlw	128
  6236  002CDA  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6237  002CDC                     l406:
  6238  002CDC  0E00               	movlw	0
  6239  002CDE  1A28               	xorwf	___flge@ff1^0,f,c
  6240  002CE0  0E00               	movlw	0
  6241  002CE2  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6242  002CE4  0E00               	movlw	0
  6243  002CE6  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6244  002CE8  0E80               	movlw	128
  6245  002CEA  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6246  002CEC  0E00               	movlw	0
  6247  002CEE  1A2C               	xorwf	___flge@ff2^0,f,c
  6248  002CF0  0E00               	movlw	0
  6249  002CF2  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6250  002CF4  0E00               	movlw	0
  6251  002CF6  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6252  002CF8  0E80               	movlw	128
  6253  002CFA  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6254  002CFC  502C               	movf	___flge@ff2^0,w,c
  6255  002CFE  5C28               	subwf	___flge@ff1^0,w,c
  6256  002D00  502D               	movf	(___flge@ff2+1)^0,w,c
  6257  002D02  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6258  002D04  502E               	movf	(___flge@ff2+2)^0,w,c
  6259  002D06  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6260  002D08  502F               	movf	(___flge@ff2+3)^0,w,c
  6261  002D0A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6262  002D0C  B0D8               	btfsc	status,0,c
  6263  002D0E  EF8B  F016         	goto	u3501
  6264  002D12  EF8D  F016         	goto	u3500
  6265  002D16                     u3501:
  6266  002D16  EF90  F016         	goto	l3289
  6267  002D1A                     u3500:
  6268  002D1A  90D8               	bcf	status,0,c
  6269  002D1C  EF91  F016         	goto	l411
  6270  002D20                     l3289:
  6271  002D20  80D8               	bsf	status,0,c
  6272  002D22                     l411:
  6273  002D22  0012               	return		;funcret
  6274  002D24                     __end_of___flge:
  6275                           	callstack 0
  6276                           
  6277 ;; *************** function ___fleq *****************
  6278 ;; Defined at:
  6279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  ff1             4    0[COMRAM] unsigned char 
  6282 ;;  ff2             4    4[COMRAM] unsigned char 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;		None
  6285 ;; Return value:  Size  Location     Type
  6286 ;;		None               void
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6294 ;;      Params:         8       0       0       0       0       0       0       0       0
  6295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6296 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6297 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6298 ;;Total ram usage:       12 bytes
  6299 ;; Hardware stack levels used: 1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_efgtoa
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text22
  6308  0034A8                     __ptext22:
  6309                           	callstack 0
  6310  0034A8                     ___fleq:
  6311                           	callstack 26
  6312  0034A8  0E00               	movlw	0
  6313  0034AA  1401               	andwf	___fleq@ff1^0,w,c
  6314  0034AC  6E09               	movwf	??___fleq^0,c
  6315  0034AE  0E00               	movlw	0
  6316  0034B0  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6317  0034B2  6E0A               	movwf	(??___fleq+1)^0,c
  6318  0034B4  0E80               	movlw	128
  6319  0034B6  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6320  0034B8  6E0B               	movwf	(??___fleq+2)^0,c
  6321  0034BA  0E7F               	movlw	127
  6322  0034BC  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6323  0034BE  6E0C               	movwf	(??___fleq+3)^0,c
  6324  0034C0  5009               	movf	??___fleq^0,w,c
  6325  0034C2  100A               	iorwf	(??___fleq+1)^0,w,c
  6326  0034C4  100B               	iorwf	(??___fleq+2)^0,w,c
  6327  0034C6  100C               	iorwf	(??___fleq+3)^0,w,c
  6328  0034C8  A4D8               	btfss	status,2,c
  6329  0034CA  EF69  F01A         	goto	u3431
  6330  0034CE  EF6B  F01A         	goto	u3430
  6331  0034D2                     u3431:
  6332  0034D2  EF73  F01A         	goto	l3259
  6333  0034D6                     u3430:
  6334  0034D6  0E00               	movlw	0
  6335  0034D8  6E01               	movwf	___fleq@ff1^0,c
  6336  0034DA  0E00               	movlw	0
  6337  0034DC  6E02               	movwf	(___fleq@ff1+1)^0,c
  6338  0034DE  0E00               	movlw	0
  6339  0034E0  6E03               	movwf	(___fleq@ff1+2)^0,c
  6340  0034E2  0E00               	movlw	0
  6341  0034E4  6E04               	movwf	(___fleq@ff1+3)^0,c
  6342  0034E6                     l3259:
  6343  0034E6  0E00               	movlw	0
  6344  0034E8  1405               	andwf	___fleq@ff2^0,w,c
  6345  0034EA  6E09               	movwf	??___fleq^0,c
  6346  0034EC  0E00               	movlw	0
  6347  0034EE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6348  0034F0  6E0A               	movwf	(??___fleq+1)^0,c
  6349  0034F2  0E80               	movlw	128
  6350  0034F4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6351  0034F6  6E0B               	movwf	(??___fleq+2)^0,c
  6352  0034F8  0E7F               	movlw	127
  6353  0034FA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6354  0034FC  6E0C               	movwf	(??___fleq+3)^0,c
  6355  0034FE  5009               	movf	??___fleq^0,w,c
  6356  003500  100A               	iorwf	(??___fleq+1)^0,w,c
  6357  003502  100B               	iorwf	(??___fleq+2)^0,w,c
  6358  003504  100C               	iorwf	(??___fleq+3)^0,w,c
  6359  003506  A4D8               	btfss	status,2,c
  6360  003508  EF88  F01A         	goto	u3441
  6361  00350C  EF8A  F01A         	goto	u3440
  6362  003510                     u3441:
  6363  003510  EF92  F01A         	goto	l3263
  6364  003514                     u3440:
  6365  003514  0E00               	movlw	0
  6366  003516  6E05               	movwf	___fleq@ff2^0,c
  6367  003518  0E00               	movlw	0
  6368  00351A  6E06               	movwf	(___fleq@ff2+1)^0,c
  6369  00351C  0E00               	movlw	0
  6370  00351E  6E07               	movwf	(___fleq@ff2+2)^0,c
  6371  003520  0E00               	movlw	0
  6372  003522  6E08               	movwf	(___fleq@ff2+3)^0,c
  6373  003524                     l3263:
  6374  003524  5005               	movf	___fleq@ff2^0,w,c
  6375  003526  1801               	xorwf	___fleq@ff1^0,w,c
  6376  003528  E10F               	bnz	u3450
  6377  00352A  5006               	movf	(___fleq@ff2+1)^0,w,c
  6378  00352C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6379  00352E  E10C               	bnz	u3450
  6380  003530  5007               	movf	(___fleq@ff2+2)^0,w,c
  6381  003532  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6382  003534  E109               	bnz	u3450
  6383  003536  5008               	movf	(___fleq@ff2+3)^0,w,c
  6384  003538  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6385  00353A  B4D8               	btfsc	status,2,c
  6386  00353C  EFA2  F01A         	goto	u3451
  6387  003540  EFA4  F01A         	goto	u3450
  6388  003544                     u3451:
  6389  003544  EFA7  F01A         	goto	l3267
  6390  003548                     u3450:
  6391  003548  90D8               	bcf	status,0,c
  6392  00354A  EFA8  F01A         	goto	l400
  6393  00354E                     l3267:
  6394  00354E  80D8               	bsf	status,0,c
  6395  003550                     l400:
  6396  003550  0012               	return		;funcret
  6397  003552                     __end_of___fleq:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function ___fldiv *****************
  6401 ;; Defined at:
  6402 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  b               4   39[COMRAM] unsigned char 
  6405 ;;  a               4   43[COMRAM] unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  grs             4   58[COMRAM] unsigned long 
  6408 ;;  rem             4   51[COMRAM] unsigned long 
  6409 ;;  new_exp         2   56[COMRAM] short 
  6410 ;;  aexp            1   63[COMRAM] unsigned char 
  6411 ;;  bexp            1   62[COMRAM] unsigned char 
  6412 ;;  sign            1   55[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  4   39[COMRAM] unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6422 ;;      Params:         8       0       0       0       0       0       0       0       0
  6423 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6424 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6425 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:       25 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;;		_efgtoa
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text23
  6437  002152                     __ptext23:
  6438                           	callstack 0
  6439  002152                     ___fldiv:
  6440                           	callstack 26
  6441  002152  502B               	movf	(___fldiv@b+3)^0,w,c
  6442  002154  0B80               	andlw	128
  6443  002156  6E38               	movwf	___fldiv@sign^0,c
  6444  002158  502B               	movf	(___fldiv@b+3)^0,w,c
  6445  00215A  242B               	addwf	(___fldiv@b+3)^0,w,c
  6446  00215C  6E3F               	movwf	___fldiv@bexp^0,c
  6447  00215E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6448  002160  EFB4  F010         	goto	u2891
  6449  002164  EFB6  F010         	goto	u2890
  6450  002168                     u2891:
  6451  002168  EFB7  F010         	goto	l2907
  6452  00216C                     u2890:
  6453  00216C  803F               	bsf	___fldiv@bexp^0,0,c
  6454  00216E                     l2907:
  6455  00216E  503F               	movf	___fldiv@bexp^0,w,c
  6456  002170  B4D8               	btfsc	status,2,c
  6457  002172  EFBD  F010         	goto	u2901
  6458  002176  EFBF  F010         	goto	u2900
  6459  00217A                     u2901:
  6460  00217A  EFD4  F010         	goto	l2917
  6461  00217E                     u2900:
  6462  00217E  283F               	incf	___fldiv@bexp^0,w,c
  6463  002180  A4D8               	btfss	status,2,c
  6464  002182  EFC5  F010         	goto	u2911
  6465  002186  EFC7  F010         	goto	u2910
  6466  00218A                     u2911:
  6467  00218A  EFCF  F010         	goto	l2913
  6468  00218E                     u2910:
  6469  00218E  0E00               	movlw	0
  6470  002190  6E28               	movwf	___fldiv@b^0,c
  6471  002192  0E00               	movlw	0
  6472  002194  6E29               	movwf	(___fldiv@b+1)^0,c
  6473  002196  0E00               	movlw	0
  6474  002198  6E2A               	movwf	(___fldiv@b+2)^0,c
  6475  00219A  0E00               	movlw	0
  6476  00219C  6E2B               	movwf	(___fldiv@b+3)^0,c
  6477  00219E                     l2913:
  6478  00219E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6479  0021A0  0E00               	movlw	0
  6480  0021A2  6E2B               	movwf	(___fldiv@b+3)^0,c
  6481  0021A4  EFDC  F010         	goto	l2919
  6482  0021A8                     l2917:
  6483  0021A8  0E00               	movlw	0
  6484  0021AA  6E28               	movwf	___fldiv@b^0,c
  6485  0021AC  0E00               	movlw	0
  6486  0021AE  6E29               	movwf	(___fldiv@b+1)^0,c
  6487  0021B0  0E00               	movlw	0
  6488  0021B2  6E2A               	movwf	(___fldiv@b+2)^0,c
  6489  0021B4  0E00               	movlw	0
  6490  0021B6  6E2B               	movwf	(___fldiv@b+3)^0,c
  6491  0021B8                     l2919:
  6492  0021B8  502F               	movf	(___fldiv@a+3)^0,w,c
  6493  0021BA  0B80               	andlw	128
  6494  0021BC  1A38               	xorwf	___fldiv@sign^0,f,c
  6495  0021BE  502F               	movf	(___fldiv@a+3)^0,w,c
  6496  0021C0  242F               	addwf	(___fldiv@a+3)^0,w,c
  6497  0021C2  6E40               	movwf	___fldiv@aexp^0,c
  6498  0021C4  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6499  0021C6  EFE7  F010         	goto	u2921
  6500  0021CA  EFE9  F010         	goto	u2920
  6501  0021CE                     u2921:
  6502  0021CE  EFEA  F010         	goto	l2927
  6503  0021D2                     u2920:
  6504  0021D2  8040               	bsf	___fldiv@aexp^0,0,c
  6505  0021D4                     l2927:
  6506  0021D4  5040               	movf	___fldiv@aexp^0,w,c
  6507  0021D6  B4D8               	btfsc	status,2,c
  6508  0021D8  EFF0  F010         	goto	u2931
  6509  0021DC  EFF2  F010         	goto	u2930
  6510  0021E0                     u2931:
  6511  0021E0  EF07  F011         	goto	l2937
  6512  0021E4                     u2930:
  6513  0021E4  2840               	incf	___fldiv@aexp^0,w,c
  6514  0021E6  A4D8               	btfss	status,2,c
  6515  0021E8  EFF8  F010         	goto	u2941
  6516  0021EC  EFFA  F010         	goto	u2940
  6517  0021F0                     u2941:
  6518  0021F0  EF02  F011         	goto	l2933
  6519  0021F4                     u2940:
  6520  0021F4  0E00               	movlw	0
  6521  0021F6  6E2C               	movwf	___fldiv@a^0,c
  6522  0021F8  0E00               	movlw	0
  6523  0021FA  6E2D               	movwf	(___fldiv@a+1)^0,c
  6524  0021FC  0E00               	movlw	0
  6525  0021FE  6E2E               	movwf	(___fldiv@a+2)^0,c
  6526  002200  0E00               	movlw	0
  6527  002202  6E2F               	movwf	(___fldiv@a+3)^0,c
  6528  002204                     l2933:
  6529  002204  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6530  002206  0E00               	movlw	0
  6531  002208  6E2F               	movwf	(___fldiv@a+3)^0,c
  6532  00220A  EF0F  F011         	goto	l2939
  6533  00220E                     l2937:
  6534  00220E  0E00               	movlw	0
  6535  002210  6E2C               	movwf	___fldiv@a^0,c
  6536  002212  0E00               	movlw	0
  6537  002214  6E2D               	movwf	(___fldiv@a+1)^0,c
  6538  002216  0E00               	movlw	0
  6539  002218  6E2E               	movwf	(___fldiv@a+2)^0,c
  6540  00221A  0E00               	movlw	0
  6541  00221C  6E2F               	movwf	(___fldiv@a+3)^0,c
  6542  00221E                     l2939:
  6543  00221E  502C               	movf	___fldiv@a^0,w,c
  6544  002220  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6545  002222  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6546  002224  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6547  002226  A4D8               	btfss	status,2,c
  6548  002228  EF18  F011         	goto	u2951
  6549  00222C  EF1A  F011         	goto	u2950
  6550  002230                     u2951:
  6551  002230  EF32  F011         	goto	l2951
  6552  002234                     u2950:
  6553  002234  0E00               	movlw	0
  6554  002236  6E28               	movwf	___fldiv@b^0,c
  6555  002238  0E00               	movlw	0
  6556  00223A  6E29               	movwf	(___fldiv@b+1)^0,c
  6557  00223C  0E00               	movlw	0
  6558  00223E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6559  002240  0E00               	movlw	0
  6560  002242  6E2B               	movwf	(___fldiv@b+3)^0,c
  6561  002244  0E80               	movlw	128
  6562  002246  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6563  002248  0E7F               	movlw	127
  6564  00224A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6565  00224C                     l2945:
  6566  00224C  5038               	movf	___fldiv@sign^0,w,c
  6567  00224E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6568  002250  C028  F028         	movff	___fldiv@b,?___fldiv
  6569  002254  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6570  002258  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6571  00225C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6572  002260  EF75  F012         	goto	l723
  6573  002264                     l2951:
  6574  002264  503F               	movf	___fldiv@bexp^0,w,c
  6575  002266  A4D8               	btfss	status,2,c
  6576  002268  EF38  F011         	goto	u2961
  6577  00226C  EF3A  F011         	goto	u2960
  6578  002270                     u2961:
  6579  002270  EF44  F011         	goto	l2959
  6580  002274                     u2960:
  6581  002274  0E00               	movlw	0
  6582  002276  6E28               	movwf	?___fldiv^0,c
  6583  002278  0E00               	movlw	0
  6584  00227A  6E29               	movwf	(?___fldiv+1)^0,c
  6585  00227C  0E00               	movlw	0
  6586  00227E  6E2A               	movwf	(?___fldiv+2)^0,c
  6587  002280  0E00               	movlw	0
  6588  002282  6E2B               	movwf	(?___fldiv+3)^0,c
  6589  002284  EF75  F012         	goto	l723
  6590  002288                     l2959:
  6591  002288  5040               	movf	___fldiv@aexp^0,w,c
  6592  00228A  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6593  00228E  6A31               	clrf	(??___fldiv+1)^0,c
  6594  002290  5E30               	subwf	??___fldiv^0,f,c
  6595  002292  0E00               	movlw	0
  6596  002294  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6597  002296  0E7F               	movlw	127
  6598  002298  2430               	addwf	??___fldiv^0,w,c
  6599  00229A  6E39               	movwf	___fldiv@new_exp^0,c
  6600  00229C  0E00               	movlw	0
  6601  00229E  2031               	addwfc	(??___fldiv+1)^0,w,c
  6602  0022A0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6603  0022A2  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6604  0022A6  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6605  0022AA  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6606  0022AE  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6607  0022B2  0E00               	movlw	0
  6608  0022B4  6E28               	movwf	___fldiv@b^0,c
  6609  0022B6  0E00               	movlw	0
  6610  0022B8  6E29               	movwf	(___fldiv@b+1)^0,c
  6611  0022BA  0E00               	movlw	0
  6612  0022BC  6E2A               	movwf	(___fldiv@b+2)^0,c
  6613  0022BE  0E00               	movlw	0
  6614  0022C0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6615  0022C2  0E00               	movlw	0
  6616  0022C4  6E3B               	movwf	___fldiv@grs^0,c
  6617  0022C6  0E00               	movlw	0
  6618  0022C8  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6619  0022CA  0E00               	movlw	0
  6620  0022CC  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6621  0022CE  0E00               	movlw	0
  6622  0022D0  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6623  0022D2  0E00               	movlw	0
  6624  0022D4  6E40               	movwf	___fldiv@aexp^0,c
  6625  0022D6  EFA5  F011         	goto	l725
  6626  0022DA                     l2969:
  6627  0022DA  5040               	movf	___fldiv@aexp^0,w,c
  6628  0022DC  B4D8               	btfsc	status,2,c
  6629  0022DE  EF73  F011         	goto	u2971
  6630  0022E2  EF75  F011         	goto	u2970
  6631  0022E6                     u2971:
  6632  0022E6  EF8C  F011         	goto	l2977
  6633  0022EA                     u2970:
  6634  0022EA  90D8               	bcf	status,0,c
  6635  0022EC  3634               	rlcf	___fldiv@rem^0,f,c
  6636  0022EE  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6637  0022F0  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6638  0022F2  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6639  0022F4  90D8               	bcf	status,0,c
  6640  0022F6  3628               	rlcf	___fldiv@b^0,f,c
  6641  0022F8  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6642  0022FA  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6643  0022FC  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6644  0022FE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6645  002300  EF84  F011         	goto	u2981
  6646  002304  EF86  F011         	goto	u2980
  6647  002308                     u2981:
  6648  002308  EF87  F011         	goto	l728
  6649  00230C                     u2980:
  6650  00230C  8028               	bsf	___fldiv@b^0,0,c
  6651  00230E                     l728:
  6652  00230E  90D8               	bcf	status,0,c
  6653  002310  363B               	rlcf	___fldiv@grs^0,f,c
  6654  002312  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6655  002314  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6656  002316  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6657  002318                     l2977:
  6658  002318  502C               	movf	___fldiv@a^0,w,c
  6659  00231A  5C34               	subwf	___fldiv@rem^0,w,c
  6660  00231C  502D               	movf	(___fldiv@a+1)^0,w,c
  6661  00231E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6662  002320  502E               	movf	(___fldiv@a+2)^0,w,c
  6663  002322  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6664  002324  502F               	movf	(___fldiv@a+3)^0,w,c
  6665  002326  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6666  002328  A0D8               	btfss	status,0,c
  6667  00232A  EF99  F011         	goto	u2991
  6668  00232E  EF9B  F011         	goto	u2990
  6669  002332                     u2991:
  6670  002332  EFA4  F011         	goto	l2983
  6671  002336                     u2990:
  6672  002336  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6673  002338  502C               	movf	___fldiv@a^0,w,c
  6674  00233A  5E34               	subwf	___fldiv@rem^0,f,c
  6675  00233C  502D               	movf	(___fldiv@a+1)^0,w,c
  6676  00233E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6677  002340  502E               	movf	(___fldiv@a+2)^0,w,c
  6678  002342  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6679  002344  502F               	movf	(___fldiv@a+3)^0,w,c
  6680  002346  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6681  002348                     l2983:
  6682  002348  2A40               	incf	___fldiv@aexp^0,f,c
  6683  00234A                     l725:
  6684  00234A  0E19               	movlw	25
  6685  00234C  6440               	cpfsgt	___fldiv@aexp^0,c
  6686  00234E  EFAB  F011         	goto	u3001
  6687  002352  EFAD  F011         	goto	u3000
  6688  002356                     u3001:
  6689  002356  EF6D  F011         	goto	l2969
  6690  00235A                     u3000:
  6691  00235A  5034               	movf	___fldiv@rem^0,w,c
  6692  00235C  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6693  00235E  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6694  002360  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6695  002362  B4D8               	btfsc	status,2,c
  6696  002364  EFB6  F011         	goto	u3011
  6697  002368  EFB8  F011         	goto	u3010
  6698  00236C                     u3011:
  6699  00236C  EFD0  F011         	goto	l2995
  6700  002370                     u3010:
  6701  002370  803B               	bsf	___fldiv@grs^0,0,c
  6702  002372  EFD0  F011         	goto	l2995
  6703  002376                     l2989:
  6704  002376  90D8               	bcf	status,0,c
  6705  002378  3628               	rlcf	___fldiv@b^0,f,c
  6706  00237A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6707  00237C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6708  00237E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6709  002380  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6710  002382  EFC5  F011         	goto	u3021
  6711  002386  EFC7  F011         	goto	u3020
  6712  00238A                     u3021:
  6713  00238A  EFC8  F011         	goto	l734
  6714  00238E                     u3020:
  6715  00238E  8028               	bsf	___fldiv@b^0,0,c
  6716  002390                     l734:
  6717  002390  90D8               	bcf	status,0,c
  6718  002392  363B               	rlcf	___fldiv@grs^0,f,c
  6719  002394  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6720  002396  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6721  002398  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6722  00239A  0639               	decf	___fldiv@new_exp^0,f,c
  6723  00239C  A0D8               	btfss	status,0,c
  6724  00239E  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6725  0023A0                     l2995:
  6726  0023A0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6727  0023A2  EFD5  F011         	goto	u3031
  6728  0023A6  EFD7  F011         	goto	u3030
  6729  0023AA                     u3031:
  6730  0023AA  EFBB  F011         	goto	l2989
  6731  0023AE                     u3030:
  6732  0023AE  0E00               	movlw	0
  6733  0023B0  6E40               	movwf	___fldiv@aexp^0,c
  6734  0023B2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6735  0023B4  EFDE  F011         	goto	u3041
  6736  0023B8  EFE0  F011         	goto	u3040
  6737  0023BC                     u3041:
  6738  0023BC  EF04  F012         	goto	l736
  6739  0023C0                     u3040:
  6740  0023C0  0EFF               	movlw	255
  6741  0023C2  143B               	andwf	___fldiv@grs^0,w,c
  6742  0023C4  6E30               	movwf	??___fldiv^0,c
  6743  0023C6  0EFF               	movlw	255
  6744  0023C8  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6745  0023CA  6E31               	movwf	(??___fldiv+1)^0,c
  6746  0023CC  0EFF               	movlw	255
  6747  0023CE  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6748  0023D0  6E32               	movwf	(??___fldiv+2)^0,c
  6749  0023D2  0E7F               	movlw	127
  6750  0023D4  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6751  0023D6  6E33               	movwf	(??___fldiv+3)^0,c
  6752  0023D8  5030               	movf	??___fldiv^0,w,c
  6753  0023DA  1031               	iorwf	(??___fldiv+1)^0,w,c
  6754  0023DC  1032               	iorwf	(??___fldiv+2)^0,w,c
  6755  0023DE  1033               	iorwf	(??___fldiv+3)^0,w,c
  6756  0023E0  B4D8               	btfsc	status,2,c
  6757  0023E2  EFF5  F011         	goto	u3051
  6758  0023E6  EFF7  F011         	goto	u3050
  6759  0023EA                     u3051:
  6760  0023EA  EFFB  F011         	goto	l737
  6761  0023EE                     u3050:
  6762  0023EE                     l3003:
  6763  0023EE  0E01               	movlw	1
  6764  0023F0  6E40               	movwf	___fldiv@aexp^0,c
  6765  0023F2  EF04  F012         	goto	l736
  6766  0023F6                     l737:
  6767  0023F6  A028               	btfss	___fldiv@b^0,0,c
  6768  0023F8  EF00  F012         	goto	u3061
  6769  0023FC  EF02  F012         	goto	u3060
  6770  002400                     u3061:
  6771  002400  EF04  F012         	goto	l736
  6772  002404                     u3060:
  6773  002404  EFF7  F011         	goto	l3003
  6774  002408                     l736:
  6775  002408  5040               	movf	___fldiv@aexp^0,w,c
  6776  00240A  B4D8               	btfsc	status,2,c
  6777  00240C  EF0A  F012         	goto	u3071
  6778  002410  EF0C  F012         	goto	u3070
  6779  002414                     u3071:
  6780  002414  EF30  F012         	goto	l3015
  6781  002418                     u3070:
  6782  002418  0E01               	movlw	1
  6783  00241A  2628               	addwf	___fldiv@b^0,f,c
  6784  00241C  0E00               	movlw	0
  6785  00241E  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6786  002420  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6787  002422  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6788  002424  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6789  002426  EF17  F012         	goto	u3081
  6790  00242A  EF19  F012         	goto	u3080
  6791  00242E                     u3081:
  6792  00242E  EF30  F012         	goto	l3015
  6793  002432                     u3080:
  6794  002432  C028  F030         	movff	___fldiv@b,??___fldiv
  6795  002436  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6796  00243A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6797  00243E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6798  002442  3433               	rlcf	(??___fldiv+3)^0,w,c
  6799  002444  3233               	rrcf	(??___fldiv+3)^0,f,c
  6800  002446  3232               	rrcf	(??___fldiv+2)^0,f,c
  6801  002448  3231               	rrcf	(??___fldiv+1)^0,f,c
  6802  00244A  3230               	rrcf	??___fldiv^0,f,c
  6803  00244C  C030  F028         	movff	??___fldiv,___fldiv@b
  6804  002450  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6805  002454  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6806  002458  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6807  00245C  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6808  00245E  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6809  002460                     l3015:
  6810  002460  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6811  002462  EF3B  F012         	goto	u3091
  6812  002466  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6813  002468  E108               	bnz	u3090
  6814  00246A  2839               	incf	___fldiv@new_exp^0,w,c
  6815  00246C  A0D8               	btfss	status,0,c
  6816  00246E  EF3B  F012         	goto	u3091
  6817  002472  EF3D  F012         	goto	u3090
  6818  002476                     u3091:
  6819  002476  EF48  F012         	goto	l3019
  6820  00247A                     u3090:
  6821  00247A  0E00               	movlw	0
  6822  00247C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6823  00247E  6839               	setf	___fldiv@new_exp^0,c
  6824  002480  0E00               	movlw	0
  6825  002482  6E28               	movwf	___fldiv@b^0,c
  6826  002484  0E00               	movlw	0
  6827  002486  6E29               	movwf	(___fldiv@b+1)^0,c
  6828  002488  0E00               	movlw	0
  6829  00248A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6830  00248C  0E00               	movlw	0
  6831  00248E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6832  002490                     l3019:
  6833  002490  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6834  002492  EF55  F012         	goto	u3100
  6835  002496  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6836  002498  E106               	bnz	u3101
  6837  00249A  0439               	decf	___fldiv@new_exp^0,w,c
  6838  00249C  B0D8               	btfsc	status,0,c
  6839  00249E  EF53  F012         	goto	u3101
  6840  0024A2  EF55  F012         	goto	u3100
  6841  0024A6                     u3101:
  6842  0024A6  EF63  F012         	goto	l3023
  6843  0024AA                     u3100:
  6844  0024AA  0E00               	movlw	0
  6845  0024AC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6846  0024AE  0E00               	movlw	0
  6847  0024B0  6E39               	movwf	___fldiv@new_exp^0,c
  6848  0024B2  0E00               	movlw	0
  6849  0024B4  6E28               	movwf	___fldiv@b^0,c
  6850  0024B6  0E00               	movlw	0
  6851  0024B8  6E29               	movwf	(___fldiv@b+1)^0,c
  6852  0024BA  0E00               	movlw	0
  6853  0024BC  6E2A               	movwf	(___fldiv@b+2)^0,c
  6854  0024BE  0E00               	movlw	0
  6855  0024C0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6856  0024C2  0E00               	movlw	0
  6857  0024C4  6E38               	movwf	___fldiv@sign^0,c
  6858  0024C6                     l3023:
  6859  0024C6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6860  0024CA  A03F               	btfss	___fldiv@bexp^0,0,c
  6861  0024CC  EF6A  F012         	goto	u3111
  6862  0024D0  EF6C  F012         	goto	u3110
  6863  0024D4                     u3111:
  6864  0024D4  EF6F  F012         	goto	l3029
  6865  0024D8                     u3110:
  6866  0024D8  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6867  0024DA  EF70  F012         	goto	l3031
  6868  0024DE                     l3029:
  6869  0024DE  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6870  0024E0                     l3031:
  6871  0024E0  90D8               	bcf	status,0,c
  6872  0024E2  303F               	rrcf	___fldiv@bexp^0,w,c
  6873  0024E4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6874  0024E6  EF26  F011         	goto	l2945
  6875  0024EA                     l723:
  6876  0024EA  0012               	return		;funcret
  6877  0024EC                     __end_of___fldiv:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function ___awmod *****************
  6881 ;; Defined at:
  6882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  dividend        2    0[COMRAM] int 
  6885 ;;  divisor         2    2[COMRAM] int 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  sign            1    5[COMRAM] unsigned char 
  6888 ;;  counter         1    4[COMRAM] unsigned char 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  2    0[COMRAM] int 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6898 ;;      Params:         4       0       0       0       0       0       0       0       0
  6899 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6901 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6902 ;;Total ram usage:        6 bytes
  6903 ;; Hardware stack levels used: 1
  6904 ;; This function calls:
  6905 ;;		Nothing
  6906 ;; This function is called by:
  6907 ;;		_efgtoa
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text24
  6912  0033F8                     __ptext24:
  6913                           	callstack 0
  6914  0033F8                     ___awmod:
  6915                           	callstack 26
  6916  0033F8  0E00               	movlw	0
  6917  0033FA  6E06               	movwf	___awmod@sign^0,c
  6918  0033FC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6919  0033FE  EF05  F01A         	goto	u3370
  6920  003402  EF03  F01A         	goto	u3371
  6921  003406                     u3371:
  6922  003406  EF0B  F01A         	goto	l3227
  6923  00340A                     u3370:
  6924  00340A  6C01               	negf	___awmod@dividend^0,c
  6925  00340C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6926  00340E  B0D8               	btfsc	status,0,c
  6927  003410  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6928  003412  0E01               	movlw	1
  6929  003414  6E06               	movwf	___awmod@sign^0,c
  6930  003416                     l3227:
  6931  003416  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6932  003418  EF12  F01A         	goto	u3380
  6933  00341C  EF10  F01A         	goto	u3381
  6934  003420                     u3381:
  6935  003420  EF16  F01A         	goto	l3231
  6936  003424                     u3380:
  6937  003424  6C03               	negf	___awmod@divisor^0,c
  6938  003426  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6939  003428  B0D8               	btfsc	status,0,c
  6940  00342A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6941  00342C                     l3231:
  6942  00342C  5003               	movf	___awmod@divisor^0,w,c
  6943  00342E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6944  003430  B4D8               	btfsc	status,2,c
  6945  003432  EF1D  F01A         	goto	u3391
  6946  003436  EF1F  F01A         	goto	u3390
  6947  00343A                     u3391:
  6948  00343A  EF43  F01A         	goto	l3247
  6949  00343E                     u3390:
  6950  00343E  0E01               	movlw	1
  6951  003440  6E05               	movwf	___awmod@counter^0,c
  6952  003442  EF27  F01A         	goto	l3237
  6953  003446                     l3235:
  6954  003446  90D8               	bcf	status,0,c
  6955  003448  3603               	rlcf	___awmod@divisor^0,f,c
  6956  00344A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6957  00344C  2A05               	incf	___awmod@counter^0,f,c
  6958  00344E                     l3237:
  6959  00344E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6960  003450  EF2C  F01A         	goto	u3401
  6961  003454  EF2E  F01A         	goto	u3400
  6962  003458                     u3401:
  6963  003458  EF23  F01A         	goto	l3235
  6964  00345C                     u3400:
  6965  00345C                     l3239:
  6966  00345C  5003               	movf	___awmod@divisor^0,w,c
  6967  00345E  5C01               	subwf	___awmod@dividend^0,w,c
  6968  003460  5004               	movf	(___awmod@divisor+1)^0,w,c
  6969  003462  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6970  003464  A0D8               	btfss	status,0,c
  6971  003466  EF37  F01A         	goto	u3411
  6972  00346A  EF39  F01A         	goto	u3410
  6973  00346E                     u3411:
  6974  00346E  EF3D  F01A         	goto	l3243
  6975  003472                     u3410:
  6976  003472  5003               	movf	___awmod@divisor^0,w,c
  6977  003474  5E01               	subwf	___awmod@dividend^0,f,c
  6978  003476  5004               	movf	(___awmod@divisor+1)^0,w,c
  6979  003478  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6980  00347A                     l3243:
  6981  00347A  90D8               	bcf	status,0,c
  6982  00347C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6983  00347E  3203               	rrcf	___awmod@divisor^0,f,c
  6984  003480  2E05               	decfsz	___awmod@counter^0,f,c
  6985  003482  EF2E  F01A         	goto	l3239
  6986  003486                     l3247:
  6987  003486  5006               	movf	___awmod@sign^0,w,c
  6988  003488  B4D8               	btfsc	status,2,c
  6989  00348A  EF49  F01A         	goto	u3421
  6990  00348E  EF4B  F01A         	goto	u3420
  6991  003492                     u3421:
  6992  003492  EF4F  F01A         	goto	l3251
  6993  003496                     u3420:
  6994  003496  6C01               	negf	___awmod@dividend^0,c
  6995  003498  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6996  00349A  B0D8               	btfsc	status,0,c
  6997  00349C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6998  00349E                     l3251:
  6999  00349E  C001  F001         	movff	___awmod@dividend,?___awmod
  7000  0034A2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7001  0034A6  0012               	return		;funcret
  7002  0034A8                     __end_of___awmod:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function ___awdiv *****************
  7006 ;; Defined at:
  7007 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  dividend        2    0[COMRAM] int 
  7010 ;;  divisor         2    2[COMRAM] int 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  quotient        2    6[COMRAM] int 
  7013 ;;  sign            1    5[COMRAM] unsigned char 
  7014 ;;  counter         1    4[COMRAM] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  2    0[COMRAM] int 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7024 ;;      Params:         4       0       0       0       0       0       0       0       0
  7025 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7027 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:        8 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_efgtoa
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text25
  7038  00327A                     __ptext25:
  7039                           	callstack 0
  7040  00327A                     ___awdiv:
  7041                           	callstack 26
  7042  00327A  0E00               	movlw	0
  7043  00327C  6E06               	movwf	___awdiv@sign^0,c
  7044  00327E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7045  003280  EF46  F019         	goto	u3310
  7046  003284  EF44  F019         	goto	u3311
  7047  003288                     u3311:
  7048  003288  EF4C  F019         	goto	l3183
  7049  00328C                     u3310:
  7050  00328C  6C03               	negf	___awdiv@divisor^0,c
  7051  00328E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7052  003290  B0D8               	btfsc	status,0,c
  7053  003292  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7054  003294  0E01               	movlw	1
  7055  003296  6E06               	movwf	___awdiv@sign^0,c
  7056  003298                     l3183:
  7057  003298  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7058  00329A  EF53  F019         	goto	u3320
  7059  00329E  EF51  F019         	goto	u3321
  7060  0032A2                     u3321:
  7061  0032A2  EF59  F019         	goto	l3189
  7062  0032A6                     u3320:
  7063  0032A6  6C01               	negf	___awdiv@dividend^0,c
  7064  0032A8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7065  0032AA  B0D8               	btfsc	status,0,c
  7066  0032AC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7067  0032AE  0E01               	movlw	1
  7068  0032B0  1A06               	xorwf	___awdiv@sign^0,f,c
  7069  0032B2                     l3189:
  7070  0032B2  0E00               	movlw	0
  7071  0032B4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7072  0032B6  0E00               	movlw	0
  7073  0032B8  6E07               	movwf	___awdiv@quotient^0,c
  7074  0032BA  5003               	movf	___awdiv@divisor^0,w,c
  7075  0032BC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7076  0032BE  B4D8               	btfsc	status,2,c
  7077  0032C0  EF64  F019         	goto	u3331
  7078  0032C4  EF66  F019         	goto	u3330
  7079  0032C8                     u3331:
  7080  0032C8  EF8E  F019         	goto	l3211
  7081  0032CC                     u3330:
  7082  0032CC  0E01               	movlw	1
  7083  0032CE  6E05               	movwf	___awdiv@counter^0,c
  7084  0032D0  EF6E  F019         	goto	l3197
  7085  0032D4                     l3195:
  7086  0032D4  90D8               	bcf	status,0,c
  7087  0032D6  3603               	rlcf	___awdiv@divisor^0,f,c
  7088  0032D8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7089  0032DA  2A05               	incf	___awdiv@counter^0,f,c
  7090  0032DC                     l3197:
  7091  0032DC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7092  0032DE  EF73  F019         	goto	u3341
  7093  0032E2  EF75  F019         	goto	u3340
  7094  0032E6                     u3341:
  7095  0032E6  EF6A  F019         	goto	l3195
  7096  0032EA                     u3340:
  7097  0032EA                     l3199:
  7098  0032EA  90D8               	bcf	status,0,c
  7099  0032EC  3607               	rlcf	___awdiv@quotient^0,f,c
  7100  0032EE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7101  0032F0  5003               	movf	___awdiv@divisor^0,w,c
  7102  0032F2  5C01               	subwf	___awdiv@dividend^0,w,c
  7103  0032F4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7104  0032F6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7105  0032F8  A0D8               	btfss	status,0,c
  7106  0032FA  EF81  F019         	goto	u3351
  7107  0032FE  EF83  F019         	goto	u3350
  7108  003302                     u3351:
  7109  003302  EF88  F019         	goto	l3207
  7110  003306                     u3350:
  7111  003306  5003               	movf	___awdiv@divisor^0,w,c
  7112  003308  5E01               	subwf	___awdiv@dividend^0,f,c
  7113  00330A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7114  00330C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7115  00330E  8007               	bsf	___awdiv@quotient^0,0,c
  7116  003310                     l3207:
  7117  003310  90D8               	bcf	status,0,c
  7118  003312  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7119  003314  3203               	rrcf	___awdiv@divisor^0,f,c
  7120  003316  2E05               	decfsz	___awdiv@counter^0,f,c
  7121  003318  EF75  F019         	goto	l3199
  7122  00331C                     l3211:
  7123  00331C  5006               	movf	___awdiv@sign^0,w,c
  7124  00331E  B4D8               	btfsc	status,2,c
  7125  003320  EF94  F019         	goto	u3361
  7126  003324  EF96  F019         	goto	u3360
  7127  003328                     u3361:
  7128  003328  EF9A  F019         	goto	l3215
  7129  00332C                     u3360:
  7130  00332C  6C07               	negf	___awdiv@quotient^0,c
  7131  00332E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7132  003330  B0D8               	btfsc	status,0,c
  7133  003332  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7134  003334                     l3215:
  7135  003334  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7136  003338  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7137  00333C  0012               	return		;funcret
  7138  00333E                     __end_of___awdiv:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function _atoi *****************
  7142 ;; Defined at:
  7143 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7146 ;;		 -> STR_2(6), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  n               2   15[COMRAM] int 
  7149 ;;  neg             2   13[COMRAM] int 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  2    7[COMRAM] int 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7159 ;;      Params:         2       0       0       0       0       0       0       0       0
  7160 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7161 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7162 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7163 ;;Total ram usage:       10 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 1
  7166 ;; This function calls:
  7167 ;;		___wmul
  7168 ;;		_isdigit
  7169 ;;		_isspace
  7170 ;; This function is called by:
  7171 ;;		_vfpfcnvrt
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text26
  7176  0028B2                     __ptext26:
  7177                           	callstack 0
  7178  0028B2                     _atoi:
  7179                           	callstack 26
  7180  0028B2  0E00               	movlw	0
  7181  0028B4  6E11               	movwf	(atoi@n+1)^0,c
  7182  0028B6  0E00               	movlw	0
  7183  0028B8  6E10               	movwf	atoi@n^0,c
  7184  0028BA  0E00               	movlw	0
  7185  0028BC  6E0F               	movwf	(atoi@neg+1)^0,c
  7186  0028BE  0E00               	movlw	0
  7187  0028C0  6E0E               	movwf	atoi@neg^0,c
  7188  0028C2  EF65  F014         	goto	l3765
  7189  0028C6                     l3761:
  7190  0028C6  4A08               	infsnz	atoi@s^0,f,c
  7191  0028C8  2A09               	incf	(atoi@s+1)^0,f,c
  7192  0028CA                     l3765:
  7193  0028CA  C008  FFF6         	movff	atoi@s,tblptrl
  7194  0028CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7195  0028D2                     	if	0	;tblptru may be non-zero
  7196  0028D2                     	endif
  7197  0028D2                     	if	0	;tblptru may be non-zero
  7198  0028D2                     	endif
  7199  0028D2  0008               	tblrd		*
  7200  0028D4  50F5               	movf	tablat,w,c
  7201  0028D6  0A20               	xorlw	32
  7202  0028D8  B4D8               	btfsc	status,2,c
  7203  0028DA  EF71  F014         	goto	u4351
  7204  0028DE  EF73  F014         	goto	u4350
  7205  0028E2                     u4351:
  7206  0028E2  EF63  F014         	goto	l3761
  7207  0028E6                     u4350:
  7208  0028E6  0EF7               	movlw	247
  7209  0028E8  6E0A               	movwf	??_atoi^0,c
  7210  0028EA  0EFF               	movlw	255
  7211  0028EC  6E0B               	movwf	(??_atoi+1)^0,c
  7212  0028EE  C008  FFF6         	movff	atoi@s,tblptrl
  7213  0028F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7214  0028F6                     	if	0	;tblptru may be non-zero
  7215  0028F6                     	endif
  7216  0028F6                     	if	0	;tblptru may be non-zero
  7217  0028F6                     	endif
  7218  0028F6  0008               	tblrd		*
  7219  0028F8  50F5               	movf	tablat,w,c
  7220  0028FA  6E0C               	movwf	(??_atoi+2)^0,c
  7221  0028FC  6A0D               	clrf	(??_atoi+3)^0,c
  7222  0028FE  500A               	movf	??_atoi^0,w,c
  7223  002900  260C               	addwf	(??_atoi+2)^0,f,c
  7224  002902  500B               	movf	(??_atoi+1)^0,w,c
  7225  002904  220D               	addwfc	(??_atoi+3)^0,f,c
  7226  002906  500D               	movf	(??_atoi+3)^0,w,c
  7227  002908  E109               	bnz	u4360
  7228  00290A  0E05               	movlw	5
  7229  00290C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7230  00290E  A0D8               	btfss	status,0,c
  7231  002910  EF8C  F014         	goto	u4361
  7232  002914  EF8E  F014         	goto	u4360
  7233  002918                     u4361:
  7234  002918  EF63  F014         	goto	l3761
  7235  00291C                     u4360:
  7236  00291C  EF98  F014         	goto	l3773
  7237  002920                     l3769:
  7238  002920  0E00               	movlw	0
  7239  002922  6E0F               	movwf	(atoi@neg+1)^0,c
  7240  002924  0E01               	movlw	1
  7241  002926  6E0E               	movwf	atoi@neg^0,c
  7242  002928                     l3771:
  7243  002928  4A08               	infsnz	atoi@s^0,f,c
  7244  00292A  2A09               	incf	(atoi@s+1)^0,f,c
  7245  00292C  EFCD  F014         	goto	l3781
  7246  002930                     l3773:
  7247  002930  C008  FFF6         	movff	atoi@s,tblptrl
  7248  002934  C009  FFF7         	movff	atoi@s+1,tblptrh
  7249  002938                     	if	0	;tblptru may be non-zero
  7250  002938                     	endif
  7251  002938                     	if	0	;tblptru may be non-zero
  7252  002938                     	endif
  7253  002938  0008               	tblrd		*
  7254  00293A  50F5               	movf	tablat,w,c
  7255  00293C  6E0A               	movwf	??_atoi^0,c
  7256  00293E  6A0B               	clrf	(??_atoi+1)^0,c
  7257                           
  7258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7259                           ; Switch size 1, requested type "simple"
  7260                           ; Number of cases is 1, Range of values is 0 to 0
  7261                           ; switch strategies available:
  7262                           ; Name         Instructions Cycles
  7263                           ; simple_byte            4     3 (average)
  7264                           ;	Chosen strategy is simple_byte
  7265  002940  500B               	movf	(??_atoi+1)^0,w,c
  7266  002942  0A00               	xorlw	0	; case 0
  7267  002944  B4D8               	btfsc	status,2,c
  7268  002946  EFA7  F014         	goto	l4161
  7269  00294A  EFCD  F014         	goto	l3781
  7270  00294E                     l4161:
  7271                           
  7272                           ; Switch size 1, requested type "simple"
  7273                           ; Number of cases is 2, Range of values is 43 to 45
  7274                           ; switch strategies available:
  7275                           ; Name         Instructions Cycles
  7276                           ; simple_byte            7     4 (average)
  7277                           ;	Chosen strategy is simple_byte
  7278  00294E  500A               	movf	??_atoi^0,w,c
  7279  002950  0A2B               	xorlw	43	; case 43
  7280  002952  B4D8               	btfsc	status,2,c
  7281  002954  EF94  F014         	goto	l3771
  7282  002958  0A06               	xorlw	6	; case 45
  7283  00295A  B4D8               	btfsc	status,2,c
  7284  00295C  EF90  F014         	goto	l3769
  7285  002960  EFCD  F014         	goto	l3781
  7286  002964                     l3775:
  7287  002964  C010  F001         	movff	atoi@n,___wmul@multiplier
  7288  002968  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7289  00296C  0E00               	movlw	0
  7290  00296E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7291  002970  0E0A               	movlw	10
  7292  002972  6E03               	movwf	___wmul@multiplicand^0,c
  7293  002974  EC73  F01C         	call	___wmul	;wreg free
  7294  002978  C008  FFF6         	movff	atoi@s,tblptrl
  7295  00297C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7296  002980                     	if	0	;tblptru may be non-zero
  7297  002980                     	endif
  7298  002980                     	if	0	;tblptru may be non-zero
  7299  002980                     	endif
  7300  002980  0008               	tblrd		*
  7301  002982  50F5               	movf	tablat,w,c
  7302  002984  5E01               	subwf	?___wmul^0,f,c
  7303  002986  0E00               	movlw	0
  7304  002988  5A02               	subwfb	(?___wmul+1)^0,f,c
  7305  00298A  0E30               	movlw	48
  7306  00298C  2401               	addwf	?___wmul^0,w,c
  7307  00298E  6E10               	movwf	atoi@n^0,c
  7308  002990  0E00               	movlw	0
  7309  002992  2002               	addwfc	(?___wmul+1)^0,w,c
  7310  002994  6E11               	movwf	(atoi@n+1)^0,c
  7311  002996  EF94  F014         	goto	l3771
  7312  00299A                     l3781:
  7313  00299A  0ED0               	movlw	208
  7314  00299C  6E0A               	movwf	??_atoi^0,c
  7315  00299E  0EFF               	movlw	255
  7316  0029A0  6E0B               	movwf	(??_atoi+1)^0,c
  7317  0029A2  C008  FFF6         	movff	atoi@s,tblptrl
  7318  0029A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7319  0029AA                     	if	0	;tblptru may be non-zero
  7320  0029AA                     	endif
  7321  0029AA                     	if	0	;tblptru may be non-zero
  7322  0029AA                     	endif
  7323  0029AA  0008               	tblrd		*
  7324  0029AC  50F5               	movf	tablat,w,c
  7325  0029AE  6E0C               	movwf	(??_atoi+2)^0,c
  7326  0029B0  6A0D               	clrf	(??_atoi+3)^0,c
  7327  0029B2  500A               	movf	??_atoi^0,w,c
  7328  0029B4  260C               	addwf	(??_atoi+2)^0,f,c
  7329  0029B6  500B               	movf	(??_atoi+1)^0,w,c
  7330  0029B8  220D               	addwfc	(??_atoi+3)^0,f,c
  7331  0029BA  500D               	movf	(??_atoi+3)^0,w,c
  7332  0029BC  E109               	bnz	u4370
  7333  0029BE  0E0A               	movlw	10
  7334  0029C0  5C0C               	subwf	(??_atoi+2)^0,w,c
  7335  0029C2  A0D8               	btfss	status,0,c
  7336  0029C4  EFE6  F014         	goto	u4371
  7337  0029C8  EFE8  F014         	goto	u4370
  7338  0029CC                     u4371:
  7339  0029CC  EFB2  F014         	goto	l3775
  7340  0029D0                     u4370:
  7341  0029D0  500E               	movf	atoi@neg^0,w,c
  7342  0029D2  100F               	iorwf	(atoi@neg+1)^0,w,c
  7343  0029D4  A4D8               	btfss	status,2,c
  7344  0029D6  EFEF  F014         	goto	u4381
  7345  0029DA  EFF1  F014         	goto	u4380
  7346  0029DE                     u4381:
  7347  0029DE  EFFF  F014         	goto	l1012
  7348  0029E2                     u4380:
  7349  0029E2  C010  F00A         	movff	atoi@n,??_atoi
  7350  0029E6  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7351  0029EA  1E0A               	comf	??_atoi^0,f,c
  7352  0029EC  1E0B               	comf	(??_atoi+1)^0,f,c
  7353  0029EE  4A0A               	infsnz	??_atoi^0,f,c
  7354  0029F0  2A0B               	incf	(??_atoi+1)^0,f,c
  7355  0029F2  C00A  F008         	movff	??_atoi,?_atoi
  7356  0029F6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7357  0029FA  EF03  F015         	goto	l1015
  7358  0029FE                     l1012:
  7359  0029FE  C010  F008         	movff	atoi@n,?_atoi
  7360  002A02  C011  F009         	movff	atoi@n+1,?_atoi+1
  7361  002A06                     l1015:
  7362  002A06  0012               	return		;funcret
  7363  002A08                     __end_of_atoi:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _isspace *****************
  7367 ;; Defined at:
  7368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  c               2    0[COMRAM] int 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2    0[COMRAM] int 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7382 ;;      Params:         2       0       0       0       0       0       0       0       0
  7383 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7384 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7385 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7386 ;;Total ram usage:        7 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_atoi
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text27
  7396  0036BA                     __ptext27:
  7397                           	callstack 0
  7398  0036BA                     _isspace:
  7399                           	callstack 26
  7400  0036BA  0E01               	movlw	1
  7401  0036BC  6E07               	movwf	_isspace$1236^0,c
  7402  0036BE  0E20               	movlw	32
  7403  0036C0  1801               	xorwf	isspace@c^0,w,c
  7404  0036C2  1002               	iorwf	(isspace@c+1)^0,w,c
  7405  0036C4  B4D8               	btfsc	status,2,c
  7406  0036C6  EF67  F01B         	goto	u3851
  7407  0036CA  EF69  F01B         	goto	u3850
  7408  0036CE                     u3851:
  7409  0036CE  EF82  F01B         	goto	l3443
  7410  0036D2                     u3850:
  7411  0036D2  0EF7               	movlw	247
  7412  0036D4  6E03               	movwf	??_isspace^0,c
  7413  0036D6  0EFF               	movlw	255
  7414  0036D8  6E04               	movwf	(??_isspace+1)^0,c
  7415  0036DA  C001  F005         	movff	isspace@c,??_isspace+2
  7416  0036DE  C002  F006         	movff	isspace@c+1,??_isspace+3
  7417  0036E2  5003               	movf	??_isspace^0,w,c
  7418  0036E4  2605               	addwf	(??_isspace+2)^0,f,c
  7419  0036E6  5004               	movf	(??_isspace+1)^0,w,c
  7420  0036E8  2206               	addwfc	(??_isspace+3)^0,f,c
  7421  0036EA  5006               	movf	(??_isspace+3)^0,w,c
  7422  0036EC  E109               	bnz	u3860
  7423  0036EE  0E05               	movlw	5
  7424  0036F0  5C05               	subwf	(??_isspace+2)^0,w,c
  7425  0036F2  A0D8               	btfss	status,0,c
  7426  0036F4  EF7E  F01B         	goto	u3861
  7427  0036F8  EF80  F01B         	goto	u3860
  7428  0036FC                     u3861:
  7429  0036FC  EF82  F01B         	goto	l3443
  7430  003700                     u3860:
  7431  003700  0E00               	movlw	0
  7432  003702  6E07               	movwf	_isspace$1236^0,c
  7433  003704                     l3443:
  7434  003704  C007  F001         	movff	_isspace$1236,?_isspace
  7435  003708  6A02               	clrf	(?_isspace+1)^0,c
  7436  00370A  0012               	return		;funcret
  7437  00370C                     __end_of_isspace:
  7438                           	callstack 0
  7439                           
  7440 ;; *************** function _isdigit *****************
  7441 ;; Defined at:
  7442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  c               2    0[COMRAM] int 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;		None
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  2    0[COMRAM] int 
  7449 ;; Registers used:
  7450 ;;		wreg, status,2, status,0
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7456 ;;      Params:         2       0       0       0       0       0       0       0       0
  7457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7458 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7459 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7460 ;;Total ram usage:        6 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_vfpfcnvrt
  7466 ;;		_atoi
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text28
  7471  00384C                     __ptext28:
  7472                           	callstack 0
  7473  00384C                     _isdigit:
  7474                           	callstack 27
  7475  00384C  0ED0               	movlw	208
  7476  00384E  6E03               	movwf	??_isdigit^0,c
  7477  003850  0EFF               	movlw	255
  7478  003852  6E04               	movwf	(??_isdigit+1)^0,c
  7479  003854  C001  F005         	movff	isdigit@c,??_isdigit+2
  7480  003858  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7481  00385C  5003               	movf	??_isdigit^0,w,c
  7482  00385E  2605               	addwf	(??_isdigit+2)^0,f,c
  7483  003860  5004               	movf	(??_isdigit+1)^0,w,c
  7484  003862  2206               	addwfc	(??_isdigit+3)^0,f,c
  7485  003864  5006               	movf	(??_isdigit+3)^0,w,c
  7486  003866  E10A               	bnz	u3830
  7487  003868  0E0A               	movlw	10
  7488  00386A  5C05               	subwf	(??_isdigit+2)^0,w,c
  7489  00386C  A0D8               	btfss	status,0,c
  7490  00386E  EF3B  F01C         	goto	u3831
  7491  003872  EF3E  F01C         	goto	u3830
  7492  003876                     u3831:
  7493  003876  0E01               	movlw	1
  7494  003878  EF3F  F01C         	goto	u3840
  7495  00387C                     u3830:
  7496  00387C  0E00               	movlw	0
  7497  00387E                     u3840:
  7498  00387E  6E01               	movwf	?_isdigit^0,c
  7499  003880  6A02               	clrf	(?_isdigit+1)^0,c
  7500  003882  0012               	return		;funcret
  7501  003884                     __end_of_isdigit:
  7502                           	callstack 0
  7503                           
  7504 ;; *************** function ___wmul *****************
  7505 ;; Defined at:
  7506 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  multiplier      2    0[COMRAM] unsigned int 
  7509 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  product         2    4[COMRAM] unsigned int 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  2    0[COMRAM] unsigned int 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, prodl, prodh
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7521 ;;      Params:         4       0       0       0       0       0       0       0       0
  7522 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7524 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7525 ;;Total ram usage:        6 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_atoi
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text29
  7535  0038E6                     __ptext29:
  7536                           	callstack 0
  7537  0038E6                     ___wmul:
  7538                           	callstack 26
  7539  0038E6  5001               	movf	___wmul@multiplier^0,w,c
  7540  0038E8  0203               	mulwf	___wmul@multiplicand^0,c
  7541  0038EA  CFF3 F005          	movff	prodl,___wmul@product
  7542  0038EE  CFF4 F006          	movff	prodh,___wmul@product+1
  7543  0038F2  5001               	movf	___wmul@multiplier^0,w,c
  7544  0038F4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7545  0038F6  50F3               	movf	243,w,c
  7546  0038F8  2606               	addwf	(___wmul@product+1)^0,f,c
  7547  0038FA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7548  0038FC  0203               	mulwf	___wmul@multiplicand^0,c
  7549  0038FE  50F3               	movf	243,w,c
  7550  003900  2606               	addwf	(___wmul@product+1)^0,f,c
  7551  003902  C005  F001         	movff	___wmul@product,?___wmul
  7552  003906  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7553  00390A  0012               	return		;funcret
  7554  00390C                     __end_of___wmul:
  7555                           	callstack 0
  7556                           
  7557 ;; *************** function ___xxtofl *****************
  7558 ;; Defined at:
  7559 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  sign            1    wreg     unsigned char 
  7562 ;;  val             4    0[COMRAM] long 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  sign            1    8[COMRAM] unsigned char 
  7565 ;;  arg             4   10[COMRAM] unsigned long 
  7566 ;;  exp             1    9[COMRAM] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  4    0[COMRAM] unsigned char 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7576 ;;      Params:         4       0       0       0       0       0       0       0       0
  7577 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7578 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7579 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7580 ;;Total ram usage:       14 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_main
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text30
  7590  0026FE                     __ptext30:
  7591                           	callstack 0
  7592  0026FE                     ___xxtofl:
  7593                           	callstack 30
  7594                           
  7595                           ;incstack = 0
  7596                           ;___xxtofl@sign stored from wreg
  7597  0026FE  6E09               	movwf	___xxtofl@sign^0,c
  7598  002700  5009               	movf	___xxtofl@sign^0,w,c
  7599  002702  B4D8               	btfsc	status,2,c
  7600  002704  EF86  F013         	goto	u4651
  7601  002708  EF88  F013         	goto	u4650
  7602  00270C                     u4651:
  7603  00270C  EFAA  F013         	goto	l796
  7604  002710                     u4650:
  7605  002710  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7606  002712  EF8F  F013         	goto	u4660
  7607  002716  EF8D  F013         	goto	u4661
  7608  00271A                     u4661:
  7609  00271A  EFAA  F013         	goto	l796
  7610  00271E                     u4660:
  7611  00271E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7612  002722  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7613  002726  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7614  00272A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7615  00272E  1E05               	comf	??___xxtofl^0,f,c
  7616  002730  1E06               	comf	(??___xxtofl+1)^0,f,c
  7617  002732  1E07               	comf	(??___xxtofl+2)^0,f,c
  7618  002734  1E08               	comf	(??___xxtofl+3)^0,f,c
  7619  002736  2A05               	incf	??___xxtofl^0,f,c
  7620  002738  0E00               	movlw	0
  7621  00273A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7622  00273C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7623  00273E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7624  002740  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7625  002744  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7626  002748  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7627  00274C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7628  002750  EFB2  F013         	goto	l4063
  7629  002754                     l796:
  7630  002754  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7631  002758  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7632  00275C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7633  002760  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7634  002764                     l4063:
  7635  002764  5001               	movf	___xxtofl@val^0,w,c
  7636  002766  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7637  002768  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7638  00276A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7639  00276C  A4D8               	btfss	status,2,c
  7640  00276E  EFBB  F013         	goto	u4671
  7641  002772  EFBD  F013         	goto	u4670
  7642  002776                     u4671:
  7643  002776  EFC7  F013         	goto	l4069
  7644  00277A                     u4670:
  7645  00277A  0E00               	movlw	0
  7646  00277C  6E01               	movwf	?___xxtofl^0,c
  7647  00277E  0E00               	movlw	0
  7648  002780  6E02               	movwf	(?___xxtofl+1)^0,c
  7649  002782  0E00               	movlw	0
  7650  002784  6E03               	movwf	(?___xxtofl+2)^0,c
  7651  002786  0E00               	movlw	0
  7652  002788  6E04               	movwf	(?___xxtofl+3)^0,c
  7653  00278A  EF58  F014         	goto	l799
  7654  00278E                     l4069:
  7655  00278E  0E96               	movlw	150
  7656  002790  6E0A               	movwf	___xxtofl@exp^0,c
  7657  002792  EFD1  F013         	goto	l4073
  7658  002796                     l4071:
  7659  002796  2A0A               	incf	___xxtofl@exp^0,f,c
  7660  002798  90D8               	bcf	status,0,c
  7661  00279A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7662  00279C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7663  00279E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7664  0027A0  320B               	rrcf	___xxtofl@arg^0,f,c
  7665  0027A2                     l4073:
  7666  0027A2  0E00               	movlw	0
  7667  0027A4  140B               	andwf	___xxtofl@arg^0,w,c
  7668  0027A6  6E05               	movwf	??___xxtofl^0,c
  7669  0027A8  0E00               	movlw	0
  7670  0027AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7671  0027AC  6E06               	movwf	(??___xxtofl+1)^0,c
  7672  0027AE  0E00               	movlw	0
  7673  0027B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7674  0027B2  6E07               	movwf	(??___xxtofl+2)^0,c
  7675  0027B4  0EFE               	movlw	254
  7676  0027B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7677  0027B8  6E08               	movwf	(??___xxtofl+3)^0,c
  7678  0027BA  5005               	movf	??___xxtofl^0,w,c
  7679  0027BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7680  0027BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7681  0027C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7682  0027C2  A4D8               	btfss	status,2,c
  7683  0027C4  EFE6  F013         	goto	u4681
  7684  0027C8  EFE8  F013         	goto	u4680
  7685  0027CC                     u4681:
  7686  0027CC  EFCB  F013         	goto	l4071
  7687  0027D0                     u4680:
  7688  0027D0  EFF6  F013         	goto	l803
  7689  0027D4                     l4075:
  7690  0027D4  2A0A               	incf	___xxtofl@exp^0,f,c
  7691  0027D6  0E01               	movlw	1
  7692  0027D8  260B               	addwf	___xxtofl@arg^0,f,c
  7693  0027DA  0E00               	movlw	0
  7694  0027DC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7695  0027DE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7696  0027E0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7697  0027E2  90D8               	bcf	status,0,c
  7698  0027E4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7699  0027E6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7700  0027E8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7701  0027EA  320B               	rrcf	___xxtofl@arg^0,f,c
  7702  0027EC                     l803:
  7703  0027EC  0E00               	movlw	0
  7704  0027EE  140B               	andwf	___xxtofl@arg^0,w,c
  7705  0027F0  6E05               	movwf	??___xxtofl^0,c
  7706  0027F2  0E00               	movlw	0
  7707  0027F4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7708  0027F6  6E06               	movwf	(??___xxtofl+1)^0,c
  7709  0027F8  0E00               	movlw	0
  7710  0027FA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7711  0027FC  6E07               	movwf	(??___xxtofl+2)^0,c
  7712  0027FE  0EFF               	movlw	255
  7713  002800  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7714  002802  6E08               	movwf	(??___xxtofl+3)^0,c
  7715  002804  5005               	movf	??___xxtofl^0,w,c
  7716  002806  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7717  002808  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7718  00280A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7719  00280C  A4D8               	btfss	status,2,c
  7720  00280E  EF0B  F014         	goto	u4691
  7721  002812  EF0D  F014         	goto	u4690
  7722  002816                     u4691:
  7723  002816  EFEA  F013         	goto	l4075
  7724  00281A                     u4690:
  7725  00281A  EF15  F014         	goto	l4083
  7726  00281E                     l4081:
  7727  00281E  060A               	decf	___xxtofl@exp^0,f,c
  7728  002820  90D8               	bcf	status,0,c
  7729  002822  360B               	rlcf	___xxtofl@arg^0,f,c
  7730  002824  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7731  002826  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7732  002828  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7733  00282A                     l4083:
  7734  00282A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7735  00282C  EF1A  F014         	goto	u4701
  7736  002830  EF1C  F014         	goto	u4700
  7737  002834                     u4701:
  7738  002834  EF24  F014         	goto	l810
  7739  002838                     u4700:
  7740  002838  0E02               	movlw	2
  7741  00283A  600A               	cpfslt	___xxtofl@exp^0,c
  7742  00283C  EF22  F014         	goto	u4711
  7743  002840  EF24  F014         	goto	u4710
  7744  002844                     u4711:
  7745  002844  EF0F  F014         	goto	l4081
  7746  002848                     u4710:
  7747  002848                     l810:
  7748  002848  B00A               	btfsc	___xxtofl@exp^0,0,c
  7749  00284A  EF29  F014         	goto	u4721
  7750  00284E  EF2B  F014         	goto	u4720
  7751  002852                     u4721:
  7752  002852  EF2C  F014         	goto	l4089
  7753  002856                     u4720:
  7754  002856  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7755  002858                     l4089:
  7756  002858  90D8               	bcf	status,0,c
  7757  00285A  320A               	rrcf	___xxtofl@exp^0,f,c
  7758  00285C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7759  002860  6A06               	clrf	(??___xxtofl+1)^0,c
  7760  002862  6A07               	clrf	(??___xxtofl+2)^0,c
  7761  002864  6A08               	clrf	(??___xxtofl+3)^0,c
  7762  002866  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7763  00286A  6A07               	clrf	(??___xxtofl+2)^0,c
  7764  00286C  6A06               	clrf	(??___xxtofl+1)^0,c
  7765  00286E  6A05               	clrf	??___xxtofl^0,c
  7766  002870  5005               	movf	??___xxtofl^0,w,c
  7767  002872  120B               	iorwf	___xxtofl@arg^0,f,c
  7768  002874  5006               	movf	(??___xxtofl+1)^0,w,c
  7769  002876  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7770  002878  5007               	movf	(??___xxtofl+2)^0,w,c
  7771  00287A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7772  00287C  5008               	movf	(??___xxtofl+3)^0,w,c
  7773  00287E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7774  002880  5009               	movf	___xxtofl@sign^0,w,c
  7775  002882  B4D8               	btfsc	status,2,c
  7776  002884  EF46  F014         	goto	u4731
  7777  002888  EF48  F014         	goto	u4730
  7778  00288C                     u4731:
  7779  00288C  EF50  F014         	goto	l4099
  7780  002890                     u4730:
  7781  002890  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7782  002892  EF4F  F014         	goto	u4740
  7783  002896  EF4D  F014         	goto	u4741
  7784  00289A                     u4741:
  7785  00289A  EF50  F014         	goto	l4099
  7786  00289E                     u4740:
  7787  00289E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7788  0028A0                     l4099:
  7789  0028A0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7790  0028A4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7791  0028A8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7792  0028AC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7793  0028B0                     l799:
  7794  0028B0  0012               	return		;funcret
  7795  0028B2                     __end_of___xxtofl:
  7796                           	callstack 0
  7797                           
  7798 ;; *************** function _Master_Mode *****************
  7799 ;; Defined at:
  7800 ;;		line 12 in file "I2C.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, status,2
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used: 1
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_main
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text31
  7828  0039A4                     __ptext31:
  7829                           	callstack 0
  7830  0039A4                     _Master_Mode:
  7831                           	callstack 30
  7832  0039A4                     
  7833                           ;I2C.c: 14:     TRISBbits.RB0 = 1;
  7834  0039A4  8093               	bsf	147,0,c	;volatile
  7835                           
  7836                           ;I2C.c: 15:     TRISBbits.RB1 = 1;
  7837  0039A6  8293               	bsf	147,1,c	;volatile
  7838                           
  7839                           ;I2C.c: 17:     SSPSTATbits.SMP = 1;
  7840  0039A8  8EC7               	bsf	199,7,c	;volatile
  7841                           
  7842                           ;I2C.c: 19:     SSPCON1bits.SSPEN = 1;
  7843  0039AA  8AC6               	bsf	198,5,c	;volatile
  7844                           
  7845                           ;I2C.c: 21:     SSPCON1bits.SSPM3 = 1;
  7846  0039AC  86C6               	bsf	198,3,c	;volatile
  7847                           
  7848                           ;I2C.c: 22:     SSPCON1bits.SSPM2 = 0;
  7849  0039AE  94C6               	bcf	198,2,c	;volatile
  7850                           
  7851                           ;I2C.c: 23:     SSPCON1bits.SSPM1 = 0;
  7852  0039B0  92C6               	bcf	198,1,c	;volatile
  7853                           
  7854                           ;I2C.c: 24:     SSPCON1bits.SSPM0 = 0;
  7855  0039B2  90C6               	bcf	198,0,c	;volatile
  7856  0039B4                     
  7857                           ;I2C.c: 35:     SSPADD = (uint8_t)(((48000000UL/4)/100000UL) - 1);
  7858  0039B4  0E77               	movlw	119
  7859  0039B6  6EC8               	movwf	200,c	;volatile
  7860                           
  7861                           ;I2C.c: 36:     SSPCON2 = 0x00;
  7862  0039B8  0E00               	movlw	0
  7863  0039BA  6EC5               	movwf	197,c	;volatile
  7864  0039BC  0012               	return		;funcret
  7865  0039BE                     __end_of_Master_Mode:
  7866                           	callstack 0
  7867                           
  7868 ;; *************** function _LCD_I2C_WriteText *****************
  7869 ;; Defined at:
  7870 ;;		line 109 in file "LCD_I2C.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  row             1    wreg     unsigned char 
  7873 ;;  col             1   10[COMRAM] unsigned char 
  7874 ;;  string          2   11[COMRAM] PTR unsigned char 
  7875 ;;		 -> bufferTx(20), STR_1(12), 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  row             1   15[COMRAM] unsigned char 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7887 ;;      Params:         3       0       0       0       0       0       0       0       0
  7888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7889 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7890 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7891 ;;Total ram usage:        6 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 4
  7894 ;; This function calls:
  7895 ;;		_LCD_I2C_nibble
  7896 ;; This function is called by:
  7897 ;;		_main
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text32
  7902  002D24                     __ptext32:
  7903                           	callstack 0
  7904  002D24                     _LCD_I2C_WriteText:
  7905                           	callstack 26
  7906                           
  7907                           ;incstack = 0
  7908                           ;LCD_I2C_WriteText@row stored from wreg
  7909  002D24  6E10               	movwf	LCD_I2C_WriteText@row^0,c
  7910  002D26                     
  7911                           ;LCD_I2C.c: 112:     switch (row) {
  7912  002D26  EFC7  F016         	goto	l4023
  7913  002D2A                     l4001:
  7914  002D2A  500B               	movf	LCD_I2C_WriteText@col^0,w,c
  7915  002D2C  0F80               	addlw	128
  7916  002D2E  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
  7917  002D30                     
  7918                           ;LCD_I2C.c: 114:                 LCD_I2C_nibble(0x00,col);
  7919  002D30  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  7920  002D34  0E00               	movlw	0
  7921  002D36  ECB6  F01C         	call	_LCD_I2C_nibble
  7922                           
  7923                           ;LCD_I2C.c: 115:                 break;
  7924  002D3A  EFFA  F016         	goto	l4029
  7925  002D3E                     l4005:
  7926  002D3E  500B               	movf	LCD_I2C_WriteText@col^0,w,c
  7927  002D40  0FC0               	addlw	192
  7928  002D42  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
  7929  002D44                     
  7930                           ;LCD_I2C.c: 118:                 LCD_I2C_nibble(0x00,col);
  7931  002D44  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  7932  002D48  0E00               	movlw	0
  7933  002D4A  ECB6  F01C         	call	_LCD_I2C_nibble
  7934                           
  7935                           ;LCD_I2C.c: 119:                 break;
  7936  002D4E  EFFA  F016         	goto	l4029
  7937  002D52                     l4009:
  7938  002D52  500B               	movf	LCD_I2C_WriteText@col^0,w,c
  7939  002D54  0F94               	addlw	148
  7940  002D56  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
  7941  002D58                     
  7942                           ;LCD_I2C.c: 122:                 LCD_I2C_nibble(0x00,col);
  7943  002D58  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  7944  002D5C  0E00               	movlw	0
  7945  002D5E  ECB6  F01C         	call	_LCD_I2C_nibble
  7946                           
  7947                           ;LCD_I2C.c: 123:                 break;
  7948  002D62  EFFA  F016         	goto	l4029
  7949  002D66                     l4013:
  7950  002D66  500B               	movf	LCD_I2C_WriteText@col^0,w,c
  7951  002D68  0FD4               	addlw	212
  7952  002D6A  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
  7953  002D6C                     
  7954                           ;LCD_I2C.c: 126:                 LCD_I2C_nibble(0x00,col);
  7955  002D6C  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  7956  002D70  0E00               	movlw	0
  7957  002D72  ECB6  F01C         	call	_LCD_I2C_nibble
  7958                           
  7959                           ;LCD_I2C.c: 127:                 break;
  7960  002D76  EFFA  F016         	goto	l4029
  7961  002D7A                     l4017:
  7962  002D7A  500B               	movf	LCD_I2C_WriteText@col^0,w,c
  7963  002D7C  0F80               	addlw	128
  7964  002D7E  6E0B               	movwf	LCD_I2C_WriteText@col^0,c
  7965  002D80                     
  7966                           ;LCD_I2C.c: 130:                 LCD_I2C_nibble(0x00,col);
  7967  002D80  C00B  F009         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  7968  002D84  0E00               	movlw	0
  7969  002D86  ECB6  F01C         	call	_LCD_I2C_nibble
  7970                           
  7971                           ;LCD_I2C.c: 131:                 break;
  7972  002D8A  EFFA  F016         	goto	l4029
  7973  002D8E                     l4023:
  7974  002D8E  5010               	movf	LCD_I2C_WriteText@row^0,w,c
  7975  002D90  6E0E               	movwf	??_LCD_I2C_WriteText^0,c
  7976  002D92  6A0F               	clrf	(??_LCD_I2C_WriteText+1)^0,c
  7977                           
  7978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7979                           ; Switch size 1, requested type "simple"
  7980                           ; Number of cases is 1, Range of values is 0 to 0
  7981                           ; switch strategies available:
  7982                           ; Name         Instructions Cycles
  7983                           ; simple_byte            4     3 (average)
  7984                           ;	Chosen strategy is simple_byte
  7985  002D94  500F               	movf	(??_LCD_I2C_WriteText+1)^0,w,c
  7986  002D96  0A00               	xorlw	0	; case 0
  7987  002D98  B4D8               	btfsc	status,2,c
  7988  002D9A  EFD1  F016         	goto	l4163
  7989  002D9E  EFBD  F016         	goto	l4017
  7990  002DA2                     l4163:
  7991                           
  7992                           ; Switch size 1, requested type "simple"
  7993                           ; Number of cases is 4, Range of values is 0 to 3
  7994                           ; switch strategies available:
  7995                           ; Name         Instructions Cycles
  7996                           ; simple_byte           13     7 (average)
  7997                           ;	Chosen strategy is simple_byte
  7998  002DA2  500E               	movf	??_LCD_I2C_WriteText^0,w,c
  7999  002DA4  0A00               	xorlw	0	; case 0
  8000  002DA6  B4D8               	btfsc	status,2,c
  8001  002DA8  EF95  F016         	goto	l4001
  8002  002DAC  0A01               	xorlw	1	; case 1
  8003  002DAE  B4D8               	btfsc	status,2,c
  8004  002DB0  EF9F  F016         	goto	l4005
  8005  002DB4  0A03               	xorlw	3	; case 2
  8006  002DB6  B4D8               	btfsc	status,2,c
  8007  002DB8  EFA9  F016         	goto	l4009
  8008  002DBC  0A01               	xorlw	1	; case 3
  8009  002DBE  B4D8               	btfsc	status,2,c
  8010  002DC0  EFB3  F016         	goto	l4013
  8011  002DC4  EFBD  F016         	goto	l4017
  8012  002DC8                     l4025:
  8013                           
  8014                           ;LCD_I2C.c: 138:         LCD_I2C_nibble(0x01,*string++);
  8015  002DC8  C00C  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
  8016  002DCC  C00D  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
  8017  002DD0  6AF8               	clrf	tblptru,c
  8018  002DD2  0E07               	movlw	(high __ramtop+-1)
  8019  002DD4  64F7               	cpfsgt	tblptrh,c
  8020  002DD6  D003               	bra	u4607
  8021  002DD8  0008               	tblrd		*
  8022  002DDA  50F5               	movf	tablat,w,c
  8023  002DDC  D005               	bra	u4600
  8024  002DDE                     u4607:
  8025  002DDE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8026  002DE2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8027  002DE6  50E7               	movf	indf1,w,c
  8028  002DE8                     u4600:
  8029  002DE8  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8030  002DEA  0E01               	movlw	1
  8031  002DEC  ECB6  F01C         	call	_LCD_I2C_nibble
  8032  002DF0  4A0C               	infsnz	LCD_I2C_WriteText@string^0,f,c
  8033  002DF2  2A0D               	incf	(LCD_I2C_WriteText@string+1)^0,f,c
  8034  002DF4                     l4029:
  8035                           
  8036                           ;LCD_I2C.c: 137:     while (*string)
  8037  002DF4  C00C  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
  8038  002DF8  C00D  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
  8039  002DFC  6AF8               	clrf	tblptru,c
  8040  002DFE  0E07               	movlw	(high __ramtop+-1)
  8041  002E00  64F7               	cpfsgt	tblptrh,c
  8042  002E02  D003               	bra	u4617
  8043  002E04  0008               	tblrd		*
  8044  002E06  50F5               	movf	tablat,w,c
  8045  002E08  D005               	bra	u4610
  8046  002E0A                     u4617:
  8047  002E0A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8048  002E0E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8049  002E12  50E7               	movf	indf1,w,c
  8050  002E14                     u4610:
  8051  002E14  0900               	iorlw	0
  8052  002E16  A4D8               	btfss	status,2,c
  8053  002E18  EF10  F017         	goto	u4621
  8054  002E1C  EF12  F017         	goto	u4620
  8055  002E20                     u4621:
  8056  002E20  EFE4  F016         	goto	l4025
  8057  002E24                     u4620:
  8058  002E24  0012               	return		;funcret
  8059  002E26                     __end_of_LCD_I2C_WriteText:
  8060                           	callstack 0
  8061                           
  8062 ;; *************** function _LCD_I2C_Init *****************
  8063 ;; Defined at:
  8064 ;;		line 61 in file "LCD_I2C.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8080 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8081 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8082 ;;Total ram usage:        1 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; Hardware stack levels required when called: 4
  8085 ;; This function calls:
  8086 ;;		_I2C_ADDRESS_SLAVE
  8087 ;;		_I2C_Start
  8088 ;;		_I2C_Stop
  8089 ;;		_I2C_Write_Data
  8090 ;;		_LCD_I2C_Databus
  8091 ;;		_LCD_I2C_nibble
  8092 ;; This function is called by:
  8093 ;;		_main
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text33
  8098  002A08                     __ptext33:
  8099                           	callstack 0
  8100  002A08                     _LCD_I2C_Init:
  8101                           	callstack 26
  8102  002A08                     
  8103                           ;LCD_I2C.c: 64:     I2C_Start();
  8104  002A08  ECE8  F01C         	call	_I2C_Start	;wreg free
  8105  002A0C                     
  8106                           ;LCD_I2C.c: 65:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  8107  002A0C  0E00               	movlw	0
  8108  002A0E  6E01               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  8109  002A10  0E4E               	movlw	78
  8110  002A12  EC5D  F01C         	call	_I2C_ADDRESS_SLAVE
  8111  002A16                     
  8112                           ;LCD_I2C.c: 66:     I2C_Write_Data(0x00);
  8113  002A16  0E00               	movlw	0
  8114  002A18  ECC4  F01C         	call	_I2C_Write_Data
  8115  002A1C                     
  8116                           ;LCD_I2C.c: 67:     I2C_Stop();
  8117  002A1C  ECDF  F01C         	call	_I2C_Stop	;wreg free
  8118  002A20                     
  8119                           ;LCD_I2C.c: 68:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  8120  002A20  0E62               	movlw	98
  8121  002A22  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8122  002A24  0E66               	movlw	102
  8123  002A26                     u4767:
  8124  002A26  2EE8               	decfsz	wreg,f,c
  8125  002A28  D7FE               	bra	u4767
  8126  002A2A  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8127  002A2C  D7FC               	bra	u4767
  8128  002A2E                     
  8129                           ;LCD_I2C.c: 86:     LCD_I2C_Databus(0,0x03);
  8130  002A2E  0E03               	movlw	3
  8131  002A30  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8132  002A32  0E00               	movlw	0
  8133  002A34  EC9F  F019         	call	_LCD_I2C_Databus
  8134  002A38                     
  8135                           ;LCD_I2C.c: 87:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8136  002A38  0E21               	movlw	33
  8137  002A3A  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8138  002A3C  0E76               	movlw	118
  8139  002A3E                     u4777:
  8140  002A3E  2EE8               	decfsz	wreg,f,c
  8141  002A40  D7FE               	bra	u4777
  8142  002A42  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8143  002A44  D7FC               	bra	u4777
  8144  002A46  D000               	nop2	
  8145  002A48                     
  8146                           ;LCD_I2C.c: 89:     LCD_I2C_Databus(0,0x03);
  8147  002A48  0E03               	movlw	3
  8148  002A4A  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8149  002A4C  0E00               	movlw	0
  8150  002A4E  EC9F  F019         	call	_LCD_I2C_Databus
  8151  002A52                     
  8152                           ;LCD_I2C.c: 90:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8153  002A52  0E21               	movlw	33
  8154  002A54  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8155  002A56  0E76               	movlw	118
  8156  002A58                     u4787:
  8157  002A58  2EE8               	decfsz	wreg,f,c
  8158  002A5A  D7FE               	bra	u4787
  8159  002A5C  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8160  002A5E  D7FC               	bra	u4787
  8161  002A60  D000               	nop2	
  8162  002A62                     
  8163                           ;LCD_I2C.c: 92:     LCD_I2C_Databus(0,0x03);
  8164  002A62  0E03               	movlw	3
  8165  002A64  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8166  002A66  0E00               	movlw	0
  8167  002A68  EC9F  F019         	call	_LCD_I2C_Databus
  8168  002A6C                     
  8169                           ;LCD_I2C.c: 93:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8170  002A6C  0E21               	movlw	33
  8171  002A6E  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8172  002A70  0E76               	movlw	118
  8173  002A72                     u4797:
  8174  002A72  2EE8               	decfsz	wreg,f,c
  8175  002A74  D7FE               	bra	u4797
  8176  002A76  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8177  002A78  D7FC               	bra	u4797
  8178  002A7A  D000               	nop2	
  8179  002A7C                     
  8180                           ;LCD_I2C.c: 95:     LCD_I2C_Databus(0,0x02);
  8181  002A7C  0E02               	movlw	2
  8182  002A7E  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8183  002A80  0E00               	movlw	0
  8184  002A82  EC9F  F019         	call	_LCD_I2C_Databus
  8185  002A86                     
  8186                           ;LCD_I2C.c: 96:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8187  002A86  0E21               	movlw	33
  8188  002A88  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8189  002A8A  0E76               	movlw	118
  8190  002A8C                     u4807:
  8191  002A8C  2EE8               	decfsz	wreg,f,c
  8192  002A8E  D7FE               	bra	u4807
  8193  002A90  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8194  002A92  D7FC               	bra	u4807
  8195  002A94  D000               	nop2	
  8196  002A96                     
  8197                           ;LCD_I2C.c: 97:     LCD_I2C_nibble(0,0x028);
  8198  002A96  0E28               	movlw	40
  8199  002A98  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8200  002A9A  0E00               	movlw	0
  8201  002A9C  ECB6  F01C         	call	_LCD_I2C_nibble
  8202  002AA0                     
  8203                           ;LCD_I2C.c: 98:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8204  002AA0  0E21               	movlw	33
  8205  002AA2  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8206  002AA4  0E76               	movlw	118
  8207  002AA6                     u4817:
  8208  002AA6  2EE8               	decfsz	wreg,f,c
  8209  002AA8  D7FE               	bra	u4817
  8210  002AAA  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8211  002AAC  D7FC               	bra	u4817
  8212  002AAE  D000               	nop2	
  8213  002AB0                     
  8214                           ;LCD_I2C.c: 99:     LCD_I2C_nibble(0,0x08);
  8215  002AB0  0E08               	movlw	8
  8216  002AB2  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8217  002AB4  0E00               	movlw	0
  8218  002AB6  ECB6  F01C         	call	_LCD_I2C_nibble
  8219  002ABA                     
  8220                           ;LCD_I2C.c: 100:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8221  002ABA  0E21               	movlw	33
  8222  002ABC  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8223  002ABE  0E76               	movlw	118
  8224  002AC0                     u4827:
  8225  002AC0  2EE8               	decfsz	wreg,f,c
  8226  002AC2  D7FE               	bra	u4827
  8227  002AC4  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8228  002AC6  D7FC               	bra	u4827
  8229  002AC8  D000               	nop2	
  8230  002ACA                     
  8231                           ;LCD_I2C.c: 101:     LCD_I2C_nibble(0,0x01);
  8232  002ACA  0E01               	movlw	1
  8233  002ACC  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8234  002ACE  0E00               	movlw	0
  8235  002AD0  ECB6  F01C         	call	_LCD_I2C_nibble
  8236  002AD4                     
  8237                           ;LCD_I2C.c: 102:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8238  002AD4  0E21               	movlw	33
  8239  002AD6  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8240  002AD8  0E76               	movlw	118
  8241  002ADA                     u4837:
  8242  002ADA  2EE8               	decfsz	wreg,f,c
  8243  002ADC  D7FE               	bra	u4837
  8244  002ADE  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8245  002AE0  D7FC               	bra	u4837
  8246  002AE2  D000               	nop2	
  8247  002AE4                     
  8248                           ;LCD_I2C.c: 103:     LCD_I2C_nibble(0,0x06);
  8249  002AE4  0E06               	movlw	6
  8250  002AE6  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8251  002AE8  0E00               	movlw	0
  8252  002AEA  ECB6  F01C         	call	_LCD_I2C_nibble
  8253  002AEE                     
  8254                           ;LCD_I2C.c: 104:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8255  002AEE  0E21               	movlw	33
  8256  002AF0  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8257  002AF2  0E76               	movlw	118
  8258  002AF4                     u4847:
  8259  002AF4  2EE8               	decfsz	wreg,f,c
  8260  002AF6  D7FE               	bra	u4847
  8261  002AF8  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8262  002AFA  D7FC               	bra	u4847
  8263  002AFC  D000               	nop2	
  8264  002AFE                     
  8265                           ;LCD_I2C.c: 105:     LCD_I2C_nibble(0,0x0F);
  8266  002AFE  0E0F               	movlw	15
  8267  002B00  6E09               	movwf	LCD_I2C_nibble@cmd^0,c
  8268  002B02  0E00               	movlw	0
  8269  002B04  ECB6  F01C         	call	_LCD_I2C_nibble
  8270  002B08                     
  8271                           ;LCD_I2C.c: 106:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8272  002B08  0E21               	movlw	33
  8273  002B0A  6E0B               	movwf	??_LCD_I2C_Init^0,c
  8274  002B0C  0E76               	movlw	118
  8275  002B0E                     u4857:
  8276  002B0E  2EE8               	decfsz	wreg,f,c
  8277  002B10  D7FE               	bra	u4857
  8278  002B12  2E0B               	decfsz	??_LCD_I2C_Init^0,f,c
  8279  002B14  D7FC               	bra	u4857
  8280  002B16  D000               	nop2	
  8281  002B18  0012               	return		;funcret
  8282  002B1A                     __end_of_LCD_I2C_Init:
  8283                           	callstack 0
  8284                           
  8285 ;; *************** function _LCD_I2C_nibble *****************
  8286 ;; Defined at:
  8287 ;;		line 53 in file "LCD_I2C.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  ctrl            1    wreg     unsigned char 
  8290 ;;  cmd             1    8[COMRAM] unsigned char 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  ctrl            1    9[COMRAM] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8302 ;;      Params:         1       0       0       0       0       0       0       0       0
  8303 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8305 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8306 ;;Total ram usage:        2 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 3
  8309 ;; This function calls:
  8310 ;;		_LCD_I2C_Databus
  8311 ;; This function is called by:
  8312 ;;		_LCD_I2C_Init
  8313 ;;		_LCD_I2C_WriteText
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text34
  8318  00396C                     __ptext34:
  8319                           	callstack 0
  8320  00396C                     _LCD_I2C_nibble:
  8321                           	callstack 26
  8322                           
  8323                           ;incstack = 0
  8324                           ;LCD_I2C_nibble@ctrl stored from wreg
  8325  00396C  6E0A               	movwf	LCD_I2C_nibble@ctrl^0,c
  8326  00396E                     
  8327                           ;LCD_I2C.c: 55:     LCD_I2C_Databus(ctrl,cmd>>4);
  8328  00396E  3809               	swapf	LCD_I2C_nibble@cmd^0,w,c
  8329  003970  0B0F               	andlw	15
  8330  003972  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8331  003974  500A               	movf	LCD_I2C_nibble@ctrl^0,w,c
  8332  003976  EC9F  F019         	call	_LCD_I2C_Databus
  8333                           
  8334                           ;LCD_I2C.c: 56:     LCD_I2C_Databus(ctrl,cmd&0x0F);
  8335  00397A  5009               	movf	LCD_I2C_nibble@cmd^0,w,c
  8336  00397C  0B0F               	andlw	15
  8337  00397E  6E06               	movwf	LCD_I2C_Databus@cmd^0,c
  8338  003980  500A               	movf	LCD_I2C_nibble@ctrl^0,w,c
  8339  003982  EC9F  F019         	call	_LCD_I2C_Databus
  8340  003986  0012               	return		;funcret
  8341  003988                     __end_of_LCD_I2C_nibble:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _LCD_I2C_Databus *****************
  8345 ;; Defined at:
  8346 ;;		line 12 in file "LCD_I2C.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  ctrl            1    wreg     unsigned char 
  8349 ;;  cmd             1    5[COMRAM] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  ctrl            1    6[COMRAM] unsigned char 
  8352 ;;  data            1    7[COMRAM] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8362 ;;      Params:         1       0       0       0       0       0       0       0       0
  8363 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8365 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8366 ;;Total ram usage:        3 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; Hardware stack levels required when called: 2
  8369 ;; This function calls:
  8370 ;;		_PCF8574_Write
  8371 ;; This function is called by:
  8372 ;;		_LCD_I2C_nibble
  8373 ;;		_LCD_I2C_Init
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text35
  8378  00333E                     __ptext35:
  8379                           	callstack 0
  8380  00333E                     _LCD_I2C_Databus:
  8381                           	callstack 26
  8382                           
  8383                           ;incstack = 0
  8384                           ;LCD_I2C_Databus@ctrl stored from wreg
  8385  00333E  6E07               	movwf	LCD_I2C_Databus@ctrl^0,c
  8386  003340                     
  8387                           ;LCD_I2C.c: 13:     uint8_t data;;LCD_I2C.c: 15:     if((cmd & 1) == 1){
  8388  003340  A006               	btfss	LCD_I2C_Databus@cmd^0,0,c
  8389  003342  EFA5  F019         	goto	u4441
  8390  003346  EFA7  F019         	goto	u4440
  8391  00334A                     u4441:
  8392  00334A  EFAC  F019         	goto	l3815
  8393  00334E                     u4440:
  8394  00334E                     
  8395                           ;LCD_I2C.c: 16:         data = data | 0x10;
  8396  00334E  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8397  003350  0910               	iorlw	16
  8398  003352  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8399                           
  8400                           ;LCD_I2C.c: 17:     }else{
  8401  003354  EFAF  F019         	goto	l3817
  8402  003358                     l3815:
  8403                           
  8404                           ;LCD_I2C.c: 18:         data = data &~ 0x10;
  8405  003358  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8406  00335A  0BEF               	andlw	239
  8407  00335C  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8408  00335E                     l3817:
  8409                           
  8410                           ;LCD_I2C.c: 21:     if((cmd & 2) == 2){
  8411  00335E  A206               	btfss	LCD_I2C_Databus@cmd^0,1,c
  8412  003360  EFB4  F019         	goto	u4451
  8413  003364  EFB6  F019         	goto	u4450
  8414  003368                     u4451:
  8415  003368  EFBB  F019         	goto	l3821
  8416  00336C                     u4450:
  8417  00336C                     
  8418                           ;LCD_I2C.c: 22:         data = data | 0x20;
  8419  00336C  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8420  00336E  0920               	iorlw	32
  8421  003370  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8422                           
  8423                           ;LCD_I2C.c: 23:     }else{
  8424  003372  EFBE  F019         	goto	l3823
  8425  003376                     l3821:
  8426                           
  8427                           ;LCD_I2C.c: 24:         data = data &~ 0x20;
  8428  003376  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8429  003378  0BDF               	andlw	223
  8430  00337A  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8431  00337C                     l3823:
  8432                           
  8433                           ;LCD_I2C.c: 27:     if((cmd & 4) == 4){
  8434  00337C  A406               	btfss	LCD_I2C_Databus@cmd^0,2,c
  8435  00337E  EFC3  F019         	goto	u4461
  8436  003382  EFC5  F019         	goto	u4460
  8437  003386                     u4461:
  8438  003386  EFCA  F019         	goto	l3827
  8439  00338A                     u4460:
  8440  00338A                     
  8441                           ;LCD_I2C.c: 28:         data = data | 0x40;
  8442  00338A  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8443  00338C  0940               	iorlw	64
  8444  00338E  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8445                           
  8446                           ;LCD_I2C.c: 29:     }else{
  8447  003390  EFCD  F019         	goto	l3829
  8448  003394                     l3827:
  8449                           
  8450                           ;LCD_I2C.c: 30:         data = data &~ 0x40;
  8451  003394  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8452  003396  0BBF               	andlw	191
  8453  003398  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8454  00339A                     l3829:
  8455                           
  8456                           ;LCD_I2C.c: 33:     if((cmd & 8) == 8){
  8457  00339A  A606               	btfss	LCD_I2C_Databus@cmd^0,3,c
  8458  00339C  EFD2  F019         	goto	u4471
  8459  0033A0  EFD4  F019         	goto	u4470
  8460  0033A4                     u4471:
  8461  0033A4  EFD9  F019         	goto	l3833
  8462  0033A8                     u4470:
  8463  0033A8                     
  8464                           ;LCD_I2C.c: 34:         data = data | 0x80;
  8465  0033A8  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8466  0033AA  0980               	iorlw	128
  8467  0033AC  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8468                           
  8469                           ;LCD_I2C.c: 35:     }else{
  8470  0033AE  EFDC  F019         	goto	l3835
  8471  0033B2                     l3833:
  8472                           
  8473                           ;LCD_I2C.c: 36:         data = data &~ 0x80;
  8474  0033B2  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8475  0033B4  0B7F               	andlw	127
  8476  0033B6  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8477  0033B8                     l3835:
  8478                           
  8479                           ;LCD_I2C.c: 39:     _delay((unsigned long)((60)*(20000000UL/4000000.0)));
  8480  0033B8  0E64               	movlw	100
  8481  0033BA                     u4867:
  8482  0033BA  2EE8               	decfsz	wreg,f,c
  8483  0033BC  D7FE               	bra	u4867
  8484  0033BE                     
  8485                           ;LCD_I2C.c: 42:     if(ctrl == 1){
  8486  0033BE  0407               	decf	LCD_I2C_Databus@ctrl^0,w,c
  8487  0033C0  A4D8               	btfss	status,2,c
  8488  0033C2  EFE5  F019         	goto	u4481
  8489  0033C6  EFE7  F019         	goto	u4480
  8490  0033CA                     u4481:
  8491  0033CA  EFEC  F019         	goto	l3841
  8492  0033CE                     u4480:
  8493  0033CE                     
  8494                           ;LCD_I2C.c: 43:         data = data | 0x01;
  8495  0033CE  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8496  0033D0  0901               	iorlw	1
  8497  0033D2  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8498                           
  8499                           ;LCD_I2C.c: 44:     }else{
  8500  0033D4  EFEF  F019         	goto	l3843
  8501  0033D8                     l3841:
  8502                           
  8503                           ;LCD_I2C.c: 45:         data = data &~ 0x01;
  8504  0033D8  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8505  0033DA  0BFE               	andlw	254
  8506  0033DC  6E08               	movwf	LCD_I2C_Databus@data^0,c
  8507  0033DE                     l3843:
  8508                           
  8509                           ;LCD_I2C.c: 48:     PCF8574_Write(data | 0x04);
  8510  0033DE  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8511  0033E0  0904               	iorlw	4
  8512  0033E2  ECA7  F01C         	call	_PCF8574_Write
  8513  0033E6                     
  8514                           ;LCD_I2C.c: 49:     _delay((unsigned long)((2)*(20000000UL/4000000.0)));
  8515  0033E6  0E03               	movlw	3
  8516  0033E8                     u4877:
  8517  0033E8  2EE8               	decfsz	wreg,f,c
  8518  0033EA  D7FE               	bra	u4877
  8519  0033EC  F000               	nop	
  8520  0033EE                     
  8521                           ;LCD_I2C.c: 50:     PCF8574_Write(data &~ 0x04);
  8522  0033EE  5008               	movf	LCD_I2C_Databus@data^0,w,c
  8523  0033F0  0BFB               	andlw	251
  8524  0033F2  ECA7  F01C         	call	_PCF8574_Write
  8525  0033F6  0012               	return		;funcret
  8526  0033F8                     __end_of_LCD_I2C_Databus:
  8527                           	callstack 0
  8528                           
  8529 ;; *************** function _PCF8574_Write *****************
  8530 ;; Defined at:
  8531 ;;		line 4 in file "LCD_I2C.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  byte            1    wreg     unsigned char 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  byte            1    4[COMRAM] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0
  8546 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8549 ;;Total ram usage:        1 bytes
  8550 ;; Hardware stack levels used: 1
  8551 ;; Hardware stack levels required when called: 1
  8552 ;; This function calls:
  8553 ;;		_I2C_ADDRESS_SLAVE
  8554 ;;		_I2C_Start
  8555 ;;		_I2C_Stop
  8556 ;;		_I2C_Write_Data
  8557 ;; This function is called by:
  8558 ;;		_LCD_I2C_Databus
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text36
  8563  00394E                     __ptext36:
  8564                           	callstack 0
  8565  00394E                     _PCF8574_Write:
  8566                           	callstack 26
  8567                           
  8568                           ;incstack = 0
  8569                           ;PCF8574_Write@byte stored from wreg
  8570  00394E  6E05               	movwf	PCF8574_Write@byte^0,c
  8571  003950                     
  8572                           ;LCD_I2C.c: 6:     I2C_Start();
  8573  003950  ECE8  F01C         	call	_I2C_Start	;wreg free
  8574  003954                     
  8575                           ;LCD_I2C.c: 7:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  8576  003954  0E00               	movlw	0
  8577  003956  6E01               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  8578  003958  0E4E               	movlw	78
  8579  00395A  EC5D  F01C         	call	_I2C_ADDRESS_SLAVE
  8580  00395E                     
  8581                           ;LCD_I2C.c: 8:     I2C_Write_Data((byte | 0x08));
  8582  00395E  5005               	movf	PCF8574_Write@byte^0,w,c
  8583  003960  0908               	iorlw	8
  8584  003962  ECC4  F01C         	call	_I2C_Write_Data
  8585                           
  8586                           ;LCD_I2C.c: 9:     I2C_Stop();
  8587  003966  ECDF  F01C         	call	_I2C_Stop	;wreg free
  8588  00396A  0012               	return		;funcret
  8589  00396C                     __end_of_PCF8574_Write:
  8590                           	callstack 0
  8591                           
  8592 ;; *************** function _I2C_Write_Data *****************
  8593 ;; Defined at:
  8594 ;;		line 65 in file "I2C.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  data            1    wreg     unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  data            1    0[COMRAM] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0
  8609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8611 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8612 ;;Total ram usage:        1 bytes
  8613 ;; Hardware stack levels used: 1
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_PCF8574_Write
  8618 ;;		_LCD_I2C_Init
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           	psect	text37
  8623  003988                     __ptext37:
  8624                           	callstack 0
  8625  003988                     _I2C_Write_Data:
  8626                           	callstack 26
  8627                           
  8628                           ;incstack = 0
  8629                           ;I2C_Write_Data@data stored from wreg
  8630  003988  6E01               	movwf	I2C_Write_Data@data^0,c
  8631  00398A                     
  8632                           ;I2C.c: 67:     SSPBUF = data;
  8633  00398A  C001  FFC9         	movff	I2C_Write_Data@data,4041	;volatile
  8634  00398E                     
  8635                           ;I2C.c: 69:     SSPCON2bits.ACKDT = 0;
  8636  00398E  9AC5               	bcf	197,5,c	;volatile
  8637  003990                     
  8638                           ;I2C.c: 71:     SSPCON2bits.ACKEN = 1;
  8639  003990  88C5               	bsf	197,4,c	;volatile
  8640  003992                     
  8641                           ;I2C.c: 73:     PIR1bits.SSPIF = 0;
  8642  003992  969E               	bcf	158,3,c	;volatile
  8643  003994                     l84:
  8644  003994  A69E               	btfss	158,3,c	;volatile
  8645  003996  EFCF  F01C         	goto	u2871
  8646  00399A  EFD1  F01C         	goto	u2870
  8647  00399E                     u2871:
  8648  00399E  EFCA  F01C         	goto	l84
  8649  0039A2                     u2870:
  8650  0039A2  0012               	return		;funcret
  8651  0039A4                     __end_of_I2C_Write_Data:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function _I2C_Stop *****************
  8655 ;; Defined at:
  8656 ;;		line 78 in file "I2C.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		None
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8673 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8674 ;;Total ram usage:        0 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; This function calls:
  8677 ;;		Nothing
  8678 ;; This function is called by:
  8679 ;;		_PCF8574_Write
  8680 ;;		_LCD_I2C_Init
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text38
  8685  0039BE                     __ptext38:
  8686                           	callstack 0
  8687  0039BE                     _I2C_Stop:
  8688                           	callstack 26
  8689  0039BE                     
  8690                           ;I2C.c: 82:     SSPCON2bits.PEN = 1;
  8691  0039BE  84C5               	bsf	197,2,c	;volatile
  8692  0039C0                     l90:
  8693  0039C0  B4C5               	btfsc	197,2,c	;volatile
  8694  0039C2  EFE5  F01C         	goto	u2881
  8695  0039C6  EFE7  F01C         	goto	u2880
  8696  0039CA                     u2881:
  8697  0039CA  EFE0  F01C         	goto	l90
  8698  0039CE                     u2880:
  8699  0039CE  0012               	return		;funcret
  8700  0039D0                     __end_of_I2C_Stop:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function _I2C_Start *****************
  8704 ;; Defined at:
  8705 ;;		line 39 in file "I2C.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;		None
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		None
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8719 ;;      Params:         0       0       0       0       0       0       0       0       0
  8720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8722 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8723 ;;Total ram usage:        0 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_PCF8574_Write
  8729 ;;		_LCD_I2C_Init
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text39
  8734  0039D0                     __ptext39:
  8735                           	callstack 0
  8736  0039D0                     _I2C_Start:
  8737                           	callstack 26
  8738  0039D0                     
  8739                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  8740  0039D0  80C5               	bsf	197,0,c	;volatile
  8741  0039D2                     l72:
  8742  0039D2  B0C5               	btfsc	197,0,c	;volatile
  8743  0039D4  EFEE  F01C         	goto	u2851
  8744  0039D8  EFF0  F01C         	goto	u2850
  8745  0039DC                     u2851:
  8746  0039DC  EFE9  F01C         	goto	l72
  8747  0039E0                     u2850:
  8748  0039E0  0012               	return		;funcret
  8749  0039E2                     __end_of_I2C_Start:
  8750                           	callstack 0
  8751                           
  8752 ;; *************** function _I2C_ADDRESS_SLAVE *****************
  8753 ;; Defined at:
  8754 ;;		line 48 in file "I2C.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  address         1    wreg     unsigned char 
  8757 ;;  modo            1    0[COMRAM] unsigned char 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  address         1    2[COMRAM] unsigned char 
  8760 ;;  data            1    3[COMRAM] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8770 ;;      Params:         1       0       0       0       0       0       0       0       0
  8771 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8772 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8773 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8774 ;;Total ram usage:        4 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_PCF8574_Write
  8780 ;;		_LCD_I2C_Init
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text40
  8785  0038BA                     __ptext40:
  8786                           	callstack 0
  8787  0038BA                     _I2C_ADDRESS_SLAVE:
  8788                           	callstack 26
  8789                           
  8790                           ;incstack = 0
  8791                           ;I2C_ADDRESS_SLAVE@address stored from wreg
  8792  0038BA  6E03               	movwf	I2C_ADDRESS_SLAVE@address^0,c
  8793  0038BC                     
  8794                           ;I2C.c: 51:     data = ((address & 0xFE)) | (modo & 0x01) ;
  8795  0038BC  C001  F002         	movff	I2C_ADDRESS_SLAVE@modo,??_I2C_ADDRESS_SLAVE
  8796  0038C0  0E01               	movlw	1
  8797  0038C2  1602               	andwf	??_I2C_ADDRESS_SLAVE^0,f,c
  8798  0038C4  5003               	movf	I2C_ADDRESS_SLAVE@address^0,w,c
  8799  0038C6  0BFE               	andlw	254
  8800  0038C8  1002               	iorwf	??_I2C_ADDRESS_SLAVE^0,w,c
  8801  0038CA  6E04               	movwf	I2C_ADDRESS_SLAVE@data^0,c
  8802  0038CC                     
  8803                           ;I2C.c: 52:     SSPBUF = data;
  8804  0038CC  C004  FFC9         	movff	I2C_ADDRESS_SLAVE@data,4041	;volatile
  8805  0038D0                     
  8806                           ;I2C.c: 56:     SSPCON2bits.ACKDT = 0;
  8807  0038D0  9AC5               	bcf	197,5,c	;volatile
  8808  0038D2                     
  8809                           ;I2C.c: 58:     SSPCON2bits.ACKEN = 1;
  8810  0038D2  88C5               	bsf	197,4,c	;volatile
  8811  0038D4                     
  8812                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  8813  0038D4  969E               	bcf	158,3,c	;volatile
  8814  0038D6                     l78:
  8815  0038D6  A69E               	btfss	158,3,c	;volatile
  8816  0038D8  EF70  F01C         	goto	u2861
  8817  0038DC  EF72  F01C         	goto	u2860
  8818  0038E0                     u2861:
  8819  0038E0  EF6B  F01C         	goto	l78
  8820  0038E4                     u2860:
  8821  0038E4  0012               	return		;funcret
  8822  0038E6                     __end_of_I2C_ADDRESS_SLAVE:
  8823                           	callstack 0
  8824                           
  8825 ;; *************** function _ADC_Read *****************
  8826 ;; Defined at:
  8827 ;;		line 42 in file "ADC.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  CHx             1    wreg     unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  CHx             1    4[COMRAM] unsigned char 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  2    0[COMRAM] unsigned short 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8841 ;;      Params:         2       0       0       0       0       0       0       0       0
  8842 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8843 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8844 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8845 ;;Total ram usage:        5 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text41
  8855  003610                     __ptext41:
  8856                           	callstack 0
  8857  003610                     _ADC_Read:
  8858                           	callstack 30
  8859                           
  8860                           ;incstack = 0
  8861                           ;ADC_Read@CHx stored from wreg
  8862  003610  6E05               	movwf	ADC_Read@CHx^0,c
  8863  003612                     
  8864                           ;ADC.c: 44:     ADCON0 = (ADCON0 & 0x03) | ((2<<CHx) & 0x3C);
  8865  003612  C005  F003         	movff	ADC_Read@CHx,??_ADC_Read
  8866  003616  0E02               	movlw	2
  8867  003618  6E04               	movwf	(??_ADC_Read+1)^0,c
  8868  00361A  2A03               	incf	??_ADC_Read^0,f,c
  8869  00361C  EF12  F01B         	goto	u4634
  8870  003620                     u4635:
  8871  003620  90D8               	bcf	status,0,c
  8872  003622  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  8873  003624                     u4634:
  8874  003624  2E03               	decfsz	??_ADC_Read^0,f,c
  8875  003626  EF10  F01B         	goto	u4635
  8876  00362A  0E3C               	movlw	60
  8877  00362C  1604               	andwf	(??_ADC_Read+1)^0,f,c
  8878  00362E  50C2               	movf	194,w,c	;volatile
  8879  003630  0B03               	andlw	3
  8880  003632  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  8881  003634  6EC2               	movwf	194,c	;volatile
  8882  003636                     
  8883                           ;ADC.c: 50:     ADCON0bits.GO_DONE = 1;
  8884  003636  82C2               	bsf	194,1,c	;volatile
  8885  003638                     l47:
  8886  003638  B2C2               	btfsc	194,1,c	;volatile
  8887  00363A  EF21  F01B         	goto	u4641
  8888  00363E  EF23  F01B         	goto	u4640
  8889  003642                     u4641:
  8890  003642  EF1C  F01B         	goto	l47
  8891  003646                     u4640:
  8892  003646                     
  8893                           ;ADC.c: 54:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  8894  003646  0E0D               	movlw	13
  8895  003648  6E03               	movwf	??_ADC_Read^0,c
  8896  00364A  0EFC               	movlw	252
  8897  00364C                     u4887:
  8898  00364C  2EE8               	decfsz	wreg,f,c
  8899  00364E  D7FE               	bra	u4887
  8900  003650  2E03               	decfsz	??_ADC_Read^0,f,c
  8901  003652  D7FC               	bra	u4887
  8902  003654                     
  8903                           ;ADC.c: 56:     return ((ADRESH<<8)+ADRESL);
  8904  003654  50C4               	movf	196,w,c	;volatile
  8905  003656  6E04               	movwf	(??_ADC_Read+1)^0,c
  8906  003658  6A03               	clrf	??_ADC_Read^0,c
  8907  00365A  50C3               	movf	195,w,c	;volatile
  8908  00365C  2403               	addwf	??_ADC_Read^0,w,c
  8909  00365E  6E01               	movwf	?_ADC_Read^0,c
  8910  003660  0E00               	movlw	0
  8911  003662  2004               	addwfc	(??_ADC_Read+1)^0,w,c
  8912  003664  6E02               	movwf	(?_ADC_Read+1)^0,c
  8913  003666  0012               	return		;funcret
  8914  003668                     __end_of_ADC_Read:
  8915                           	callstack 0
  8916                           
  8917 ;; *************** function _ADC_Conversion *****************
  8918 ;; Defined at:
  8919 ;;		line 11 in file "ADC.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		None
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8936 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8937 ;;Total ram usage:        0 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_main
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text42
  8947  00392E                     __ptext42:
  8948                           	callstack 0
  8949  00392E                     _ADC_Conversion:
  8950                           	callstack 30
  8951  00392E                     
  8952                           ;ADC.c: 13:     ADCON0bits.GO_DONE = 0;
  8953  00392E  92C2               	bcf	194,1,c	;volatile
  8954                           
  8955                           ;ADC.c: 15:     ADCON0bits.ADON = 1;
  8956  003930  80C2               	bsf	194,0,c	;volatile
  8957                           
  8958                           ;ADC.c: 18:     ADCON1bits.VCFG1 = 0;
  8959  003932  9AC1               	bcf	193,5,c	;volatile
  8960                           
  8961                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  8962  003934  98C1               	bcf	193,4,c	;volatile
  8963                           
  8964                           ;ADC.c: 22:     ADCON1bits.PCFG3 = 1;
  8965  003936  86C1               	bsf	193,3,c	;volatile
  8966                           
  8967                           ;ADC.c: 23:     ADCON1bits.PCFG2 = 1;
  8968  003938  84C1               	bsf	193,2,c	;volatile
  8969                           
  8970                           ;ADC.c: 24:     ADCON1bits.PCFG1 = 0;
  8971  00393A  92C1               	bcf	193,1,c	;volatile
  8972                           
  8973                           ;ADC.c: 25:     ADCON1bits.PCFG0 = 1;
  8974  00393C  80C1               	bsf	193,0,c	;volatile
  8975                           
  8976                           ;ADC.c: 28:     ADCON2bits.ADFM = 1;
  8977  00393E  8EC0               	bsf	192,7,c	;volatile
  8978                           
  8979                           ;ADC.c: 31:     ADCON2bits.ACQT2 = 0;
  8980  003940  9AC0               	bcf	192,5,c	;volatile
  8981                           
  8982                           ;ADC.c: 32:     ADCON2bits.ACQT1 = 1;
  8983  003942  88C0               	bsf	192,4,c	;volatile
  8984                           
  8985                           ;ADC.c: 33:     ADCON2bits.ACQT0 = 1;
  8986  003944  86C0               	bsf	192,3,c	;volatile
  8987                           
  8988                           ;ADC.c: 36:     ADCON2bits.ADCS2 = 1;
  8989  003946  84C0               	bsf	192,2,c	;volatile
  8990                           
  8991                           ;ADC.c: 37:     ADCON2bits.ADCS1 = 1;
  8992  003948  82C0               	bsf	192,1,c	;volatile
  8993                           
  8994                           ;ADC.c: 38:     ADCON2bits.ADCS0 = 0;
  8995  00394A  90C0               	bcf	192,0,c	;volatile
  8996  00394C  0012               	return		;funcret
  8997  00394E                     __end_of_ADC_Conversion:
  8998                           	callstack 0
  8999                           
  9000                           	psect	rparam
  9001  0000                     
  9002                           	psect	idloc
  9003                           
  9004                           ;Config register IDLOC0 @ 0x200000
  9005                           ;	unspecified, using default values
  9006  200000                     	org	2097152
  9007  200000  FF                 	db	255
  9008                           
  9009                           ;Config register IDLOC1 @ 0x200001
  9010                           ;	unspecified, using default values
  9011  200001                     	org	2097153
  9012  200001  FF                 	db	255
  9013                           
  9014                           ;Config register IDLOC2 @ 0x200002
  9015                           ;	unspecified, using default values
  9016  200002                     	org	2097154
  9017  200002  FF                 	db	255
  9018                           
  9019                           ;Config register IDLOC3 @ 0x200003
  9020                           ;	unspecified, using default values
  9021  200003                     	org	2097155
  9022  200003  FF                 	db	255
  9023                           
  9024                           ;Config register IDLOC4 @ 0x200004
  9025                           ;	unspecified, using default values
  9026  200004                     	org	2097156
  9027  200004  FF                 	db	255
  9028                           
  9029                           ;Config register IDLOC5 @ 0x200005
  9030                           ;	unspecified, using default values
  9031  200005                     	org	2097157
  9032  200005  FF                 	db	255
  9033                           
  9034                           ;Config register IDLOC6 @ 0x200006
  9035                           ;	unspecified, using default values
  9036  200006                     	org	2097158
  9037  200006  FF                 	db	255
  9038                           
  9039                           ;Config register IDLOC7 @ 0x200007
  9040                           ;	unspecified, using default values
  9041  200007                     	org	2097159
  9042  200007  FF                 	db	255
  9043                           
  9044                           	psect	config
  9045                           
  9046                           ;Config register CONFIG1L @ 0x300000
  9047                           ;	PLL Prescaler Selection bits
  9048                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  9049                           ;	System Clock Postscaler Selection bits
  9050                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9051                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9052                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9053  300000                     	org	3145728
  9054  300000  04                 	db	4
  9055                           
  9056                           ;Config register CONFIG1H @ 0x300001
  9057                           ;	Oscillator Selection bits
  9058                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  9059                           ;	Fail-Safe Clock Monitor Enable bit
  9060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9061                           ;	Internal/External Oscillator Switchover bit
  9062                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9063  300001                     	org	3145729
  9064  300001  0E                 	db	14
  9065                           
  9066                           ;Config register CONFIG2L @ 0x300002
  9067                           ;	Power-up Timer Enable bit
  9068                           ;	PWRT = ON, PWRT enabled
  9069                           ;	Brown-out Reset Enable bits
  9070                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9071                           ;	Brown-out Reset Voltage bits
  9072                           ;	BORV = 3, Minimum setting 2.05V
  9073                           ;	USB Voltage Regulator Enable bit
  9074                           ;	VREGEN = OFF, USB voltage regulator disabled
  9075  300002                     	org	3145730
  9076  300002  18                 	db	24
  9077                           
  9078                           ;Config register CONFIG2H @ 0x300003
  9079                           ;	Watchdog Timer Enable bit
  9080                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9081                           ;	Watchdog Timer Postscale Select bits
  9082                           ;	WDTPS = 32768, 1:32768
  9083  300003                     	org	3145731
  9084  300003  1E                 	db	30
  9085                           
  9086                           ; Padding undefined space
  9087  300004                     	org	3145732
  9088  300004  FF                 	db	255
  9089                           
  9090                           ;Config register CONFIG3H @ 0x300005
  9091                           ;	CCP2 MUX bit
  9092                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9093                           ;	PORTB A/D Enable bit
  9094                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9095                           ;	Low-Power Timer 1 Oscillator Enable bit
  9096                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9097                           ;	MCLR Pin Enable bit
  9098                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9099  300005                     	org	3145733
  9100  300005  83                 	db	131
  9101                           
  9102                           ;Config register CONFIG4L @ 0x300006
  9103                           ;	Stack Full/Underflow Reset Enable bit
  9104                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9105                           ;	Single-Supply ICSP Enable bit
  9106                           ;	LVP = OFF, Single-Supply ICSP disabled
  9107                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9108                           ;	ICPRT = OFF, ICPORT disabled
  9109                           ;	Extended Instruction Set Enable bit
  9110                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9111                           ;	Background Debugger Enable bit
  9112                           ;	DEBUG = 0x1, unprogrammed default
  9113  300006                     	org	3145734
  9114  300006  81                 	db	129
  9115                           
  9116                           ; Padding undefined space
  9117  300007                     	org	3145735
  9118  300007  FF                 	db	255
  9119                           
  9120                           ;Config register CONFIG5L @ 0x300008
  9121                           ;	Code Protection bit
  9122                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9123                           ;	Code Protection bit
  9124                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9125                           ;	Code Protection bit
  9126                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9127                           ;	Code Protection bit
  9128                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9129  300008                     	org	3145736
  9130  300008  0F                 	db	15
  9131                           
  9132                           ;Config register CONFIG5H @ 0x300009
  9133                           ;	Boot Block Code Protection bit
  9134                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9135                           ;	Data EEPROM Code Protection bit
  9136                           ;	CPD = OFF, Data EEPROM is not code-protected
  9137  300009                     	org	3145737
  9138  300009  C0                 	db	192
  9139                           
  9140                           ;Config register CONFIG6L @ 0x30000A
  9141                           ;	Write Protection bit
  9142                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9143                           ;	Write Protection bit
  9144                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9145                           ;	Write Protection bit
  9146                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9147                           ;	Write Protection bit
  9148                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9149  30000A                     	org	3145738
  9150  30000A  0F                 	db	15
  9151                           
  9152                           ;Config register CONFIG6H @ 0x30000B
  9153                           ;	Configuration Register Write Protection bit
  9154                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9155                           ;	Boot Block Write Protection bit
  9156                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9157                           ;	Data EEPROM Write Protection bit
  9158                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9159  30000B                     	org	3145739
  9160  30000B  E0                 	db	224
  9161                           
  9162                           ;Config register CONFIG7L @ 0x30000C
  9163                           ;	Table Read Protection bit
  9164                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9165                           ;	Table Read Protection bit
  9166                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9167                           ;	Table Read Protection bit
  9168                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9169                           ;	Table Read Protection bit
  9170                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9171  30000C                     	org	3145740
  9172  30000C  0F                 	db	15
  9173                           
  9174                           ;Config register CONFIG7H @ 0x30000D
  9175                           ;	Boot Block Table Read Protection bit
  9176                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9177  30000D                     	org	3145741
  9178  30000D  40                 	db	64
  9179                           tosu	equ	0xFFF
  9180                           tosh	equ	0xFFE
  9181                           tosl	equ	0xFFD
  9182                           stkptr	equ	0xFFC
  9183                           pclatu	equ	0xFFB
  9184                           pclath	equ	0xFFA
  9185                           pcl	equ	0xFF9
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           indf0	equ	0xFEF
  9193                           postinc0	equ	0xFEE
  9194                           postdec0	equ	0xFED
  9195                           preinc0	equ	0xFEC
  9196                           plusw0	equ	0xFEB
  9197                           fsr0h	equ	0xFEA
  9198                           fsr0l	equ	0xFE9
  9199                           wreg	equ	0xFE8
  9200                           indf1	equ	0xFE7
  9201                           postinc1	equ	0xFE6
  9202                           postdec1	equ	0xFE5
  9203                           preinc1	equ	0xFE4
  9204                           plusw1	equ	0xFE3
  9205                           fsr1h	equ	0xFE2
  9206                           fsr1l	equ	0xFE1
  9207                           bsr	equ	0xFE0
  9208                           indf2	equ	0xFDF
  9209                           postinc2	equ	0xFDE
  9210                           postdec2	equ	0xFDD
  9211                           preinc2	equ	0xFDC
  9212                           plusw2	equ	0xFDB
  9213                           fsr2h	equ	0xFDA
  9214                           fsr2l	equ	0xFD9
  9215                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    105     147
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> bufferTx(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1015$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1015$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_I2C_WriteText@string	PTR unsigned char  size(2) Largest target is 20
		 -> bufferTx(BANK0[20]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_I2C_WriteText->_LCD_I2C_nibble
    _LCD_I2C_Init->_LCD_I2C_nibble
    _LCD_I2C_nibble->_LCD_I2C_Databus
    _LCD_I2C_Databus->_PCF8574_Write
    _PCF8574_Write->_I2C_ADDRESS_SLAVE

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   39565
                                             98 BANK0      7     2      5
                     _ADC_Conversion
                           _ADC_Read
                       _LCD_I2C_Init
                  _LCD_I2C_WriteText
                        _Master_Mode
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   28180
                                             77 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27823
                                             69 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   27451
                                             91 COMRAM     4     4      0
                                             55 BANK0     14     8      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   22296
                                             84 COMRAM     7     0      7
                                              0 BANK0     55    55      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Master_Mode                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_WriteText                                    6     3      3    2624
                                             10 COMRAM     6     3      3
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_Init                                         1     1      0    3374
                                             10 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                    _LCD_I2C_Databus
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_I2C_nibble                                       2     1      1    2028
                                              8 COMRAM     2     1      1
                    _LCD_I2C_Databus
 ---------------------------------------------------------------------------------
 (3) _LCD_I2C_Databus                                      3     2      1    1104
                                              5 COMRAM     3     2      1
                      _PCF8574_Write
 ---------------------------------------------------------------------------------
 (4) _PCF8574_Write                                        1     1      0     264
                                              4 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Data                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_ADDRESS_SLAVE                                    4     3      1     220
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Conversion                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Conversion
   _ADC_Read
   _LCD_I2C_Init
     _I2C_ADDRESS_SLAVE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
     _LCD_I2C_Databus
       _PCF8574_Write
         _I2C_ADDRESS_SLAVE
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Data
     _LCD_I2C_nibble
       _LCD_I2C_Databus
   _LCD_I2C_WriteText
     _LCD_I2C_nibble
   _Master_Mode
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlhh        21      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     142      24        0.0%
DATA                 0      0     142       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 28 17:37:21 2023

           ??_LCD_I2C_Init 000B               ___fldiv@aexp 0040               ___fldiv@bexp 003F  
             ___fldiv@sign 0038                _SSPSTATbits 000FC7                         l50 3666  
                       l44 394C                         l47 3638                         l72 39D2  
                       l81 38E4                         l90 39C0                         l75 39E0  
                       l84 3994                         l93 39CE                         l69 39BC  
                       l78 38D6                         l87 39A2               ___awdiv@sign 0006  
      ___wmul@multiplicand 0003          ??_LCD_I2C_Databus 0007                        l106 396A  
                      l122 3986                        l125 2B18                        l141 390A  
                      l119 33F6                        l400 3550                        l138 2E24  
                      l411 2D22                        l406 2CDC                        l415 384A  
                      l372 333C                        l438 2C1E                        l711 3796  
                      l385 34A6                        l810 2848                        l803 27EC  
                      l723 24EA                        l725 234A                        l734 2390  
                      l670 160E                        l671 15D4                        l736 2408  
                      l728 230E                        l737 23F6                        l762 1FE2  
                      l755 1DEC                        l819 36B8                        l772 2112  
                      l764 205A                        l860 31FA                        l765 2048  
                      l669 1620                        l925 1020                        l686 173A  
                      l678 18F0                        l759 2150                        l695 180A  
                      l863 323C                        l696 17F8                        l865 3278  
                      l881 1430                        l796 2754                        l972 1C6C  
                      l799 28B0                        l967 1D26                        l897 0BE0  
                      l978 35AA                        l979 35B2                        l989 2F22  
                      _pad 31B4               ___awmod@sign 0006                        wreg 000FE8  
         ??_LCD_I2C_nibble 000A               ___flmul@aexp 0020               ___flmul@bexp 0021  
             ___flmul@sign 001B               ___flmul@temp 0026               ___flmul@prod 0022  
             ___fltol@exp1 000A                       l1012 29FE                       l1100 3750  
                     l1021 26FC                       l1031 3882                       l1015 2A06  
                     l1024 2640                       l1060 31B2                       l1045 3812  
                     l1039 370A                       l1071 39E2                       l3001 23C0  
                     l3011 2432                       l3003 23EE                       l1083 38B8  
                     l1068 37DA                       l3021 24AA                       l3013 245C  
                     l3101 1EBE                       l1077 360E                       l3031 24E0  
                     l3023 24C6                       l3007 2418                       l3015 2460  
                     l3111 1F20                       l3103 1ECE                       l1087 30E8  
                     l4001 2D2A                       l3201 32F0                       l3025 24CA  
                     l3017 247A                       l3009 2424                       l3121 1FC8  
                     l3113 1F3C                       l3105 1EE8                       l3041 1D34  
                     l1097 3748                       l4011 2D58                       l4003 2D30  
                     l3203 3306                       l3211 331C                       l3027 24D8  
                     l3019 2490                       l3131 2004                       l3123 1FD2  
                     l3115 1F66                       l3107 1EF8                       l3051 1D74  
                     l3043 1D42                       l4013 2D66                       l4005 2D3E  
                     l3213 332C                       l3205 330E                       l3221 33FC  
                     l3029 24DE                       l3141 2076                       l3133 2012  
                     l3125 1FE0                       l3117 1F9C                       l3109 1F14  
                     l3061 1DA4                       l3053 1D7A                       l3045 1D44  
                     l3301 2B1A                       l4015 2D6C                       l4007 2D44  
                     l4023 2D8E                       l3215 3334                       l3207 3310  
                     l3231 342C                       l3223 340A                       l3151 20E0  
                     l3143 2084                       l3135 2040                       l3127 1FF2  
                     l3119 1FAA                       l3071 1DDC                       l3063 1DA6  
                     l3055 1D8A                       l3047 1D54                       l3039 1D28  
                     l3311 2B70                       l3303 2B30                       l4111 2F42  
                     l4103 2F24                       l4041 3654                       l4025 2DC8  
                     l4017 2D7A                       l4009 2D52                       l3209 3316  
                     l3241 3472                       l3233 343E                       l3225 3412  
                     l3161 2136                       l3153 20FA                       l3145 20AE  
                     l3129 2000                       l3081 1E2C                       l3073 1DFC  
                     l3065 1DB6                       l3057 1D90                       l3049 1D64  
                     l3313 2B80                       l4113 2F50                       l4105 2F28  
                     l4035 3612                       l4027 2DF0                       l4019 2D80  
                     l3251 349E                       l3243 347A                       l3235 3446  
                     l3227 3416                       l3219 33F8                       l3155 2116  
                     l3163 213C                       l3139 206A                       l3147 20B2  
                     l3091 1E7C                       l3083 1E36                       l3075 1E0C  
                     l3067 1DC6                       l3059 1D96                       l3171 3762  
                     l3323 2BAA                       l3315 2B84                       l3307 2B44  
                     l3411 2584                       l3403 24EC                       l4051 368A  
                     l4115 2FBA                       l4107 2F2C                       l4037 3636  
                     l4029 2DF4                       l4061 271E                       l3181 3294  
                     l3245 3480                       l3237 344E                       l3229 3424  
                     l3261 3514                       l3165 2140                       l3157 2126  
                     l3149 20CC                       l3093 1E88                       l3085 1E4C  
                     l3069 1DD6                       l2701 1542                       l3341 2C0E  
                     l3333 2BD2                       l3325 2BB4                       l3317 2B92  
                     l3309 2B6E                       l3421 26A0                       l3405 250C  
                     l3501 099C                       l4053 36A6                       l4045 3668  
                     l4117 2FE0                       l4109 2F30                       l4039 3646  
                     l4071 2796                       l4063 2764                       l3431 384C  
                     l3191 32BA                       l3183 3298                       l3175 327A  
                     l3239 345C                       l3247 3486                       l3263 3524  
                     l3255 34A8                       l3271 2C20                       l3159 2134  
                     l3095 1E96                       l3087 1E58                       l3079 1E20  
                     l2711 1556                       l2703 1546                       l3335 2BDE  
                     l3327 2BBE                       l3423 26B4                       l3415 25F4  
                     l3407 2562                       l3351 31E6                       l3511 0A0C  
                     l4047 367A                       l4119 2FF2                       l4081 281E  
                     l4073 27A2                       l4065 277A                       l4057 2700  
                     l3441 3700                       l4161 294E                       l3193 32CC  
                     l3185 32A6                       l3177 327E                       l3249 3496  
                     l3265 3548                       l3257 34D6                       l3281 2CAA  
                     l3273 2C4E                       l3097 1EA2                       l3089 1E70  
                     l2801 17A8                       l2721 156A                       l2713 155A  
                     l2705 154A                       l3169 3752                       l3337 2BEE  
                     l3425 26DC                       l3417 2630                       l3409 2576  
                     l2641 3136                       l2633 30EA                       l3361 324C  
                     l3353 31F2                       l3345 31B4                       l3601 0E20  
                     l3521 0A42                       l4049 3682                       l3451 395E  
                     l4163 2DA2                       l4091 285C                       l4083 282A  
                     l4075 27D4                       l4059 2710                       l3443 3704  
                     l3435 36BA                       l3195 32D4                       l3187 32AE  
                     l3179 328C                       l3267 354E                       l3259 34E6  
                     l3283 2CBC                       l3275 2C5E                       l3099 1EB2  
                     l2811 17DA                       l2803 17B8                       l2731 15BC  
                     l2723 156E                       l2715 155E                       l2707 154E  
                     l2651 144C                       l3339 2BFE                       l3371 2E84  
                     l3427 26EC                       l3419 2664                       l2643 316C  
                     l2635 30FC                       l3363 3260                       l3355 3206  
                     l3347 31C4                       l3611 0EEC                       l3603 0E3E  
                     l3531 0B0C                       l3507 09C2                       l4093 2880  
                     l4085 2838                       l4077 27D6                       l4069 278E  
                     l3437 36BE                       l3197 32DC                       l3189 32B2  
                     l2901 2152                       l3285 2CCA                       l3277 2C8C  
                     l3293 3814                       l2821 1834                       l2813 17F0  
                     l2805 17BA                       l2741 1600                       l2733 15CC  
                     l2717 1562                       l2709 1552                       l2725 1572  
                     l2661 1480                       l2653 144E                       l3381 2ED6  
                     l3373 2EAC                       l2637 310E                       l3357 321A  
                     l3349 31D8                       l3701 12AE                       l3621 0F9C  
                     l3613 0EFC                       l3605 0E72                       l3541 0B8E  
                     l3533 0B40                       l3525 0A78                       l3509 09F0  
                     l3461 0858                       l3453 0828                       l3447 3950  
                     l4095 2890                       l4087 2856                       l4079 27E2  
                     l3439 36D2                       l3199 32EA                       l2911 218E  
                     l2903 215E                       l3287 2D1A                       l3279 2C9C  
                     l3295 382A                       l2831 18B0                       l2823 186E  
                     l2807 17C8                       l2743 1602                       l2735 15E2  
                     l2727 1576                       l2719 1566                       l2671 14B2  
                     l2655 145E                       l2663 1488                       l2647 1432  
                     l3375 2EB8                       l3367 2E26                       l2639 3118  
                     l3359 321E                       l3391 35C4                       l3711 12E4  
                     l3703 12BE                       l3631 100C                       l3623 0FD0  
                     l3615 0F0C                       l3607 0EA4                       l3543 0BA0  
                     l3551 0BEC                       l3535 0B48                       l3527 0AAC  
                     l3519 0A28                       l3471 08AE                       l3463 087C  
                     l3455 0832                       l3449 3954                       l4097 289E  
                     l4089 2858                       l2921 21BE                       l2913 219E  
                     l2905 216C                       l3289 2D20                       l3297 383A  
                     l2841 18D0                       l2833 18B4                       l2817 181A  
                     l2825 1870                       l2809 17CC                       l2761 168A  
                     l2753 1652                       l2745 160C                       l2737 15EE  
                     l2729 15A0                       l2681 14E8                       l2673 14B8  
                     l2665 1498                       l2657 146E                       l2649 143E  
                     l3385 2F1A                       l3369 2E46                       l3393 370C  
                     l3721 1340                       l3713 12F0                       l3705 12C6  
                     l3641 10C2                       l3633 1018                       l3625 0FE4  
                     l3617 0F40                       l3609 0EBA                       l3561 0C2C  
                     l3545 0BB2                       l3529 0AB2                       l3537 0B7A  
                     l3481 08DC                       l3473 08C0                       l3465 0886  
                     l3457 0842                       l3801 3070                       l3811 3340  
                     l4099 28A0                       l2931 21F4                       l2923 21C4  
                     l2915 21A0                       l2907 216E                       l2843 18DE  
                     l2835 18C2                       l2827 1880                       l2819 1826  
                     l2763 168E                       l2755 1662                       l2747 162E  
                     l2771 16AE                       l2739 15F2                       l2691 1524  
                     l2683 14F8                       l2675 14C6                       l2667 149E  
                     l2659 147E                       l3379 2EC4                       l2851 37A4  
                     l3731 138A                       l3715 12F6                       l3723 1346  
                     l3707 12D4                       l3651 110A                       l3643 10D4  
                     l3635 103C                       l3619 0F96                       l3627 0FE8  
                     l3571 0C88                       l3563 0C62                       l3547 0BBA  
                     l3539 0B8A                       l3491 0936                       l3475 08CC  
                     l3483 08E2                       l3467 088E                       l3459 0850  
                     l3803 308C                       l3821 3376                       l3813 334E  
                     l2941 2234                       l2933 2204                       l2925 21D2  
                     l2909 217E                       l2917 21A8                       l2845 18E0  
                     l2837 18C8                       l2829 1890                       l2773 16D4  
                     l2781 172A                       l2765 169C                       l2757 1670  
                     l2749 163E                       l2693 1532                       l2685 14FA  
                     l2677 14C8                       l2669 14B0                       l2853 37B6  
                     l2861 3894                       l3389 35B4                       l3397 370C  
                     l3733 1396                       l3725 1358                       l3717 131C  
                     l3709 12DC                       l3661 1140                       l3653 111A  
                     l3645 10E2                       l3637 10A0                       l3629 0FF8  
                     l3581 0CCC                       l3573 0C9A                       l3565 0C6A  
                     l3557 0BFE                       l3549 0BD4                       l3493 0952  
                     l3477 08D4                       l3469 08A0                       l3805 309E  
                     ?_pad 0011                       l2871 39D0                       l3831 33A8  
                     l3823 337C                       l3815 3358                       l2943 2244  
                     l2951 2264                       l2935 2206                       l2927 21D4  
                     l2919 21B8                       l2839 18CA                       l2791 177E  
                     l2783 1750                       l2775 1708                       l2767 169E  
                     l2759 167E                       l2695 1536                       l2679 14D8  
                     l2687 1502                       l2855 37BA                       l2863 38AC  
                     l3399 373A                       l3751 140A                       l3743 13BA  
                     l3735 139E                       l3727 1372                       l3719 1338  
                     l3671 1174                       l3663 1144                       l3655 111E  
                     l3639 10B0                       l3647 10EA                       l3591 0D16  
                     l3583 0CE4                       l3575 0CA8                       l3559 0C10  
                     l3567 0C6E                       l3495 096A                       l3479 08D8  
                     l3807 30C6                       l3903 1BCA                       l2881 38D2  
                     l2873 38BC                       l3841 33D8                       l3833 33B2  
                     l3825 338A                       l3817 335E                       l3761 28C6  
                     l2961 22A2                       l2953 2274                       l2945 224C  
                     l2929 21E4                       l2937 220E                       l2793 178C  
                     l2785 1760                       l2777 170A                       l2769 16A8  
                     l2697 153A                       l2689 1512                       l2849 3798  
                     l2857 3884                       l3753 1410                       l3745 13E6  
                     l3737 13AE                       l3729 1378                       l3681 1212  
                     l3673 1178                       l3665 114A                       l3657 1124  
                     l3649 10FC                       l3593 0D2A                       l3585 0CF6  
                     l3577 0CAC                       l3569 0C76                       l3497 0974  
                     l3489 0908                       l3905 1C08                       l3913 1C80  
                     l2883 38D4                       l2875 38BC                       l2891 3992  
                     l3843 33DE                       l3835 33B8                       l3827 3394  
                     l3819 336C                       l3771 2928                       l2971 22EA  
                     l2963 22B2                       l2955 2274                       l2947 2250  
                     l2939 221E                       l2795 178E                       l2779 171A  
                     l2699 153E                       l2859 3890                       l2867 37DC  
                     l3747 13F2                       l3739 13B4                       l3691 1270  
                     l3659 1130                       l3667 1150                       l3675 117E  
                     l3683 1216                       l3595 0D8E                       l3579 0CBE  
                     l3587 0CFE                       l3931 1D14                       l3915 1CA4  
                     l3923 1CD4                       l3907 1C3C                       l3851 1916  
                     l2877 38CC                       l2893 39BE                       l2885 398A  
                     l3845 33E6                       l3837 33BE                       l3829 339A  
                     l3781 299A                       l3773 2930                       l3765 28CA  
                     l2981 2338                       l2973 22FE                       l2965 22C2  
                     l2797 179C                       l2789 1774                       l3749 13FA  
                     l3693 1280                       l3685 1234                       l3677 11D6  
                     l3669 1162                       l3597 0DE6                       l3589 0D06  
                     l3925 1CE2                       l3917 1CB2                       l3861 1966  
                     l3853 1924                       l3941 355A                       l2879 38D0  
                     l2887 398E                       l3847 33EE                       l3839 33CE  
                     l3951 2A08                       l2895 38E6                       l3783 29D0  
                     l3775 2964                       l3767 28E6                       l3759 28B2  
                     l2991 2380                       l2983 2348                       l2975 230C  
                     l2967 22D2                       l2959 2288                       l2799 17A4  
                     l3695 1284                       l3687 1250                       l3679 120A  
                     l3599 0E1A                       l3791 3014                       l3919 1CC6  
                     l3863 1974                       l3855 1936                       l3943 3568  
                     l2889 3990                       l3937 396E                       l3961 2A2E  
                     l3953 2A0C                       l2897 3902                       l3785 29E2  
                     l3769 2920                       l2993 238E                       l2985 235A  
                     l2977 2318                       l2969 22DA                       l3697 1294  
                     l3689 1262                       l3793 303E                       l3881 1AA2  
                     l3873 1A00                       l3865 1998                       l3857 193A  
                     l3929 1CF0                       l3849 18F2                       l3945 358E  
                     l3971 2A6C                       l3963 2A38                       l3955 2A16  
                     l3947 39A4                       l2987 2370                       l2995 23A0  
                     l2979 2336                       l3699 12A6                       l3891 1B1A  
                     l3883 1AB2                       l3867 19D2                       l3859 195E  
                     l3875 1A3E                       l3939 3552                       l3981 2AB0  
                     l3973 2A7C                       l3965 2A48                       l3957 2A1C  
                     l3949 39B4                       l2997 23AE                       l2989 2376  
                     l3797 304A                       l3893 1B4A                       l3885 1AE4  
                     l3877 1A60                       l3869 19F2                       l3991 2AEE  
                     l3983 2ABA                       l3975 2A86                       l3967 2A52  
                     l3959 2A20                       l2999 23B2                       l3799 3058  
                     l3887 1AF6                       l3879 1A70                       l3993 2AFE  
                     l3985 2ACA                       l3977 2A96                       l3969 2A62  
                     l3889 1B0C                       l3897 1B76                       l3995 2B08  
                     l3987 2AD4                       l3979 2AA0                       l3899 1BA4  
                     l3997 392E                       l3989 2AE4                       l3999 2D26  
                     STR_1 0801                       STR_2 080D                       STR_3 0813  
                     STR_4 081B                       STR_7 0817                       STR_8 081F  
                     u3000 235A                       u3001 2356                       u3010 2370  
                     u3011 236C                       u3100 24AA                       u3020 238E  
                     u3101 24A6                       u3021 238A                       u3110 24D8  
                     u3030 23AE                       u3111 24D4                       u3031 23AA  
                     u3040 23C0                       u3200 1F86                       u3120 1D42  
                     u2400 3136                       u4000 0BD4                       u3041 23BC  
                     u3121 1D3E                       u2401 3132                       u4001 0BD0  
                     u3050 23EE                       u3210 1FE0                       u3130 1D54  
                     u2410 316C                       u4010 0BFA                       u3051 23EA  
                     u3211 1FDC                       u3131 1D50                       u2411 3168  
                     u4011 0BF6                       u3060 2404                       u3300 2134  
                     u3220 2000                       u3140 1D64                       u2500 1532  
                     u2420 144C                       u4100 0CF6                       u4020 0C10  
                     u3061 2400                       u3301 2130                       u3221 1FFC  
                     u3205 1F7C                       u3141 1D60                       u2501 152E  
                     u2421 1448                       u4101 0CF2                       u4021 0C0C  
                     u3310 328C                       u3070 2418                       u3230 2012  
                     u3150 1DA4                       u2510 15A0                       u2430 145E  
                     u4110 0E3E                       u4030 0C2C                       u3311 3288  
                     u3071 2414                       u3231 200E                       u3151 1DA0  
                     u2511 159C                       u2431 145A                       u4111 0E3A  
                     u4031 0C28                       u3320 32A6                       u3400 345C  
                     u3080 2432                       u3240 2040                       u3160 1DB6  
                     u2600 167E                       u2520 15B8                       u2440 146E  
                     u4200 10D4                       u4120 0EA4                       u4040 0C62  
                     u3321 32A2                       u3401 3458                       u3081 242E  
                     u3241 203C                       u3161 1DB2                       u2601 167A  
                     u2521 15B2                       u2441 146A                       u4201 10D0  
                     u4121 0EA0                       u4041 0C5E                       u3330 32CC  
                     u3410 3472                       u3090 247A                       u3250 2056  
                     u3170 1DC6                       u2610 169C                       u2530 15BA  
                     u2450 14B0                       u4210 10E2                       u4130 0EEC  
                     u4050 0C88                       u3331 32C8                       u3411 346E  
                     u3091 2476                       u3251 2052                       u3171 1DC2  
                     u2611 1698                       u2451 14AC                       u4211 10DE  
                     u4131 0EE8                       u4051 0C84                       u3340 32EA  
                     u3420 3496                       u3500 2D1A                       u3260 206A  
                     u3180 1DFC                       u2700 17DA                       u2620 16D4  
                     u2540 15E2                       u2460 14C6                       u2380 30FC  
                     u4300 12D4                       u4220 10FC                       u4140 0EFC  
                     u4060 0C9A                       u3341 32E6                       u3421 3492  
                     u3501 2D16                       u3261 2066                       u3181 1DF8  
                     u2701 17D6                       u2621 16D0                       u2541 15DE  
                     u2461 14C2                       u2381 30F8                       u4301 12D0  
                     u4221 10F8                       u4141 0EF8                       u4061 0C96  
                     u3350 3306                       u3430 34D6                       u3270 2084  
                     u3190 1E0C                       u3510 382A                       u2710 17F0  
                     u2630 171A                       u2550 1600                       u2470 14D8  
                     u2390 310E                       u4310 1358                       u4230 110A  
                     u4150 0F96                       u4070 0CA8                       u3351 3302  
                     u3431 34D2                       u3271 2080                       u3191 1E08  
                     u3511 3826                       u2711 17EC                       u2631 1716  
                     u2551 15FC                       u2471 14D4                       u2391 310A  
                     u4311 1354                       u4231 1106                       u4151 0F92  
                     u4071 0CA4                       u3360 332C                       u3440 3514  
                     u3280 20CC                       u2800 18DE                       u2720 1806  
                     u2640 1750                       u2560 1620                       u2480 14E8  
                     u3520 2B30                       u3600 31E6                       u4320 1372  
                     u4240 1162                       u4160 0FE4                       u4080 0CBE  
                     u4400 3070                       u3361 3328                       u3441 3510  
                     u3281 20C8                       u2801 18DA                       u2721 1802  
                     u2641 174C                       u2561 161C                       u2481 14E4  
                     u3521 2B2C                       u3601 31E2                       u4321 136E  
                     u4241 115E                       u4161 0FE0                       u4081 0CBA  
                     u4401 306C                       u3370 340A                       u3450 3548  
                     u3290 20FA                       u2730 181A                       u2650 1760  
                     u2570 162E                       u2490 1524                       u3530 2B64  
                     u2810 37DA                       u3610 323C                       u4330 138A  
                     u4250 1234                       u4170 100C                       u4090 0CCC  
                     u4410 308C                       u3371 3406                       u3451 3544  
                     u3291 20F6                       u2731 1816                       u2651 175C  
                     u2571 162A                       u2491 1520                       u2811 37D6  
                     u3611 3238                       u4331 1386                       u4251 1230  
                     u4171 1008                       u4091 0CC8                       u4411 3088  
                     u3380 3424                       u2900 217E                       u3460 2C4E  
                     u2740 1834                       u2660 178C                       u2580 163E  
                     u3540 2B92                       u2820 38AC                       u3620 324C  
                     u3700 35FC                       u4340 13E6                       u4260 1250  
                     u4180 10B0                       u4420 309E                       u4500 195E  
                     u3381 3420                       u2901 217A                       u3461 2C4A  
                     u2741 1830                       u2661 1788                       u2581 163A  
                     u3541 2B8E                       u2821 38A8                       u3621 3248  
                     u4341 13E2                       u4261 124C                       u4181 10AC  
                     u4421 309A                       u4501 195A                       u4350 28E6  
                     u3390 343E                       u2910 218E                       u3470 2C8C  
                     u2750 186E                       u2670 179C                       u2590 1670  
                     u3550 2BA6                       u3630 2E66                       u3710 360E  
                     u2830 380C                       u4270 1262                       u4190 10C2  
                     u4430 30C6                       u4510 1998                       u4351 28E2  
                     u3391 343A                       u2911 218A                       u3471 2C88  
                     u2751 186A                       u2671 1798                       u2591 166C  
                     u3551 2BA2                       u3535 2B5A                       u3711 360A  
                     u2831 3806                       u4271 125E                       u4191 10BE  
                     u4431 30C2                       u4511 1994                       u4440 334E  
                     u4600 2DE8                       u4360 291C                       u2920 21D2  
                     u3480 2CAA                       u2760 1880                       u2680 17B8  
                     u3560 2BCE                       u3640 2E84                       u3800 2684  
                     u2840 380E                       u3720 373A                       u4280 1270  
                     u4520 1A3E                       u4441 334A                       u4361 2918  
                     u2921 21CE                       u3481 2CA6                       u2761 187C  
                     u2681 17B4                       u3561 2BCA                       u3641 2E80  
                     u3721 3736                       u4281 126C                       u4521 1A3A  
                     u2850 39E0                       u4450 336C                       u4610 2E14  
                     u4370 29D0                       u2930 21E4                       u3490 2CCA  
                     u2770 1890                       u2690 17C8                       u3570 2BEE  
                     u3650 2EAC                       u3810 26A0                       u3730 2534  
                     u4290 12A6                       u4530 1A70                       u2851 39DC  
                     u4451 3368                       u4371 29CC                       u2931 21E0  
                     u3491 2CC6                       u2771 188C                       u2691 17C4  
                     u3571 2BEA                       u3651 2EA8                       u3635 2E5C  
                     u3811 269C                       u3707 35F2                       u4291 12A2  
                     u4531 1A6C                       u2860 38E4                       u4460 338A  
                     u4620 2E24                       u4700 2838                       u4380 29E2  
                     u2940 21F4                       u2780 18B0                       u3580 2BFE  
                     u3660 2ED6                       u3820 26DC                       u3740 2562  
                     u3900 08C0                       u4540 1AB2                       u2861 38E0  
                     u4461 3386                       u4621 2E20                       u4701 2834  
                     u4381 29DE                       u2941 21F0                       u2781 18AC  
                     u3581 2BFA                       u3661 2ED2                       u3821 26D8  
                     u3805 267A                       u3741 255E                       u3901 08BC  
                     u4541 1AAE                       u2870 39A2                       u4470 33A8  
                     u4710 2848                       u3830 387C                       u2950 2234  
                     u2790 18C2                       u3750 2584                       u3590 31C4  
                     u3910 0908                       u4390 303E                       u4550 1AF6  
                     u2871 399E                       u4471 33A4                       u4607 2DDE  
                     u4711 2844                       u3831 3876                       u2951 2230  
                     u2791 18BE                       u3751 2580                       u3735 252A  
                     u3591 31C0                       u3911 0904                       u4391 303A  
                     u4551 1AF2                       u4640 3646                       u2880 39CE  
                     u4480 33CE                       u4720 2856                       u3840 387E  
                     u2960 2274                       u3680 2F10                       u3920 0936  
                     u4560 1BA4                       u4641 3642                       u2881 39CA  
                     u4481 33CA                       u4617 2E0A                       u4721 2852  
                     u2961 2270                       u3681 2F0A                       u3921 0932  
                     u4561 1BA0                       u4634 3624                       u4730 2890  
                     u4650 2710                       u3850 36D2                       u2970 22EA  
                     u2890 216C                       u3690 2F12                       u3770 25F0  
                     u3930 09C2                       u4570 1C08                       u4490 1916  
                     u4635 3620                       u4731 288C                       u4651 270C  
                     u3851 36CE                       u2971 22E6                       u2891 2168  
                     u3675 2EE8                       u3771 25EC                       u3931 09BE  
                     u4571 1C04                       u4491 1912                       u4740 289E  
                     u4660 271E                       u3860 3700                       u2980 230C  
                     u3780 2614                       u3940 09F0                       u4580 1CA4  
                     u4741 289A                       u4661 271A                       u3861 36FC  
                     u2981 2308                       u3765 2598                       u3941 09EC  
                     u4581 1CA0                       u4670 277A                       u2990 2336  
                     u3790 2630                       u3766 25A2                       u3950 0A74  
                     u3870 0850                       u4590 35AA                       u4807 2A8C  
                     u4671 2776                       u2991 2332                       u3791 262C  
                     u3767 25B2                       u3951 0A70                       u3871 084C  
                     u4591 35A6                       u4680 27D0                       u3960 0B08  
                     u3880 08A0                       u4817 2AA6                       u4681 27CC  
                     u3785 260A                       u3961 0B04                       u3881 089C  
                     u4690 281A                       u3970 0B7A                       u3890 08AE  
                     u4827 2AC0                       u4691 2816                       u3971 0B76  
                     u3891 08AA                       u3980 0BA0                       u4837 2ADA  
                     u3981 0B9C                       u4757 2FFE                       u3990 0BB2  
                     u4847 2AF4                       u4767 2A26                       u3991 0BAE  
                     u4857 2B0E                       u4777 2A3E                       u4867 33BA  
                     u4787 2A58                       u4877 33E8                       u4797 2A72  
                     u4887 364C                       _data 00DD                       _dbuf 0100  
                     _atoi 28B2                       _main 2F24                       _prec 00D9  
                     _nout 00D5                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9           __end_of_I2C_Stop 39D0           __end_of_ADC_Read 3668  
            ___fpclassifyf 2E26                       prodh 000FF4                       prodl 000FF3  
                     start 0000      I2C_ADDRESS_SLAVE@data 0004      I2C_ADDRESS_SLAVE@modo 0001  
          ___fldiv@new_exp 0039               ___param_bank 000000                      ??_pad 0017  
            ___fltol@sign1 0009                      ?_atoi 0008            __end_of___fladd 18F2  
                    ?_main 00C2              ??_Master_Mode 0001            __end_of___fldiv 24EC  
          __end_of___awdiv 333E            __end_of___flneg 384C                      STR_11 0823  
                    STR_13 0823            __end_of___awmod 34A8            __end_of___flmul 2152  
          __end_of___flsub 3798            __end_of___fltol 2C20            ___awdiv@divisor 0003  
     LCD_I2C_WriteText@col 000B       LCD_I2C_WriteText@row 0010            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 0099                      _flags 00DB                      _fputc 30EA  
                    _fputs 3798            __end_of_isdigit 3884                      atoi@n 0010  
                    pad@fp 0011                      atoi@s 0008                      _width 00D7  
                    _putch 39E2            __end_of_isspace 370C          __end_of_I2C_Start 39E2  
          __end_of_isupper 3814                      tablat 000FF5                      status 000FD8  
          __end_of_sprintf 36BA             ?___fpclassifyf 0001            __end_of_tolower 3752  
          __end_of_strncmp 30EA            __initialization 390C               __end_of_atoi 2A08  
             __end_of_main 3014                     ??_atoi 000A                     ??_main 00C7  
            __activetblptr 000002          _LCD_I2C_WriteText 2D24         ?_LCD_I2C_WriteText 000B  
      __end_of_Master_Mode 39BE                     _ADCON0 000FC2                     ?_fputc 0001  
     __end_of_LCD_I2C_Init 2B1A                     ?_fputs 000A                     _ADRESH 000FC4  
                   _ADRESL 000FC3           ___awdiv@dividend 0001                     ?_putch 0001  
      ??_LCD_I2C_WriteText 000E                     _SSPADD 000FC8                     _SSPBUF 000FC9  
         __end_of___xxtofl 28B2               vfprintf@cfmt 00AB                     ___flge 2C20  
                   ___fleq 34A8                  ??___fladd 0009                     ___wmul 38E6  
                ??___fldiv 0030                  ??___awdiv 0005                  ??___flneg 0005  
                ??___awmod 0005                  ??___flmul 0017                  ??___flsub 0030  
                ??___fltol 0005                     _efgtoa 0828                     _floorf 24EC  
                   clear_0 3912                     clear_1 391E           ___awdiv@quotient 0007  
          ___awmod@divisor 0003  __end_of_LCD_I2C_WriteText 2E26          _I2C_ADDRESS_SLAVE 38BA  
                   isa$std 000001            ___awmod@counter 0005                     pad@buf 0013  
                   _strcpy 35B4                     _strlen 3884         ?_I2C_ADDRESS_SLAVE 0001  
                   fputc@c 0001                     fputs@c 000E                     fputs@i 000F  
                   fputs@s 000A                  ??_isdigit 0003                  ?_I2C_Stop 0001  
          ___fpclassifyf@e 0009            ___fpclassifyf@u 000B                  ?_ADC_Read 0001  
          ___fpclassifyf@x 0001               __mediumconst 0000                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8      __end_of_PCF8574_Write 396C                     putch@c 0001  
         __end_of_vfprintf 35B4                  ??_sprintf 0060                  ??_tolower 0009  
      ??_I2C_ADDRESS_SLAVE 0002                  ??_strncmp 0007                 ___flge@ff1 0028  
               ___flge@ff2 002C            ??___fpclassifyf 0005               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0060    __end_of__initialization 3924  
               ___flneg@f1 0001              ___rparam_used 000001                 ___fltol@f1 0001  
          _LCD_I2C_Databus 333E             __pcstackCOMRAM 0001  __end_of_I2C_ADDRESS_SLAVE 38E6  
            __end_of_fputc 31B4              __end_of_fputs 37DC              __end_of_putch 39E4  
              _Master_Mode 39A4                 ??_I2C_Stop 0001                 ??_ADC_Read 0003  
                  ??_fputc 0005                    ??_fputs 000E                    ??_putch 0001  
               __pbssBANK0 00C9                 __pbssBANK1 0100                    ?___flge 0028  
                  ?___fleq 0001                    ?___wmul 0001                    ?_efgtoa 0055  
                  ?_floorf 0041                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001                    _SSPCON2 000FC5    __end_of_LCD_I2C_Databus 33F8  
                _I2C_Start 39D0                    __Hparam 0000                    __Lparam 0000  
                  ___fladd 1432                    ___fldiv 2152                    ___awdiv 327A  
                  ___flneg 3814                    ___awmod 33F8                    ___flmul 1D28  
                  ___flsub 3752                    ___fltol 2B1A               _LCD_I2C_Init 2A08  
                ?_vfprintf 00A5               __psmallconst 0800                    __pcinit 390C  
                  __ramtop 0800                    __ptext0 2F24                    __ptext1 3668  
                  __ptext2 3552                    __ptext3 18F2                    __ptext4 3014  
                  __ptext5 0828                    __ptext6 370C                    __ptext7 37DC  
                  __ptext8 35B4                    __ptext9 31B4                    _isdigit 384C  
               ??___xxtofl 0005           ___awmod@dividend 0001                    _isspace 36BA  
                  _isupper 37DC                    efgtoa@c 005B                    efgtoa@d 0077  
                  efgtoa@e 008F                    efgtoa@f 0057                    efgtoa@g 008B  
                  efgtoa@h 0081                    efgtoa@i 0089                    efgtoa@l 0085  
                  efgtoa@m 0071                    efgtoa@n 0091                    efgtoa@p 007B  
                  efgtoa@t 006B                    efgtoa@u 0093                    efgtoa@w 007D  
                  _tension 00D1                    atoi@neg 000E                    _sprintf 3668  
                  _tolower 370C                    _strncmp 3014       end_of_initialization 3924  
                  floorf@e 004F                    floorf@m 004B                    floorf@u 0051  
                  floorf@x 0041                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C                 ?_I2C_Start 0001          __end_of_vfpfcnvrt 1D28  
               efgtoa@mode 0080                 efgtoa@sign 0079                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
 I2C_ADDRESS_SLAVE@address 0003                 ??_vfprintf 0060                    strcpy@d 0009  
                  strlen@a 0003                    strcpy@s 0007                    strlen@s 0001  
              ___fladd@grs 0010              ___xxtofl@sign 0009                  _TRISBbits 000F93  
              ___fldiv@grs 003B                ___fldiv@rem 0034           ?_LCD_I2C_Databus 0006  
              ___flmul@grs 001C             _ADC_Conversion 392E         LCD_I2C_nibble@ctrl 000A  
           _I2C_Write_Data 3988             __end_of___flge 2D24             __end_of___fleq 3552  
              vfpfcnvrt@ap 009B                vfpfcnvrt@ct 00A1                vfpfcnvrt@fp 0097  
           __end_of___wmul 390C             __end_of_efgtoa 1432             __end_of_floorf 26FE  
               floorf@F526 00C9               ?_Master_Mode 0001             __end_of_strcpy 3610  
           __end_of_strlen 38BA        start_initialization 390C                __end_of_pad 327A  
   __end_of_ADC_Conversion 394E      __end_of___fpclassifyf 2F24                ??_I2C_Start 0001  
   __end_of_I2C_Write_Data 39A4                vfprintf@fmt 00A7                   ??___flge 0030  
                 ??___fleq 0009                   ??___wmul 0005                   ??_efgtoa 0060  
                 ??_floorf 0045                   ??_strcpy 0005                   ??_strlen 0003  
                ___fladd@a 0005                  ___fladd@b 0001                  ___fldiv@a 002C  
                ___fldiv@b 0028                  ___flmul@a 0013                  ___flmul@b 000F  
                ___flsub@a 002C                  ___flsub@b 0028              __pcstackBANK0 0060  
          ?_ADC_Conversion 0001        LCD_I2C_Databus@data 0008        LCD_I2C_Databus@ctrl 0007  
           _LCD_I2C_nibble 396C                _efgtoa$1157 0067                _efgtoa$1149 0065  
              _efgtoa$1158 0069            ?_I2C_Write_Data 0001                   ?___fladd 0001  
                 ?___fldiv 0028                   ?___awdiv 0001                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 000F                   ?___flsub 0028  
                 ?___fltol 0001                __smallconst 0800                   ?_isdigit 0001  
                 _I2C_Stop 39BE                   _ADC_Read 3610                   ?_isspace 0001  
              ADC_Read@CHx 0005                   ?_isupper 0001                   ?_sprintf 00AD  
                 ?_tolower 0007              _PCF8574_Write 394E                   ?_strncmp 0001  
   __end_of_LCD_I2C_nibble 3988             ___wmul@product 0005    LCD_I2C_WriteText@string 000C  
                 _PIR1bits 000F9E                  _vfpfcnvrt 18F2                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0          ___wmul@multiplier 0001  
        LCD_I2C_nibble@cmd 0009               _isspace$1236 0007             ?_PCF8574_Write 0001  
               vfpfcnvrt@c 00A4                 vfpfcnvrt@f 009D            ?_LCD_I2C_nibble 0009  
                 __Hrparam 0000                 vfprintf@ap 00A9                   __Lrparam 0000  
               vfprintf@fp 00A5                 ?_vfpfcnvrt 0097         ___fpclassifyf@F465 00CD  
       LCD_I2C_Databus@cmd 0006                 sprintf@fmt 00AF                   ___xxtofl 26FE  
                 __ptext10 3884                   __ptext11 3798                   __ptext20 1D28  
                 __ptext12 30EA                   __ptext21 2C20                   __ptext13 39E2  
                 __ptext30 26FE                   __ptext22 34A8                   __ptext14 24EC  
                 __ptext31 39A4                   __ptext23 2152                   __ptext15 2E26  
                 __ptext40 38BA                   __ptext32 2D24                   __ptext24 33F8  
                 __ptext16 2B1A                   __ptext41 3610                   __ptext33 2A08  
                 __ptext25 327A                   __ptext17 3752                   __ptext42 392E  
                 __ptext34 396C                   __ptext26 28B2                   __ptext18 1432  
                 __ptext35 333E                   __ptext27 36BA                   __ptext19 3814  
                 __ptext36 394E                   __ptext28 384C                   __ptext37 3988  
                 __ptext29 38E6                   __ptext38 39BE                   __ptext39 39D0  
                 _bufferTx 00DF                 strcpy@dest 0001                   efgtoa@fp 0055  
                 efgtoa@ne 006F                   efgtoa@pp 006D                   efgtoa@ou 0073  
                 isa$xinst 000000                   _vfprintf 3552                   main@argc 00C2  
                 main@argv 00C4            ??_PCF8574_Write 0005           ??_ADC_Conversion 0001  
                 isdigit@c 0001                  sprintf@ap 00B5                   isspace@c 0001  
         ??_I2C_Write_Data 0001                  strcpy@src 0003                   isupper@c 0001  
                strncmp@_l 0001                  strncmp@_r 0003                efgtoa@nmode 007F  
            ?_LCD_I2C_Init 0001          PCF8574_Write@byte 0005                ??_vfpfcnvrt 005C  
                 sprintf@f 00B7                   tolower@c 0007                   sprintf@s 00AD  
                 strncmp@l 0008                   strncmp@n 0005                   strncmp@r 000A  
              _SSPCON1bits 000FC6                _SSPCON2bits 000FC5              ___fladd@signs 000D  
             ___fladd@aexp 000E               ___fladd@bexp 000F         I2C_Write_Data@data 0001  
